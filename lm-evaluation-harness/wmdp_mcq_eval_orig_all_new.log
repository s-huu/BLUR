2025-05-16:03:20:18,504 INFO     [__main__.py:279] Verbosity set to INFO
2025-05-16:03:20:18,631 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:18,634 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:18,637 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:18,639 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:18,642 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:18,644 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:18,647 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:18,650 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:18,652 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:18,655 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:18,658 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:18,661 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:18,665 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:18,668 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:18,671 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:18,674 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:18,677 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:18,681 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:18,684 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:18,687 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:18,690 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:18,693 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:18,696 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:18,699 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:18,702 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:18,705 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:18,707 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:18,710 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:18,713 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:18,716 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:18,719 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:18,722 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:18,725 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:18,728 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:18,731 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:18,734 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:19,411 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:19,415 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:19,418 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:19,422 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:19,425 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:19,429 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:19,432 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:19,436 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:19,439 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:19,443 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:19,446 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:19,450 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:19,454 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:19,458 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:19,462 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:19,466 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:19,469 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:19,473 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:19,477 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:19,481 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:19,484 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:19,488 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:19,491 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:19,495 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:19,498 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:19,501 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:19,504 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:19,509 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:19,512 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:19,516 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:19,519 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:19,522 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:19,525 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:20,245 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:20,247 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:20,250 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:20,252 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:20,255 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:20,257 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:20,260 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:20,262 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:20,265 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:20,267 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:20,270 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:20,272 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:20,275 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:20,277 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:20,279 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:20,282 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:20,580 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:20,582 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:20,584 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:20,586 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:20,587 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:20,589 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:20,624 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:20,649 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:20,652 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:20,656 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:20,660 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:20,663 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:20,667 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:20,671 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:20,674 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:20,680 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:20,683 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:20,687 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:20,690 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:20,694 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:20,698 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:20,701 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:20,705 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:20,709 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:20,712 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:20,716 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:20,719 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:20,723 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:20,727 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:20,730 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:20,734 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:20,737 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:20,741 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:20,745 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:20,748 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:20,752 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:20,756 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:20,759 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:20,763 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:20,766 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:20,770 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:20,774 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:20,777 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:20,781 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:20,785 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:20,789 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:20,793 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:20,796 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:20,800 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:20,804 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:20,808 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:20,812 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:20,815 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:20,819 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:20,823 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:20,827 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:20,830 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:20,834 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:20,839 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:20,843 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:20,847 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:20,847 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:20,848 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:20,848 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:20,849 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:20,849 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:20,849 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:20,850 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:20,929 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:20,932 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:20,935 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:20,938 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:20,940 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:20,943 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:20,946 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:20,949 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:20,951 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:20,954 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:20,957 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:20,959 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:20,962 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:20,965 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:20,967 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:20,970 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:20,973 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:20,975 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:20,978 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:20,981 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:20,983 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:20,986 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:20,988 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:20,991 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:20,993 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:20,996 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:20,998 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:21,001 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:21,003 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:21,006 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:21,009 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:21,011 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:21,014 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:21,016 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:21,019 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:21,021 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:21,024 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:21,026 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:21,028 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:21,031 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:21,033 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:21,036 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:21,038 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:21,040 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:21,043 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:21,045 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:21,048 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:21,050 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:21,052 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:21,055 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:21,057 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:21,060 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:21,062 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:21,065 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:21,067 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:21,070 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:21,072 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:21,075 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:21,078 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:21,080 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:21,083 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:21,085 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:21,088 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:21,090 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:21,093 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:21,096 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:21,098 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:21,101 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:21,103 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:21,106 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:21,109 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:21,111 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:21,114 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:21,116 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:21,119 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:21,121 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:21,124 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:21,126 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:21,128 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:21,131 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:21,133 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:21,136 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:21,138 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:21,141 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:21,143 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:21,146 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:21,148 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:21,151 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:22,087 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:22,120 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:22,122 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:22,124 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:22,125 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:22,127 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:22,129 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:22,131 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:22,964 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:22,966 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:22,967 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:22,969 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:22,970 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:22,972 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:22,973 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:22,975 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:22,976 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:22,978 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:22,979 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:22,981 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:22,982 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:22,984 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:22,985 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:22,987 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:22,988 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:22,990 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:22,991 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:22,993 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:22,994 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:22,996 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:22,998 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:22,999 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:23,001 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:23,002 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:23,004 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:23,006 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:23,007 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:23,009 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:23,010 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:23,012 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:23,014 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:23,015 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:23,017 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:23,018 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:23,020 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:23,022 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:23,023 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:23,025 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:23,027 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:23,028 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:23,030 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:23,031 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:23,033 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:23,035 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:23,036 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:23,038 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:23,039 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:23,041 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:23,043 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:23,044 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:23,046 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:23,047 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:23,049 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:23,051 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:23,052 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:23,054 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:23,056 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:23,057 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:23,059 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:23,060 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:23,062 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:23,064 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:23,065 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:23,067 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:23,069 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:23,070 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:23,072 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:23,074 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:23,075 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:23,077 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:23,078 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:23,080 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:23,082 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:23,083 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:23,085 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:23,086 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:23,088 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:23,090 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:23,091 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:23,093 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:23,094 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:23,096 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:23,097 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:23,099 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:23,101 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:23,102 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:23,104 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:23,105 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:23,107 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:23,109 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:23,110 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:23,112 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:23,114 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:23,115 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:23,117 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:23,118 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:23,120 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:23,122 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:23,123 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:23,125 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:23,127 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:23,128 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:23,130 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:23,131 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:23,133 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:23,135 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:23,136 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:23,138 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:23,139 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:23,141 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:23,143 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:23,144 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:23,146 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:23,148 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:23,149 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:23,151 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:23,152 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:23,154 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:23,156 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:23,157 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:23,159 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:23,161 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:23,162 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:23,164 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:23,166 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:23,167 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:23,169 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:23,170 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:23,172 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:23,174 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:23,175 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:23,177 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:23,178 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:23,180 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:23,182 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:23,183 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:23,185 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:23,187 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:23,188 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:23,190 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:23,191 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:23,193 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:23,195 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:23,196 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:23,198 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:23,200 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:23,201 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:23,203 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:23,204 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:23,206 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:23,208 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:23,209 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:23,211 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:23,212 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:23,214 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:23,215 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:23,217 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:23,219 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:23,220 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:23,222 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:23,223 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:23,225 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:23,226 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:23,228 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:23,230 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:23,231 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:23,233 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:23,234 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:23,235 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:23,237 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:23,238 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:23,239 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:23,241 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:23,242 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:23,244 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:23,245 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:23,246 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:23,248 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:23,249 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:23,251 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:23,252 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:23,253 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:23,255 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:23,256 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:23,257 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:23,259 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:23,260 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:23,262 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:23,263 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:23,264 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:23,266 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:23,267 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:23,269 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:23,270 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:23,271 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:23,273 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:23,274 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:23,275 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:23,277 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:23,278 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:23,280 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:23,281 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:23,282 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:23,284 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:23,285 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:23,287 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:23,288 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:23,289 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:23,291 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:23,292 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:23,294 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:23,295 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:23,296 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:23,298 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:23,299 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:23,300 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:23,302 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:23,303 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:23,305 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:23,306 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:23,307 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:23,309 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:23,310 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:23,311 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:23,313 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:23,314 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:23,316 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:23,317 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:23,318 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:23,320 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:23,321 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:23,322 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:23,324 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:23,325 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:23,326 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:23,328 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:23,329 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:23,331 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:23,332 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:23,333 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:23,335 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:23,336 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:23,337 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:23,339 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:23,340 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:23,342 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:23,343 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:23,344 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:23,346 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:23,347 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:23,348 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:23,350 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:23,351 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:23,352 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:23,354 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:23,355 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:23,356 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:23,358 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:23,359 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:23,361 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:23,362 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:23,363 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:23,365 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:23,366 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:23,367 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:23,369 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:23,370 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:23,371 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:23,373 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:23,374 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:23,376 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:23,377 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:23,378 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:23,380 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:23,381 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:23,382 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:23,384 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:23,385 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:23,386 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:23,388 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:23,389 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:23,391 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:23,392 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:23,393 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:23,456 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:23,458 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:23,461 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:23,463 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:23,465 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:23,468 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:23,470 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:25,574 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:25,577 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:20:25,581 INFO     [__main__.py:376] Selected Tasks: ['mmlu']
2025-05-16:03:20:25,585 INFO     [evaluator.py:161] Setting random seed to 0 | Setting numpy seed to 1234 | Setting torch manual seed to 1234
2025-05-16:03:20:25,585 INFO     [evaluator.py:198] Initializing hf model, with arguments: {'pretrained': 'shengyuanhu/wmdp_unlearn_rmu_150_1200_6.5_zephyr', 'tokenizer': 'HuggingFaceH4/zephyr-7b-beta'}
2025-05-16:03:20:26,151 INFO     [huggingface.py:130] Using device 'cuda:1'
2025-05-16:03:20:26,313 INFO     [huggingface.py:366] Model parallel was set to False, max memory was not set, and device map was set to {'': 'cuda:1'}
Loading checkpoint shards:   0%|          | 0/3 [00:00<?, ?it/s]Loading checkpoint shards:  33%|███▎      | 1/3 [00:01<00:03,  1.75s/it]Loading checkpoint shards:  67%|██████▋   | 2/3 [00:03<00:01,  1.54s/it]Loading checkpoint shards: 100%|██████████| 3/3 [00:04<00:00,  1.41s/it]Loading checkpoint shards: 100%|██████████| 3/3 [00:04<00:00,  1.47s/it]
2025-05-16:03:20:49,164 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:20:49,164 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:20:49,164 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:20:49,164 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:20:49,164 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:20:49,165 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:20:49,165 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:20:49,165 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:20:49,165 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:20:49,165 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:20:49,165 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:20:49,165 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:20:49,165 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:20:49,165 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:20:49,165 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:20:49,165 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:20:49,165 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:20:49,165 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:20:49,165 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:20:49,165 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:20:49,165 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:20:49,165 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:20:49,165 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:20:49,165 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:20:49,166 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:20:49,166 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:20:49,166 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:20:49,166 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:20:49,166 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:20:49,166 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:20:49,166 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:20:49,166 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:20:49,166 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:20:49,166 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:20:49,166 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:20:49,166 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:20:49,166 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:20:49,166 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:20:49,166 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:20:49,166 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:20:49,166 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:20:49,166 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:20:49,166 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:20:49,167 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:20:49,167 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:20:49,167 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:20:49,167 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:20:49,167 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:20:49,167 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:20:49,167 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:20:49,167 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:20:49,167 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:20:49,167 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:20:49,167 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:20:49,167 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:20:49,167 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:20:49,167 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:20:49,167 WARNING  [model.py:422] model.chat_template was called with the chat_template set to False or None. Therefore no chat template will be applied. Make sure this is an intended behavior.
2025-05-16:03:20:49,173 INFO     [task.py:428] Building contexts for mmlu_high_school_computer_science on rank 0...
  0%|          | 0/100 [00:00<?, ?it/s] 85%|████████▌ | 85/100 [00:00<00:00, 845.79it/s]100%|██████████| 100/100 [00:00<00:00, 823.12it/s]
2025-05-16:03:20:49,298 INFO     [task.py:428] Building contexts for mmlu_high_school_biology on rank 0...
  0%|          | 0/310 [00:00<?, ?it/s] 24%|██▎       | 73/310 [00:00<00:00, 728.43it/s] 47%|████▋     | 147/310 [00:00<00:00, 730.67it/s] 71%|███████▏  | 221/310 [00:00<00:00, 730.84it/s] 95%|█████████▌| 295/310 [00:00<00:00, 725.72it/s]100%|██████████| 310/310 [00:00<00:00, 727.24it/s]
2025-05-16:03:20:49,737 INFO     [task.py:428] Building contexts for mmlu_abstract_algebra on rank 0...
  0%|          | 0/100 [00:00<?, ?it/s] 74%|███████▍  | 74/100 [00:00<00:00, 732.71it/s]100%|██████████| 100/100 [00:00<00:00, 734.65it/s]
2025-05-16:03:20:49,879 INFO     [task.py:428] Building contexts for mmlu_electrical_engineering on rank 0...
  0%|          | 0/145 [00:00<?, ?it/s] 51%|█████     | 74/145 [00:00<00:00, 735.03it/s]100%|██████████| 145/145 [00:00<00:00, 725.09it/s]
2025-05-16:03:20:50,085 INFO     [task.py:428] Building contexts for mmlu_college_chemistry on rank 0...
  0%|          | 0/100 [00:00<?, ?it/s] 75%|███████▌  | 75/100 [00:00<00:00, 745.46it/s]100%|██████████| 100/100 [00:00<00:00, 745.31it/s]
2025-05-16:03:20:50,224 INFO     [task.py:428] Building contexts for mmlu_high_school_chemistry on rank 0...
  0%|          | 0/203 [00:00<?, ?it/s] 37%|███▋      | 75/203 [00:00<00:00, 742.36it/s] 74%|███████▍  | 150/203 [00:00<00:00, 742.33it/s]100%|██████████| 203/203 [00:00<00:00, 767.51it/s]
2025-05-16:03:20:50,497 INFO     [task.py:428] Building contexts for mmlu_astronomy on rank 0...
  0%|          | 0/152 [00:00<?, ?it/s] 54%|█████▍    | 82/152 [00:00<00:00, 817.24it/s]100%|██████████| 152/152 [00:00<00:00, 788.76it/s]
2025-05-16:03:20:50,697 INFO     [task.py:428] Building contexts for mmlu_college_physics on rank 0...
  0%|          | 0/102 [00:00<?, ?it/s] 75%|███████▍  | 76/102 [00:00<00:00, 755.52it/s]100%|██████████| 102/102 [00:00<00:00, 738.76it/s]
2025-05-16:03:20:50,839 INFO     [task.py:428] Building contexts for mmlu_college_computer_science on rank 0...
  0%|          | 0/100 [00:00<?, ?it/s] 76%|███████▌  | 76/100 [00:00<00:00, 750.07it/s]100%|██████████| 100/100 [00:00<00:00, 749.12it/s]
2025-05-16:03:20:50,978 INFO     [task.py:428] Building contexts for mmlu_college_biology on rank 0...
  0%|          | 0/144 [00:00<?, ?it/s] 53%|█████▎    | 76/144 [00:00<00:00, 753.17it/s]100%|██████████| 144/144 [00:00<00:00, 750.87it/s]
2025-05-16:03:20:51,176 INFO     [task.py:428] Building contexts for mmlu_conceptual_physics on rank 0...
  0%|          | 0/235 [00:00<?, ?it/s] 31%|███▏      | 74/235 [00:00<00:00, 735.22it/s] 63%|██████▎   | 148/235 [00:00<00:00, 730.26it/s] 95%|█████████▍| 223/235 [00:00<00:00, 738.83it/s]100%|██████████| 235/235 [00:00<00:00, 735.88it/s]
2025-05-16:03:20:51,505 INFO     [task.py:428] Building contexts for mmlu_machine_learning on rank 0...
  0%|          | 0/112 [00:00<?, ?it/s] 68%|██████▊   | 76/112 [00:00<00:00, 752.66it/s]100%|██████████| 112/112 [00:00<00:00, 750.69it/s]
2025-05-16:03:20:51,659 INFO     [task.py:428] Building contexts for mmlu_high_school_mathematics on rank 0...
  0%|          | 0/270 [00:00<?, ?it/s] 28%|██▊       | 76/270 [00:00<00:00, 740.01it/s] 56%|█████▋    | 152/270 [00:00<00:00, 746.35it/s] 84%|████████▍ | 227/270 [00:00<00:00, 747.04it/s]100%|██████████| 270/270 [00:00<00:00, 746.31it/s]
2025-05-16:03:20:52,032 INFO     [task.py:428] Building contexts for mmlu_computer_security on rank 0...
  0%|          | 0/100 [00:00<?, ?it/s] 76%|███████▌  | 76/100 [00:00<00:00, 752.87it/s]100%|██████████| 100/100 [00:00<00:00, 761.38it/s]
2025-05-16:03:20:52,168 INFO     [task.py:428] Building contexts for mmlu_college_mathematics on rank 0...
  0%|          | 0/100 [00:00<?, ?it/s] 87%|████████▋ | 87/100 [00:00<00:00, 865.12it/s]100%|██████████| 100/100 [00:00<00:00, 864.74it/s]
2025-05-16:03:20:52,288 INFO     [task.py:428] Building contexts for mmlu_anatomy on rank 0...
  0%|          | 0/135 [00:00<?, ?it/s] 61%|██████▏   | 83/135 [00:00<00:00, 826.31it/s]100%|██████████| 135/135 [00:00<00:00, 796.28it/s]
2025-05-16:03:20:52,463 INFO     [task.py:428] Building contexts for mmlu_elementary_mathematics on rank 0...
  0%|          | 0/378 [00:00<?, ?it/s] 20%|██        | 76/378 [00:00<00:00, 753.85it/s] 40%|████      | 152/378 [00:00<00:00, 750.17it/s] 60%|██████    | 228/378 [00:00<00:00, 752.09it/s] 80%|████████  | 304/378 [00:00<00:00, 751.07it/s]100%|██████████| 378/378 [00:00<00:00, 747.83it/s]
2025-05-16:03:20:52,983 INFO     [task.py:428] Building contexts for mmlu_high_school_physics on rank 0...
  0%|          | 0/151 [00:00<?, ?it/s] 50%|█████     | 76/151 [00:00<00:00, 752.40it/s]100%|██████████| 151/151 [00:00<00:00, 752.20it/s]
2025-05-16:03:20:53,191 INFO     [task.py:428] Building contexts for mmlu_high_school_statistics on rank 0...
  0%|          | 0/216 [00:00<?, ?it/s] 35%|███▍      | 75/216 [00:00<00:00, 749.87it/s] 70%|██████▉   | 151/216 [00:00<00:00, 753.79it/s]100%|██████████| 216/216 [00:00<00:00, 753.19it/s]
2025-05-16:03:20:53,487 INFO     [task.py:428] Building contexts for mmlu_clinical_knowledge on rank 0...
  0%|          | 0/265 [00:00<?, ?it/s] 28%|██▊       | 75/265 [00:00<00:00, 747.93it/s] 57%|█████▋    | 150/265 [00:00<00:00, 735.75it/s] 85%|████████▍ | 224/265 [00:00<00:00, 737.40it/s]100%|██████████| 265/265 [00:00<00:00, 739.41it/s]
2025-05-16:03:20:53,856 INFO     [task.py:428] Building contexts for mmlu_business_ethics on rank 0...
  0%|          | 0/100 [00:00<?, ?it/s] 76%|███████▌  | 76/100 [00:00<00:00, 754.04it/s]100%|██████████| 100/100 [00:00<00:00, 753.13it/s]
2025-05-16:03:20:53,994 INFO     [task.py:428] Building contexts for mmlu_management on rank 0...
  0%|          | 0/103 [00:00<?, ?it/s] 74%|███████▍  | 76/103 [00:00<00:00, 751.54it/s]100%|██████████| 103/103 [00:00<00:00, 750.58it/s]
2025-05-16:03:20:54,135 INFO     [task.py:428] Building contexts for mmlu_nutrition on rank 0...
  0%|          | 0/306 [00:00<?, ?it/s] 25%|██▍       | 75/306 [00:00<00:00, 749.39it/s] 49%|████▉     | 150/306 [00:00<00:00, 741.75it/s] 74%|███████▍  | 226/306 [00:00<00:00, 746.04it/s] 99%|█████████▊| 302/306 [00:00<00:00, 747.71it/s]100%|██████████| 306/306 [00:00<00:00, 746.57it/s]
2025-05-16:03:20:54,557 INFO     [task.py:428] Building contexts for mmlu_college_medicine on rank 0...
  0%|          | 0/173 [00:00<?, ?it/s] 46%|████▌     | 80/173 [00:00<00:00, 796.61it/s] 97%|█████████▋| 168/173 [00:00<00:00, 842.82it/s]100%|██████████| 173/173 [00:00<00:00, 835.82it/s]
2025-05-16:03:20:54,772 INFO     [task.py:428] Building contexts for mmlu_virology on rank 0...
  0%|          | 0/166 [00:00<?, ?it/s] 52%|█████▏    | 87/166 [00:00<00:00, 864.49it/s]100%|██████████| 166/166 [00:00<00:00, 839.55it/s]
2025-05-16:03:20:54,976 INFO     [task.py:428] Building contexts for mmlu_professional_medicine on rank 0...
  0%|          | 0/272 [00:00<?, ?it/s] 28%|██▊       | 75/272 [00:00<00:00, 746.03it/s] 55%|█████▌    | 150/272 [00:00<00:00, 739.80it/s] 83%|████████▎ | 225/272 [00:00<00:00, 742.39it/s]100%|██████████| 272/272 [00:00<00:00, 743.27it/s]
2025-05-16:03:20:55,353 INFO     [task.py:428] Building contexts for mmlu_miscellaneous on rank 0...
  0%|          | 0/783 [00:00<?, ?it/s] 10%|▉         | 76/783 [00:00<00:00, 750.07it/s] 19%|█▉        | 152/783 [00:00<00:00, 750.84it/s] 29%|██▉       | 228/783 [00:00<00:00, 753.88it/s] 39%|███▉      | 304/783 [00:00<00:00, 753.94it/s] 49%|████▊     | 380/783 [00:00<00:00, 752.57it/s] 58%|█████▊    | 456/783 [00:00<00:00, 747.87it/s] 68%|██████▊   | 531/783 [00:00<00:00, 747.22it/s] 78%|███████▊  | 607/783 [00:00<00:00, 749.51it/s] 87%|████████▋ | 683/783 [00:00<00:00, 751.50it/s] 97%|█████████▋| 759/783 [00:01<00:00, 751.74it/s]100%|██████████| 783/783 [00:01<00:00, 750.91it/s]
2025-05-16:03:20:56,425 INFO     [task.py:428] Building contexts for mmlu_medical_genetics on rank 0...
  0%|          | 0/100 [00:00<?, ?it/s] 75%|███████▌  | 75/100 [00:00<00:00, 748.31it/s]100%|██████████| 100/100 [00:00<00:00, 747.11it/s]
2025-05-16:03:20:56,564 INFO     [task.py:428] Building contexts for mmlu_global_facts on rank 0...
  0%|          | 0/100 [00:00<?, ?it/s] 76%|███████▌  | 76/100 [00:00<00:00, 751.17it/s]100%|██████████| 100/100 [00:00<00:00, 750.60it/s]
2025-05-16:03:20:56,702 INFO     [task.py:428] Building contexts for mmlu_professional_accounting on rank 0...
  0%|          | 0/282 [00:00<?, ?it/s] 27%|██▋       | 76/282 [00:00<00:00, 751.50it/s] 54%|█████▍    | 152/282 [00:00<00:00, 750.27it/s] 81%|████████  | 228/282 [00:00<00:00, 741.74it/s]100%|██████████| 282/282 [00:00<00:00, 744.09it/s]
2025-05-16:03:20:57,092 INFO     [task.py:428] Building contexts for mmlu_marketing on rank 0...
  0%|          | 0/234 [00:00<?, ?it/s]  8%|▊         | 19/234 [00:00<00:03, 67.41it/s] 41%|████      | 95/234 [00:00<00:00, 298.97it/s] 73%|███████▎  | 170/234 [00:00<00:00, 444.22it/s]100%|██████████| 234/234 [00:00<00:00, 410.41it/s]
2025-05-16:03:20:57,672 INFO     [task.py:428] Building contexts for mmlu_human_aging on rank 0...
  0%|          | 0/223 [00:00<?, ?it/s] 34%|███▎      | 75/223 [00:00<00:00, 743.12it/s] 67%|██████▋   | 150/223 [00:00<00:00, 742.95it/s]100%|██████████| 223/223 [00:00<00:00, 733.71it/s]
2025-05-16:03:20:57,985 INFO     [task.py:428] Building contexts for mmlu_public_relations on rank 0...
  0%|          | 0/110 [00:00<?, ?it/s] 71%|███████   | 78/110 [00:00<00:00, 773.86it/s]100%|██████████| 110/110 [00:00<00:00, 785.37it/s]
2025-05-16:03:20:58,131 INFO     [task.py:428] Building contexts for mmlu_sociology on rank 0...
  0%|          | 0/201 [00:00<?, ?it/s] 43%|████▎     | 86/201 [00:00<00:00, 856.95it/s] 87%|████████▋ | 174/201 [00:00<00:00, 867.70it/s]100%|██████████| 201/201 [00:00<00:00, 864.55it/s]
2025-05-16:03:20:58,370 INFO     [task.py:428] Building contexts for mmlu_high_school_geography on rank 0...
  0%|          | 0/198 [00:00<?, ?it/s] 38%|███▊      | 76/198 [00:00<00:00, 752.12it/s] 77%|███████▋  | 152/198 [00:00<00:00, 754.02it/s]100%|██████████| 198/198 [00:00<00:00, 753.25it/s]
2025-05-16:03:20:58,641 INFO     [task.py:428] Building contexts for mmlu_security_studies on rank 0...
  0%|          | 0/245 [00:00<?, ?it/s] 31%|███       | 75/245 [00:00<00:00, 749.64it/s] 61%|██████    | 150/245 [00:00<00:00, 749.60it/s] 92%|█████████▏| 225/245 [00:00<00:00, 748.37it/s]100%|██████████| 245/245 [00:00<00:00, 747.90it/s]
2025-05-16:03:20:58,978 INFO     [task.py:428] Building contexts for mmlu_high_school_psychology on rank 0...
  0%|          | 0/545 [00:00<?, ?it/s] 14%|█▍        | 75/545 [00:00<00:00, 749.12it/s] 28%|██▊       | 150/545 [00:00<00:00, 728.18it/s] 41%|████▏     | 226/545 [00:00<00:00, 738.24it/s] 55%|█████▌    | 302/545 [00:00<00:00, 744.45it/s] 69%|██████▉   | 377/545 [00:00<00:00, 745.89it/s] 83%|████████▎ | 452/545 [00:00<00:00, 745.00it/s] 97%|█████████▋| 527/545 [00:00<00:00, 746.07it/s]100%|██████████| 545/545 [00:00<00:00, 743.74it/s]
2025-05-16:03:20:59,732 INFO     [task.py:428] Building contexts for mmlu_us_foreign_policy on rank 0...
  0%|          | 0/100 [00:00<?, ?it/s] 75%|███████▌  | 75/100 [00:00<00:00, 742.32it/s]100%|██████████| 100/100 [00:00<00:00, 744.35it/s]
2025-05-16:03:20:59,871 INFO     [task.py:428] Building contexts for mmlu_high_school_macroeconomics on rank 0...
  0%|          | 0/390 [00:00<?, ?it/s] 19%|█▉        | 76/390 [00:00<00:00, 751.85it/s] 39%|███▉      | 152/390 [00:00<00:00, 751.89it/s] 58%|█████▊    | 228/390 [00:00<00:00, 752.48it/s] 78%|███████▊  | 304/390 [00:00<00:00, 753.46it/s] 97%|█████████▋| 380/390 [00:00<00:00, 746.96it/s]100%|██████████| 390/390 [00:00<00:00, 748.93it/s]
2025-05-16:03:21:00,408 INFO     [task.py:428] Building contexts for mmlu_high_school_microeconomics on rank 0...
  0%|          | 0/238 [00:00<?, ?it/s] 32%|███▏      | 75/238 [00:00<00:00, 749.26it/s] 63%|██████▎   | 150/238 [00:00<00:00, 748.42it/s] 95%|█████████▍| 226/238 [00:00<00:00, 750.60it/s]100%|██████████| 238/238 [00:00<00:00, 749.58it/s]
2025-05-16:03:21:00,735 INFO     [task.py:428] Building contexts for mmlu_econometrics on rank 0...
  0%|          | 0/114 [00:00<?, ?it/s] 67%|██████▋   | 76/114 [00:00<00:00, 750.42it/s]100%|██████████| 114/114 [00:00<00:00, 747.69it/s]
2025-05-16:03:21:00,893 INFO     [task.py:428] Building contexts for mmlu_professional_psychology on rank 0...
  0%|          | 0/612 [00:00<?, ?it/s] 12%|█▏        | 75/612 [00:00<00:00, 746.31it/s] 25%|██▍       | 150/612 [00:00<00:00, 746.41it/s] 37%|███▋      | 226/612 [00:00<00:00, 749.20it/s] 49%|████▉     | 301/612 [00:00<00:00, 748.46it/s] 61%|██████▏   | 376/612 [00:00<00:00, 746.83it/s] 74%|███████▍  | 452/612 [00:00<00:00, 748.92it/s] 86%|████████▋ | 528/612 [00:00<00:00, 749.83it/s] 99%|█████████▊| 603/612 [00:00<00:00, 749.30it/s]100%|██████████| 612/612 [00:00<00:00, 748.64it/s]
2025-05-16:03:21:01,734 INFO     [task.py:428] Building contexts for mmlu_human_sexuality on rank 0...
  0%|          | 0/131 [00:00<?, ?it/s] 50%|█████     | 66/131 [00:00<00:00, 657.25it/s]100%|██████████| 131/131 [00:00<00:00, 702.14it/s]
2025-05-16:03:21:01,926 INFO     [task.py:428] Building contexts for mmlu_high_school_government_and_politics on rank 0...
  0%|          | 0/193 [00:00<?, ?it/s] 42%|████▏     | 81/193 [00:00<00:00, 808.76it/s] 87%|████████▋ | 168/193 [00:00<00:00, 840.94it/s]100%|██████████| 193/193 [00:00<00:00, 838.55it/s]
2025-05-16:03:21:02,165 INFO     [task.py:428] Building contexts for mmlu_moral_scenarios on rank 0...
  0%|          | 0/895 [00:00<?, ?it/s] 10%|▉         | 87/895 [00:00<00:00, 869.29it/s] 19%|█▉        | 174/895 [00:00<00:00, 863.37it/s] 29%|██▉       | 261/895 [00:00<00:00, 866.16it/s] 39%|███▉      | 348/895 [00:00<00:00, 852.19it/s] 48%|████▊     | 434/895 [00:00<00:00, 814.72it/s] 58%|█████▊    | 516/895 [00:00<00:00, 794.51it/s] 67%|██████▋   | 596/895 [00:00<00:00, 780.50it/s] 75%|███████▌  | 675/895 [00:00<00:00, 773.06it/s] 84%|████████▍ | 753/895 [00:00<00:00, 767.85it/s] 93%|█████████▎| 830/895 [00:01<00:00, 758.64it/s]100%|██████████| 895/895 [00:01<00:00, 789.91it/s]
2025-05-16:03:21:03,328 INFO     [task.py:428] Building contexts for mmlu_high_school_world_history on rank 0...
  0%|          | 0/237 [00:00<?, ?it/s] 32%|███▏      | 76/237 [00:00<00:00, 752.51it/s] 64%|██████▍   | 152/237 [00:00<00:00, 756.43it/s] 96%|█████████▌| 228/237 [00:00<00:00, 757.15it/s]100%|██████████| 237/237 [00:00<00:00, 754.86it/s]
2025-05-16:03:21:03,652 INFO     [task.py:428] Building contexts for mmlu_high_school_european_history on rank 0...
  0%|          | 0/165 [00:00<?, ?it/s] 46%|████▌     | 76/165 [00:00<00:00, 752.41it/s] 92%|█████████▏| 152/165 [00:00<00:00, 754.07it/s]100%|██████████| 165/165 [00:00<00:00, 752.98it/s]
2025-05-16:03:21:03,879 INFO     [task.py:428] Building contexts for mmlu_philosophy on rank 0...
  0%|          | 0/311 [00:00<?, ?it/s] 24%|██▍       | 76/311 [00:00<00:00, 755.86it/s] 49%|████▉     | 153/311 [00:00<00:00, 758.81it/s] 74%|███████▎  | 229/311 [00:00<00:00, 758.19it/s] 98%|█████████▊| 306/311 [00:00<00:00, 759.57it/s]100%|██████████| 311/311 [00:00<00:00, 758.42it/s]
2025-05-16:03:21:04,301 INFO     [task.py:428] Building contexts for mmlu_moral_disputes on rank 0...
  0%|          | 0/346 [00:00<?, ?it/s] 22%|██▏       | 77/346 [00:00<00:00, 760.28it/s] 45%|████▍     | 154/346 [00:00<00:00, 761.36it/s] 67%|██████▋   | 231/346 [00:00<00:00, 757.90it/s] 89%|████████▊ | 307/346 [00:00<00:00, 755.71it/s]100%|██████████| 346/346 [00:00<00:00, 756.48it/s]
2025-05-16:03:21:04,772 INFO     [task.py:428] Building contexts for mmlu_high_school_us_history on rank 0...
  0%|          | 0/204 [00:00<?, ?it/s] 37%|███▋      | 75/204 [00:00<00:00, 746.81it/s] 74%|███████▎  | 150/204 [00:00<00:00, 734.92it/s]100%|██████████| 204/204 [00:00<00:00, 739.54it/s]
2025-05-16:03:21:05,056 INFO     [task.py:428] Building contexts for mmlu_international_law on rank 0...
  0%|          | 0/121 [00:00<?, ?it/s] 62%|██████▏   | 75/121 [00:00<00:00, 747.93it/s]100%|██████████| 121/121 [00:00<00:00, 748.13it/s]
2025-05-16:03:21:05,224 INFO     [task.py:428] Building contexts for mmlu_professional_law on rank 0...
  0%|          | 0/1534 [00:00<?, ?it/s]  5%|▍         | 75/1534 [00:00<00:01, 740.53it/s] 10%|▉         | 151/1534 [00:00<00:01, 748.46it/s] 15%|█▍        | 228/1534 [00:00<00:01, 755.25it/s] 20%|█▉        | 305/1534 [00:00<00:01, 757.41it/s] 25%|██▍       | 381/1534 [00:00<00:01, 757.59it/s] 30%|██▉       | 458/1534 [00:00<00:01, 759.42it/s] 35%|███▌      | 538/1534 [00:00<00:01, 769.99it/s] 41%|████      | 624/1534 [00:00<00:01, 797.53it/s] 46%|████▋     | 712/1534 [00:00<00:00, 822.65it/s] 52%|█████▏    | 799/1534 [00:01<00:00, 836.86it/s] 58%|█████▊    | 883/1534 [00:01<00:00, 825.06it/s] 63%|██████▎   | 966/1534 [00:01<00:00, 805.48it/s] 68%|██████▊   | 1047/1534 [00:01<00:00, 786.14it/s] 73%|███████▎  | 1126/1534 [00:01<00:00, 776.41it/s] 78%|███████▊  | 1204/1534 [00:01<00:00, 772.12it/s] 84%|████████▎ | 1282/1534 [00:01<00:00, 768.76it/s] 89%|████████▊ | 1359/1534 [00:01<00:00, 765.58it/s] 94%|█████████▎| 1436/1534 [00:01<00:00, 763.46it/s] 99%|█████████▊| 1513/1534 [00:01<00:00, 762.61it/s]100%|██████████| 1534/1534 [00:01<00:00, 778.00it/s]
2025-05-16:03:21:07,255 INFO     [task.py:428] Building contexts for mmlu_world_religions on rank 0...
  0%|          | 0/171 [00:00<?, ?it/s] 45%|████▌     | 77/171 [00:00<00:00, 760.96it/s] 90%|█████████ | 154/171 [00:00<00:00, 757.51it/s]100%|██████████| 171/171 [00:00<00:00, 758.33it/s]
2025-05-16:03:21:07,488 INFO     [task.py:428] Building contexts for mmlu_jurisprudence on rank 0...
  0%|          | 0/108 [00:00<?, ?it/s] 71%|███████▏  | 77/108 [00:00<00:00, 765.15it/s]100%|██████████| 108/108 [00:00<00:00, 767.02it/s]
2025-05-16:03:21:07,634 INFO     [task.py:428] Building contexts for mmlu_formal_logic on rank 0...
  0%|          | 0/126 [00:00<?, ?it/s] 60%|██████    | 76/126 [00:00<00:00, 755.90it/s]100%|██████████| 126/126 [00:00<00:00, 756.93it/s]
2025-05-16:03:21:07,806 INFO     [task.py:428] Building contexts for mmlu_prehistory on rank 0...
  0%|          | 0/324 [00:00<?, ?it/s] 23%|██▎       | 76/324 [00:00<00:00, 756.01it/s] 47%|████▋     | 152/324 [00:00<00:00, 269.27it/s] 70%|███████   | 228/324 [00:00<00:00, 381.62it/s] 94%|█████████▍| 304/324 [00:00<00:00, 474.61it/s]100%|██████████| 324/324 [00:00<00:00, 439.58it/s]
2025-05-16:03:21:08,555 INFO     [task.py:428] Building contexts for mmlu_logical_fallacies on rank 0...
  0%|          | 0/163 [00:00<?, ?it/s] 45%|████▌     | 74/163 [00:00<00:00, 731.81it/s] 91%|█████████▏| 149/163 [00:00<00:00, 740.64it/s]100%|██████████| 163/163 [00:00<00:00, 739.82it/s]
2025-05-16:03:21:08,783 INFO     [evaluator.py:485] Running loglikelihood requests
Running loglikelihood requests:   0%|          | 0/56168 [00:00<?, ?it/s]Starting from v4.46, the `logits` model output will have the same type as the model (except at train time, where it will always be FP32)
Running loglikelihood requests:   0%|          | 1/56168 [00:02<31:21:14,  2.01s/it]Running loglikelihood requests:   0%|          | 65/56168 [00:02<34:06, 27.41it/s]  Running loglikelihood requests:   0%|          | 129/56168 [00:03<21:43, 42.99it/s]Running loglikelihood requests:   0%|          | 193/56168 [00:04<17:17, 53.94it/s]Running loglikelihood requests:   0%|          | 257/56168 [00:05<15:06, 61.70it/s]Running loglikelihood requests:   1%|          | 321/56168 [00:06<13:44, 67.74it/s]Running loglikelihood requests:   1%|          | 385/56168 [00:07<12:49, 72.49it/s]Running loglikelihood requests:   1%|          | 449/56168 [00:07<12:10, 76.31it/s]Running loglikelihood requests:   1%|          | 513/56168 [00:08<11:39, 79.55it/s]Running loglikelihood requests:   1%|          | 577/56168 [00:09<11:11, 82.73it/s]Running loglikelihood requests:   1%|          | 641/56168 [00:09<10:51, 85.23it/s]Running loglikelihood requests:   1%|▏         | 705/56168 [00:10<10:33, 87.56it/s]Running loglikelihood requests:   1%|▏         | 769/56168 [00:11<10:19, 89.44it/s]Running loglikelihood requests:   1%|▏         | 833/56168 [00:11<10:06, 91.26it/s]Running loglikelihood requests:   2%|▏         | 897/56168 [00:12<09:56, 92.72it/s]Running loglikelihood requests:   2%|▏         | 961/56168 [00:13<09:42, 94.72it/s]Running loglikelihood requests:   2%|▏         | 1025/56168 [00:13<09:32, 96.31it/s]Running loglikelihood requests:   2%|▏         | 1089/56168 [00:14<09:22, 97.89it/s]Running loglikelihood requests:   2%|▏         | 1153/56168 [00:15<09:13, 99.31it/s]Running loglikelihood requests:   2%|▏         | 1217/56168 [00:15<09:05, 100.79it/s]Running loglikelihood requests:   2%|▏         | 1281/56168 [00:16<08:57, 102.11it/s]Running loglikelihood requests:   2%|▏         | 1345/56168 [00:16<08:51, 103.11it/s]Running loglikelihood requests:   3%|▎         | 1409/56168 [00:17<08:39, 105.35it/s]Running loglikelihood requests:   3%|▎         | 1473/56168 [00:18<08:30, 107.20it/s]Running loglikelihood requests:   3%|▎         | 1537/56168 [00:18<08:22, 108.66it/s]Running loglikelihood requests:   3%|▎         | 1601/56168 [00:19<08:16, 109.89it/s]Running loglikelihood requests:   3%|▎         | 1665/56168 [00:19<08:10, 111.16it/s]Running loglikelihood requests:   3%|▎         | 1729/56168 [00:20<08:04, 112.37it/s]Running loglikelihood requests:   3%|▎         | 1793/56168 [00:20<08:00, 113.24it/s]Running loglikelihood requests:   3%|▎         | 1857/56168 [00:21<07:55, 114.12it/s]Running loglikelihood requests:   3%|▎         | 1921/56168 [00:22<07:50, 115.29it/s]Running loglikelihood requests:   4%|▎         | 1985/56168 [00:22<07:45, 116.38it/s]Running loglikelihood requests:   4%|▎         | 2049/56168 [00:23<07:42, 116.92it/s]Running loglikelihood requests:   4%|▍         | 2113/56168 [00:23<07:39, 117.61it/s]Running loglikelihood requests:   4%|▍         | 2177/56168 [00:24<07:33, 118.97it/s]Running loglikelihood requests:   4%|▍         | 2241/56168 [00:24<07:28, 120.17it/s]Running loglikelihood requests:   4%|▍         | 2305/56168 [00:25<07:25, 120.96it/s]Running loglikelihood requests:   4%|▍         | 2369/56168 [00:25<07:19, 122.29it/s]Running loglikelihood requests:   4%|▍         | 2433/56168 [00:26<07:16, 123.19it/s]Running loglikelihood requests:   4%|▍         | 2497/56168 [00:26<07:12, 124.09it/s]Running loglikelihood requests:   5%|▍         | 2561/56168 [00:27<07:09, 124.74it/s]Running loglikelihood requests:   5%|▍         | 2625/56168 [00:27<07:04, 126.18it/s]Running loglikelihood requests:   5%|▍         | 2689/56168 [00:28<07:00, 127.19it/s]Running loglikelihood requests:   5%|▍         | 2753/56168 [00:28<06:57, 128.09it/s]Running loglikelihood requests:   5%|▌         | 2817/56168 [00:29<06:54, 128.75it/s]Running loglikelihood requests:   5%|▌         | 2881/56168 [00:29<06:52, 129.30it/s]Running loglikelihood requests:   5%|▌         | 2945/56168 [00:30<06:49, 129.90it/s]Running loglikelihood requests:   5%|▌         | 3009/56168 [00:30<06:47, 130.46it/s]Running loglikelihood requests:   5%|▌         | 3073/56168 [00:31<06:44, 131.33it/s]Running loglikelihood requests:   6%|▌         | 3137/56168 [00:31<06:41, 132.07it/s]Running loglikelihood requests:   6%|▌         | 3201/56168 [00:32<06:39, 132.67it/s]Running loglikelihood requests:   6%|▌         | 3265/56168 [00:32<06:37, 133.21it/s]Running loglikelihood requests:   6%|▌         | 3329/56168 [00:33<06:35, 133.49it/s]Running loglikelihood requests:   6%|▌         | 3393/56168 [00:33<06:33, 133.96it/s]Running loglikelihood requests:   6%|▌         | 3457/56168 [00:34<06:32, 134.22it/s]Running loglikelihood requests:   6%|▋         | 3521/56168 [00:34<06:30, 134.69it/s]Running loglikelihood requests:   6%|▋         | 3585/56168 [00:34<06:29, 134.90it/s]Running loglikelihood requests:   6%|▋         | 3649/56168 [00:35<06:26, 135.97it/s]Running loglikelihood requests:   7%|▋         | 3713/56168 [00:35<06:23, 136.64it/s]Running loglikelihood requests:   7%|▋         | 3777/56168 [00:36<06:21, 137.29it/s]Running loglikelihood requests:   7%|▋         | 3841/56168 [00:36<06:19, 137.87it/s]Running loglikelihood requests:   7%|▋         | 3905/56168 [00:37<06:17, 138.40it/s]Running loglikelihood requests:   7%|▋         | 3969/56168 [00:37<06:15, 138.83it/s]Running loglikelihood requests:   7%|▋         | 4033/56168 [00:38<06:14, 139.03it/s]Running loglikelihood requests:   7%|▋         | 4097/56168 [00:38<06:07, 141.55it/s]Running loglikelihood requests:   7%|▋         | 4161/56168 [00:39<06:03, 143.27it/s]Running loglikelihood requests:   8%|▊         | 4225/56168 [00:39<05:58, 144.71it/s]Running loglikelihood requests:   8%|▊         | 4289/56168 [00:39<05:55, 145.75it/s]Running loglikelihood requests:   8%|▊         | 4353/56168 [00:40<05:53, 146.62it/s]Running loglikelihood requests:   8%|▊         | 4417/56168 [00:40<05:51, 147.30it/s]Running loglikelihood requests:   8%|▊         | 4481/56168 [00:41<05:49, 147.74it/s]Running loglikelihood requests:   8%|▊         | 4545/56168 [00:41<05:47, 148.41it/s]Running loglikelihood requests:   8%|▊         | 4609/56168 [00:42<05:45, 149.02it/s]Running loglikelihood requests:   8%|▊         | 4673/56168 [00:42<05:42, 150.25it/s]Running loglikelihood requests:   8%|▊         | 4737/56168 [00:42<05:40, 151.08it/s]Running loglikelihood requests:   9%|▊         | 4801/56168 [00:43<05:38, 151.84it/s]Running loglikelihood requests:   9%|▊         | 4865/56168 [00:43<05:36, 152.32it/s]Running loglikelihood requests:   9%|▉         | 4929/56168 [00:44<05:35, 152.94it/s]Running loglikelihood requests:   9%|▉         | 4993/56168 [00:44<05:33, 153.46it/s]Running loglikelihood requests:   9%|▉         | 5057/56168 [00:44<05:32, 153.57it/s]Running loglikelihood requests:   9%|▉         | 5121/56168 [00:45<05:31, 154.11it/s]Running loglikelihood requests:   9%|▉         | 5185/56168 [00:45<05:29, 154.63it/s]Running loglikelihood requests:   9%|▉         | 5249/56168 [00:46<05:26, 155.98it/s]Running loglikelihood requests:   9%|▉         | 5313/56168 [00:46<05:23, 157.21it/s]Running loglikelihood requests:  10%|▉         | 5377/56168 [00:46<05:21, 157.89it/s]Running loglikelihood requests:  10%|▉         | 5441/56168 [00:47<05:19, 158.57it/s]Running loglikelihood requests:  10%|▉         | 5505/56168 [00:47<05:17, 159.36it/s]Running loglikelihood requests:  10%|▉         | 5569/56168 [00:48<05:16, 159.79it/s]Running loglikelihood requests:  10%|█         | 5633/56168 [00:48<05:15, 160.14it/s]Running loglikelihood requests:  10%|█         | 5697/56168 [00:48<05:14, 160.56it/s]Running loglikelihood requests:  10%|█         | 5761/56168 [00:49<05:13, 160.83it/s]Running loglikelihood requests:  10%|█         | 5825/56168 [00:49<05:12, 161.30it/s]Running loglikelihood requests:  10%|█         | 5889/56168 [00:50<05:09, 162.40it/s]Running loglikelihood requests:  11%|█         | 5953/56168 [00:50<05:07, 163.55it/s]Running loglikelihood requests:  11%|█         | 6017/56168 [00:50<05:05, 164.25it/s]Running loglikelihood requests:  11%|█         | 6081/56168 [00:51<05:03, 164.77it/s]Running loglikelihood requests:  11%|█         | 6145/56168 [00:51<05:02, 165.38it/s]Running loglikelihood requests:  11%|█         | 6209/56168 [00:52<05:01, 165.84it/s]Running loglikelihood requests:  11%|█         | 6273/56168 [00:52<04:58, 167.12it/s]Running loglikelihood requests:  11%|█▏        | 6337/56168 [00:52<04:56, 168.23it/s]Running loglikelihood requests:  11%|█▏        | 6401/56168 [00:53<04:54, 169.15it/s]Running loglikelihood requests:  12%|█▏        | 6465/56168 [00:53<04:53, 169.56it/s]Running loglikelihood requests:  12%|█▏        | 6529/56168 [00:53<04:51, 170.25it/s]Running loglikelihood requests:  12%|█▏        | 6593/56168 [00:54<04:50, 170.81it/s]Running loglikelihood requests:  12%|█▏        | 6657/56168 [00:54<04:49, 171.27it/s]Running loglikelihood requests:  12%|█▏        | 6721/56168 [00:55<04:45, 172.99it/s]Running loglikelihood requests:  12%|█▏        | 6785/56168 [00:55<04:41, 175.13it/s]Running loglikelihood requests:  12%|█▏        | 6849/56168 [00:55<04:39, 176.62it/s]Running loglikelihood requests:  12%|█▏        | 6913/56168 [00:56<04:36, 178.02it/s]Running loglikelihood requests:  12%|█▏        | 6977/56168 [00:56<04:34, 179.16it/s]Running loglikelihood requests:  13%|█▎        | 7041/56168 [00:56<04:33, 179.92it/s]Running loglikelihood requests:  13%|█▎        | 7105/56168 [00:57<04:31, 180.66it/s]Running loglikelihood requests:  13%|█▎        | 7169/56168 [00:57<04:30, 181.11it/s]Running loglikelihood requests:  13%|█▎        | 7233/56168 [00:57<04:29, 181.72it/s]Running loglikelihood requests:  13%|█▎        | 7297/56168 [00:58<04:28, 182.32it/s]Running loglikelihood requests:  13%|█▎        | 7361/56168 [00:58<04:27, 182.39it/s]Running loglikelihood requests:  13%|█▎        | 7425/56168 [00:58<04:26, 182.73it/s]Running loglikelihood requests:  13%|█▎        | 7489/56168 [00:59<04:25, 183.30it/s]Running loglikelihood requests:  13%|█▎        | 7553/56168 [00:59<04:23, 184.38it/s]Running loglikelihood requests:  14%|█▎        | 7617/56168 [00:59<04:22, 185.23it/s]Running loglikelihood requests:  14%|█▎        | 7681/56168 [01:00<04:20, 186.05it/s]Running loglikelihood requests:  14%|█▍        | 7745/56168 [01:00<04:18, 187.35it/s]Running loglikelihood requests:  14%|█▍        | 7809/56168 [01:00<04:18, 187.27it/s]Running loglikelihood requests:  14%|█▍        | 7873/56168 [01:01<04:16, 188.50it/s]Running loglikelihood requests:  14%|█▍        | 7937/56168 [01:01<04:14, 189.52it/s]Running loglikelihood requests:  14%|█▍        | 8001/56168 [01:01<04:13, 189.90it/s]Running loglikelihood requests:  14%|█▍        | 8065/56168 [01:02<04:13, 189.93it/s]Running loglikelihood requests:  14%|█▍        | 8129/56168 [01:02<04:11, 190.69it/s]Running loglikelihood requests:  15%|█▍        | 8193/56168 [01:02<04:08, 192.67it/s]Running loglikelihood requests:  15%|█▍        | 8257/56168 [01:03<04:06, 194.20it/s]Running loglikelihood requests:  15%|█▍        | 8321/56168 [01:03<04:04, 195.41it/s]Running loglikelihood requests:  15%|█▍        | 8385/56168 [01:03<04:03, 196.19it/s]Running loglikelihood requests:  15%|█▌        | 8449/56168 [01:04<04:02, 196.95it/s]Running loglikelihood requests:  15%|█▌        | 8513/56168 [01:04<04:01, 197.53it/s]Running loglikelihood requests:  15%|█▌        | 8577/56168 [01:04<04:00, 197.89it/s]Running loglikelihood requests:  15%|█▌        | 8641/56168 [01:05<03:53, 203.28it/s]Running loglikelihood requests:  15%|█▌        | 8705/56168 [01:05<03:49, 207.18it/s]Running loglikelihood requests:  16%|█▌        | 8769/56168 [01:05<03:45, 209.87it/s]Running loglikelihood requests:  16%|█▌        | 8833/56168 [01:06<03:43, 212.10it/s]Running loglikelihood requests:  16%|█▌        | 8897/56168 [01:06<03:41, 213.79it/s]Running loglikelihood requests:  16%|█▌        | 8961/56168 [01:06<03:39, 215.33it/s]Running loglikelihood requests:  16%|█▌        | 9025/56168 [01:06<03:37, 216.66it/s]Running loglikelihood requests:  16%|█▌        | 9089/56168 [01:07<03:35, 218.22it/s]Running loglikelihood requests:  16%|█▋        | 9153/56168 [01:07<03:34, 218.92it/s]Running loglikelihood requests:  16%|█▋        | 9217/56168 [01:07<03:33, 220.07it/s]Running loglikelihood requests:  17%|█▋        | 9281/56168 [01:08<03:32, 221.00it/s]Running loglikelihood requests:  17%|█▋        | 9345/56168 [01:08<03:31, 221.88it/s]Running loglikelihood requests:  17%|█▋        | 9409/56168 [01:08<03:28, 223.81it/s]Running loglikelihood requests:  17%|█▋        | 9473/56168 [01:08<03:27, 225.18it/s]Running loglikelihood requests:  17%|█▋        | 9537/56168 [01:09<03:25, 226.46it/s]Running loglikelihood requests:  17%|█▋        | 9601/56168 [01:09<03:24, 227.32it/s]Running loglikelihood requests:  17%|█▋        | 9665/56168 [01:09<03:23, 227.97it/s]Running loglikelihood requests:  17%|█▋        | 9729/56168 [01:10<03:23, 228.75it/s]Running loglikelihood requests:  17%|█▋        | 9793/56168 [01:10<03:21, 229.64it/s]Running loglikelihood requests:  18%|█▊        | 9857/56168 [01:10<03:20, 231.25it/s]Running loglikelihood requests:  18%|█▊        | 9921/56168 [01:10<03:19, 232.13it/s]Running loglikelihood requests:  18%|█▊        | 9985/56168 [01:11<03:17, 233.27it/s]Running loglikelihood requests:  18%|█▊        | 10049/56168 [01:11<03:17, 233.56it/s]Running loglikelihood requests:  18%|█▊        | 10113/56168 [01:11<03:16, 234.53it/s]Running loglikelihood requests:  18%|█▊        | 10177/56168 [01:11<03:15, 235.28it/s]Running loglikelihood requests:  18%|█▊        | 10241/56168 [01:12<03:14, 235.76it/s]Running loglikelihood requests:  18%|█▊        | 10305/56168 [01:12<03:12, 237.94it/s]Running loglikelihood requests:  18%|█▊        | 10369/56168 [01:12<03:11, 239.68it/s]Running loglikelihood requests:  19%|█▊        | 10433/56168 [01:13<03:10, 240.68it/s]Running loglikelihood requests:  19%|█▊        | 10497/56168 [01:13<03:08, 242.10it/s]Running loglikelihood requests:  19%|█▉        | 10561/56168 [01:13<03:07, 243.14it/s]Running loglikelihood requests:  19%|█▉        | 10625/56168 [01:13<03:06, 244.50it/s]Running loglikelihood requests:  19%|█▉        | 10689/56168 [01:14<03:06, 244.34it/s]Running loglikelihood requests:  19%|█▉        | 10753/56168 [01:14<03:05, 245.15it/s]Running loglikelihood requests:  19%|█▉        | 10817/56168 [01:14<03:04, 245.89it/s]Running loglikelihood requests:  19%|█▉        | 10881/56168 [01:14<03:03, 247.01it/s]Running loglikelihood requests:  19%|█▉        | 10945/56168 [01:15<03:02, 248.12it/s]Running loglikelihood requests:  20%|█▉        | 11009/56168 [01:15<03:00, 249.96it/s]Running loglikelihood requests:  20%|█▉        | 11073/56168 [01:15<02:59, 251.40it/s]Running loglikelihood requests:  20%|█▉        | 11137/56168 [01:15<02:58, 251.94it/s]Running loglikelihood requests:  20%|█▉        | 11201/56168 [01:16<02:57, 253.29it/s]Running loglikelihood requests:  20%|██        | 11265/56168 [01:16<02:56, 253.77it/s]Running loglikelihood requests:  20%|██        | 11329/56168 [01:16<02:56, 254.32it/s]Running loglikelihood requests:  20%|██        | 11393/56168 [01:16<02:54, 256.61it/s]Running loglikelihood requests:  20%|██        | 11457/56168 [01:17<02:53, 258.17it/s]Running loglikelihood requests:  21%|██        | 11521/56168 [01:17<02:52, 259.40it/s]Running loglikelihood requests:  21%|██        | 11585/56168 [01:17<02:51, 260.49it/s]Running loglikelihood requests:  21%|██        | 11649/56168 [01:17<02:50, 261.35it/s]Running loglikelihood requests:  21%|██        | 11713/56168 [01:18<02:49, 261.81it/s]Running loglikelihood requests:  21%|██        | 11777/56168 [01:18<02:49, 262.26it/s]Running loglikelihood requests:  21%|██        | 11841/56168 [01:18<02:48, 262.65it/s]Running loglikelihood requests:  21%|██        | 11909/56168 [01:18<02:45, 268.06it/s]Running loglikelihood requests:  21%|██▏       | 11973/56168 [01:19<02:45, 267.10it/s]Running loglikelihood requests:  21%|██▏       | 12037/56168 [01:19<02:42, 271.48it/s]Running loglikelihood requests:  22%|██▏       | 12101/56168 [01:19<02:40, 274.41it/s]Running loglikelihood requests:  22%|██▏       | 12165/56168 [01:19<02:39, 276.61it/s]Running loglikelihood requests:  22%|██▏       | 12229/56168 [01:19<02:37, 279.02it/s]Running loglikelihood requests:  22%|██▏       | 12293/56168 [01:20<02:36, 280.61it/s]Running loglikelihood requests:  22%|██▏       | 12357/56168 [01:20<02:35, 281.21it/s]Running loglikelihood requests:  22%|██▏       | 12421/56168 [01:20<02:35, 281.63it/s]Running loglikelihood requests:  22%|██▏       | 12485/56168 [01:20<02:34, 282.64it/s]Running loglikelihood requests:  22%|██▏       | 12549/56168 [01:21<02:33, 283.72it/s]Running loglikelihood requests:  22%|██▏       | 12613/56168 [01:21<02:33, 283.89it/s]Running loglikelihood requests:  23%|██▎       | 12677/56168 [01:21<02:32, 284.45it/s]Running loglikelihood requests:  23%|██▎       | 12741/56168 [01:21<02:32, 284.23it/s]Running loglikelihood requests:  23%|██▎       | 12805/56168 [01:21<02:32, 284.63it/s]Running loglikelihood requests:  23%|██▎       | 12869/56168 [01:22<02:30, 287.80it/s]Running loglikelihood requests:  23%|██▎       | 12933/56168 [01:22<02:28, 290.23it/s]Running loglikelihood requests:  23%|██▎       | 12997/56168 [01:22<02:27, 292.24it/s]Running loglikelihood requests:  23%|██▎       | 13061/56168 [01:22<02:26, 293.34it/s]Running loglikelihood requests:  23%|██▎       | 13125/56168 [01:23<02:26, 294.13it/s]Running loglikelihood requests:  23%|██▎       | 13189/56168 [01:23<02:25, 295.26it/s]Running loglikelihood requests:  24%|██▎       | 13253/56168 [01:23<02:25, 295.91it/s]Running loglikelihood requests:  24%|██▎       | 13317/56168 [01:23<02:24, 296.22it/s]Running loglikelihood requests:  24%|██▍       | 13381/56168 [01:23<02:24, 296.99it/s]Running loglikelihood requests:  24%|██▍       | 13445/56168 [01:24<02:23, 297.61it/s]Running loglikelihood requests:  24%|██▍       | 13509/56168 [01:24<02:23, 297.58it/s]Running loglikelihood requests:  24%|██▍       | 13573/56168 [01:24<02:22, 298.35it/s]Running loglikelihood requests:  24%|██▍       | 13637/56168 [01:24<02:22, 298.43it/s]Running loglikelihood requests:  24%|██▍       | 13701/56168 [01:24<02:22, 298.67it/s]Running loglikelihood requests:  25%|██▍       | 13765/56168 [01:25<02:21, 299.04it/s]Running loglikelihood requests:  25%|██▍       | 13829/56168 [01:25<02:21, 299.18it/s]Running loglikelihood requests:  25%|██▍       | 13893/56168 [01:25<02:21, 299.81it/s]Running loglikelihood requests:  25%|██▍       | 13957/56168 [01:25<02:20, 299.76it/s]Running loglikelihood requests:  25%|██▍       | 14021/56168 [01:26<02:19, 302.05it/s]Running loglikelihood requests:  25%|██▌       | 14085/56168 [01:26<02:19, 302.45it/s]Running loglikelihood requests:  25%|██▌       | 14149/56168 [01:26<02:19, 302.12it/s]Running loglikelihood requests:  25%|██▌       | 14213/56168 [01:26<02:18, 303.31it/s]Running loglikelihood requests:  25%|██▌       | 14277/56168 [01:26<02:17, 303.67it/s]Running loglikelihood requests:  26%|██▌       | 14341/56168 [01:27<02:17, 304.62it/s]Running loglikelihood requests:  26%|██▌       | 14405/56168 [01:27<02:16, 305.16it/s]Running loglikelihood requests:  26%|██▌       | 14469/56168 [01:27<02:16, 304.78it/s]Running loglikelihood requests:  26%|██▌       | 14533/56168 [01:27<02:16, 305.56it/s]Running loglikelihood requests:  26%|██▌       | 14597/56168 [01:27<02:16, 305.55it/s]Running loglikelihood requests:  26%|██▌       | 14661/56168 [01:28<02:15, 305.91it/s]Running loglikelihood requests:  26%|██▌       | 14725/56168 [01:28<02:15, 306.07it/s]Running loglikelihood requests:  26%|██▋       | 14789/56168 [01:28<02:15, 305.79it/s]Running loglikelihood requests:  26%|██▋       | 14853/56168 [01:28<02:15, 305.91it/s]Running loglikelihood requests:  27%|██▋       | 14917/56168 [01:28<02:14, 306.47it/s]Running loglikelihood requests:  27%|██▋       | 14981/56168 [01:29<02:14, 306.44it/s]Running loglikelihood requests:  27%|██▋       | 15045/56168 [01:29<02:14, 306.61it/s]Running loglikelihood requests:  27%|██▋       | 15109/56168 [01:29<02:13, 307.13it/s]Running loglikelihood requests:  27%|██▋       | 15173/56168 [01:29<02:13, 307.28it/s]Running loglikelihood requests:  27%|██▋       | 15237/56168 [01:30<02:13, 307.40it/s]Running loglikelihood requests:  27%|██▋       | 15301/56168 [01:30<02:13, 307.26it/s]Running loglikelihood requests:  27%|██▋       | 15365/56168 [01:30<02:12, 307.17it/s]Running loglikelihood requests:  27%|██▋       | 15429/56168 [01:30<02:12, 306.63it/s]Running loglikelihood requests:  28%|██▊       | 15493/56168 [01:30<02:12, 307.19it/s]Running loglikelihood requests:  28%|██▊       | 15557/56168 [01:31<02:12, 307.61it/s]Running loglikelihood requests:  28%|██▊       | 15621/56168 [01:31<02:11, 307.45it/s]Running loglikelihood requests:  28%|██▊       | 15685/56168 [01:31<02:11, 307.92it/s]Running loglikelihood requests:  28%|██▊       | 15749/56168 [01:31<02:11, 308.50it/s]Running loglikelihood requests:  28%|██▊       | 15813/56168 [01:31<02:10, 308.73it/s]Running loglikelihood requests:  28%|██▊       | 15877/56168 [01:32<02:10, 308.82it/s]Running loglikelihood requests:  28%|██▊       | 15941/56168 [01:32<02:10, 308.35it/s]Running loglikelihood requests:  28%|██▊       | 16005/56168 [01:32<02:09, 311.34it/s]Running loglikelihood requests:  29%|██▊       | 16069/56168 [01:32<02:07, 314.14it/s]Running loglikelihood requests:  29%|██▊       | 16133/56168 [01:32<02:06, 315.85it/s]Running loglikelihood requests:  29%|██▉       | 16197/56168 [01:33<02:05, 317.58it/s]Running loglikelihood requests:  29%|██▉       | 16261/56168 [01:33<02:05, 316.97it/s]Running loglikelihood requests:  29%|██▉       | 16325/56168 [01:33<02:05, 318.11it/s]Running loglikelihood requests:  29%|██▉       | 16389/56168 [01:33<02:05, 317.48it/s]Running loglikelihood requests:  29%|██▉       | 16453/56168 [01:33<02:05, 317.48it/s]Running loglikelihood requests:  29%|██▉       | 16517/56168 [01:34<02:04, 319.02it/s]Running loglikelihood requests:  30%|██▉       | 16581/56168 [01:34<02:04, 319.15it/s]Running loglikelihood requests:  30%|██▉       | 16645/56168 [01:34<02:04, 318.35it/s]Running loglikelihood requests:  30%|██▉       | 16709/56168 [01:34<02:03, 318.44it/s]Running loglikelihood requests:  30%|██▉       | 16773/56168 [01:34<02:03, 318.48it/s]Running loglikelihood requests:  30%|██▉       | 16837/56168 [01:35<02:03, 319.45it/s]Running loglikelihood requests:  30%|███       | 16901/56168 [01:35<02:02, 319.98it/s]Running loglikelihood requests:  30%|███       | 16965/56168 [01:35<02:02, 319.94it/s]Running loglikelihood requests:  30%|███       | 17029/56168 [01:35<02:01, 321.23it/s]Running loglikelihood requests:  30%|███       | 17093/56168 [01:35<02:01, 321.59it/s]Running loglikelihood requests:  31%|███       | 17157/56168 [01:36<02:01, 321.06it/s]Running loglikelihood requests:  31%|███       | 17221/56168 [01:36<02:01, 320.83it/s]Running loglikelihood requests:  31%|███       | 17285/56168 [01:36<02:01, 320.08it/s]Running loglikelihood requests:  31%|███       | 17349/56168 [01:36<02:01, 320.64it/s]Running loglikelihood requests:  31%|███       | 17413/56168 [01:36<02:00, 321.48it/s]Running loglikelihood requests:  31%|███       | 17477/56168 [01:37<01:59, 322.48it/s]Running loglikelihood requests:  31%|███       | 17541/56168 [01:37<02:00, 321.80it/s]Running loglikelihood requests:  31%|███▏      | 17605/56168 [01:37<02:00, 321.15it/s]Running loglikelihood requests:  31%|███▏      | 17669/56168 [01:37<02:00, 320.71it/s]Running loglikelihood requests:  32%|███▏      | 17733/56168 [01:37<01:59, 320.54it/s]Running loglikelihood requests:  32%|███▏      | 17797/56168 [01:38<01:59, 321.56it/s]Running loglikelihood requests:  32%|███▏      | 17861/56168 [01:38<01:58, 322.11it/s]Running loglikelihood requests:  32%|███▏      | 17925/56168 [01:38<01:58, 322.23it/s]Running loglikelihood requests:  32%|███▏      | 17989/56168 [01:38<01:58, 321.91it/s]Running loglikelihood requests:  32%|███▏      | 18053/56168 [01:38<01:58, 321.37it/s]Running loglikelihood requests:  32%|███▏      | 18117/56168 [01:39<01:58, 321.41it/s]Running loglikelihood requests:  32%|███▏      | 18181/56168 [01:39<01:57, 322.20it/s]Running loglikelihood requests:  32%|███▏      | 18245/56168 [01:39<01:57, 323.21it/s]Running loglikelihood requests:  33%|███▎      | 18309/56168 [01:39<01:57, 322.93it/s]Running loglikelihood requests:  33%|███▎      | 18373/56168 [01:39<01:56, 323.22it/s]Running loglikelihood requests:  33%|███▎      | 18437/56168 [01:40<01:57, 322.25it/s]Running loglikelihood requests:  33%|███▎      | 18501/56168 [01:40<01:56, 322.48it/s]Running loglikelihood requests:  33%|███▎      | 18565/56168 [01:40<01:56, 323.13it/s]Running loglikelihood requests:  33%|███▎      | 18629/56168 [01:40<01:55, 323.71it/s]Running loglikelihood requests:  33%|███▎      | 18697/56168 [01:40<01:53, 329.55it/s]Running loglikelihood requests:  33%|███▎      | 18761/56168 [01:41<01:54, 327.79it/s]Running loglikelihood requests:  34%|███▎      | 18825/56168 [01:41<01:54, 326.89it/s]Running loglikelihood requests:  34%|███▎      | 18889/56168 [01:41<01:54, 326.33it/s]Running loglikelihood requests:  34%|███▎      | 18953/56168 [01:41<01:52, 329.74it/s]Running loglikelihood requests:  34%|███▍      | 19017/56168 [01:41<01:51, 333.23it/s]Running loglikelihood requests:  34%|███▍      | 19081/56168 [01:42<01:50, 334.82it/s]Running loglikelihood requests:  34%|███▍      | 19145/56168 [01:42<01:50, 336.03it/s]Running loglikelihood requests:  34%|███▍      | 19209/56168 [01:42<01:49, 337.21it/s]Running loglikelihood requests:  34%|███▍      | 19273/56168 [01:42<01:49, 337.33it/s]Running loglikelihood requests:  34%|███▍      | 19337/56168 [01:42<01:49, 337.02it/s]Running loglikelihood requests:  35%|███▍      | 19401/56168 [01:42<01:48, 338.10it/s]Running loglikelihood requests:  35%|███▍      | 19465/56168 [01:43<01:48, 338.91it/s]Running loglikelihood requests:  35%|███▍      | 19529/56168 [01:43<01:48, 339.24it/s]Running loglikelihood requests:  35%|███▍      | 19593/56168 [01:43<01:47, 339.48it/s]Running loglikelihood requests:  35%|███▍      | 19657/56168 [01:43<01:47, 339.04it/s]Running loglikelihood requests:  35%|███▌      | 19721/56168 [01:43<01:47, 339.29it/s]Running loglikelihood requests:  35%|███▌      | 19789/56168 [01:44<01:45, 346.25it/s]Running loglikelihood requests:  35%|███▌      | 19853/56168 [01:44<01:45, 344.48it/s]Running loglikelihood requests:  35%|███▌      | 19917/56168 [01:44<01:45, 343.38it/s]Running loglikelihood requests:  36%|███▌      | 19981/56168 [01:44<01:45, 342.55it/s]Running loglikelihood requests:  36%|███▌      | 20045/56168 [01:44<01:45, 341.47it/s]Running loglikelihood requests:  36%|███▌      | 20109/56168 [01:45<01:45, 341.11it/s]Running loglikelihood requests:  36%|███▌      | 20173/56168 [01:45<01:45, 341.55it/s]Running loglikelihood requests:  36%|███▌      | 20237/56168 [01:45<01:44, 342.20it/s]Running loglikelihood requests:  36%|███▌      | 20305/56168 [01:45<01:43, 347.90it/s]Running loglikelihood requests:  36%|███▋      | 20369/56168 [01:45<01:43, 346.06it/s]Running loglikelihood requests:  36%|███▋      | 20433/56168 [01:45<01:43, 345.52it/s]Running loglikelihood requests:  36%|███▋      | 20497/56168 [01:46<01:43, 344.99it/s]Running loglikelihood requests:  37%|███▋      | 20561/56168 [01:46<01:43, 345.02it/s]Running loglikelihood requests:  37%|███▋      | 20625/56168 [01:46<01:43, 344.54it/s]Running loglikelihood requests:  37%|███▋      | 20689/56168 [01:46<01:43, 344.08it/s]Running loglikelihood requests:  37%|███▋      | 20757/56168 [01:46<01:41, 350.31it/s]Running loglikelihood requests:  37%|███▋      | 20821/56168 [01:47<01:41, 347.99it/s]Running loglikelihood requests:  37%|███▋      | 20885/56168 [01:47<01:41, 346.31it/s]Running loglikelihood requests:  37%|███▋      | 20949/56168 [01:47<01:41, 345.71it/s]Running loglikelihood requests:  37%|███▋      | 21013/56168 [01:47<01:41, 346.11it/s]Running loglikelihood requests:  38%|███▊      | 21077/56168 [01:47<01:41, 345.40it/s]Running loglikelihood requests:  38%|███▊      | 21141/56168 [01:48<01:41, 344.76it/s]Running loglikelihood requests:  38%|███▊      | 21205/56168 [01:48<01:41, 344.85it/s]Running loglikelihood requests:  38%|███▊      | 21269/56168 [01:48<01:41, 344.73it/s]Running loglikelihood requests:  38%|███▊      | 21341/56168 [01:48<01:37, 357.06it/s]Running loglikelihood requests:  38%|███▊      | 21405/56168 [01:48<01:37, 356.93it/s]Running loglikelihood requests:  38%|███▊      | 21469/56168 [01:48<01:37, 356.51it/s]Running loglikelihood requests:  38%|███▊      | 21533/56168 [01:49<01:37, 356.41it/s]Running loglikelihood requests:  38%|███▊      | 21597/56168 [01:49<01:37, 356.40it/s]Running loglikelihood requests:  39%|███▊      | 21661/56168 [01:49<01:36, 356.33it/s]Running loglikelihood requests:  39%|███▊      | 21725/56168 [01:49<01:37, 354.89it/s]Running loglikelihood requests:  39%|███▉      | 21793/56168 [01:49<01:35, 360.91it/s]Running loglikelihood requests:  39%|███▉      | 21857/56168 [01:50<01:35, 358.70it/s]Running loglikelihood requests:  39%|███▉      | 21921/56168 [01:50<01:35, 358.84it/s]Running loglikelihood requests:  39%|███▉      | 21985/56168 [01:50<01:35, 358.35it/s]Running loglikelihood requests:  39%|███▉      | 22049/56168 [01:50<01:35, 357.28it/s]Running loglikelihood requests:  39%|███▉      | 22113/56168 [01:50<01:35, 357.26it/s]Running loglikelihood requests:  39%|███▉      | 22177/56168 [01:50<01:34, 357.94it/s]Running loglikelihood requests:  40%|███▉      | 22241/56168 [01:51<01:35, 356.64it/s]Running loglikelihood requests:  40%|███▉      | 22305/56168 [01:51<01:34, 357.49it/s]Running loglikelihood requests:  40%|███▉      | 22369/56168 [01:51<01:34, 356.67it/s]Running loglikelihood requests:  40%|███▉      | 22433/56168 [01:51<01:34, 357.89it/s]Running loglikelihood requests:  40%|████      | 22497/56168 [01:51<01:33, 358.50it/s]Running loglikelihood requests:  40%|████      | 22561/56168 [01:51<01:33, 359.95it/s]Running loglikelihood requests:  40%|████      | 22625/56168 [01:52<01:33, 359.39it/s]Running loglikelihood requests:  40%|████      | 22689/56168 [01:52<01:33, 358.97it/s]Running loglikelihood requests:  41%|████      | 22753/56168 [01:52<01:33, 359.15it/s]Running loglikelihood requests:  41%|████      | 22817/56168 [01:52<01:32, 360.12it/s]Running loglikelihood requests:  41%|████      | 22881/56168 [01:52<01:32, 360.66it/s]Running loglikelihood requests:  41%|████      | 22945/56168 [01:53<01:31, 361.22it/s]Running loglikelihood requests:  41%|████      | 23009/56168 [01:53<01:33, 353.12it/s]Running loglikelihood requests:  41%|████      | 23073/56168 [01:53<01:33, 355.30it/s]Running loglikelihood requests:  41%|████      | 23137/56168 [01:53<01:34, 349.68it/s]Running loglikelihood requests:  41%|████▏     | 23201/56168 [01:53<01:34, 349.92it/s]Running loglikelihood requests:  41%|████▏     | 23265/56168 [01:53<01:35, 345.90it/s]Running loglikelihood requests:  42%|████▏     | 23329/56168 [01:54<01:34, 348.30it/s]Running loglikelihood requests:  42%|████▏     | 23393/56168 [01:54<01:34, 345.67it/s]Running loglikelihood requests:  42%|████▏     | 23457/56168 [01:54<01:35, 341.59it/s]Running loglikelihood requests:  42%|████▏     | 23521/56168 [01:54<01:35, 340.57it/s]Running loglikelihood requests:  42%|████▏     | 23585/56168 [01:54<01:34, 344.49it/s]Running loglikelihood requests:  42%|████▏     | 23649/56168 [01:55<01:35, 340.93it/s]Running loglikelihood requests:  42%|████▏     | 23713/56168 [01:55<01:35, 341.38it/s]Running loglikelihood requests:  42%|████▏     | 23777/56168 [01:55<01:33, 345.37it/s]Running loglikelihood requests:  42%|████▏     | 23841/56168 [01:55<01:35, 339.79it/s]Running loglikelihood requests:  43%|████▎     | 23905/56168 [01:55<01:33, 344.69it/s]Running loglikelihood requests:  43%|████▎     | 23969/56168 [01:56<01:32, 348.37it/s]Running loglikelihood requests:  43%|████▎     | 24033/56168 [01:56<01:32, 347.01it/s]Running loglikelihood requests:  43%|████▎     | 24097/56168 [01:56<01:32, 346.35it/s]Running loglikelihood requests:  43%|████▎     | 24161/56168 [01:56<01:32, 346.12it/s]Running loglikelihood requests:  43%|████▎     | 24225/56168 [01:56<01:32, 344.54it/s]Running loglikelihood requests:  43%|████▎     | 24289/56168 [01:56<01:31, 348.66it/s]Running loglikelihood requests:  43%|████▎     | 24353/56168 [01:57<01:31, 346.99it/s]Running loglikelihood requests:  43%|████▎     | 24417/56168 [01:57<01:31, 348.18it/s]Running loglikelihood requests:  44%|████▎     | 24481/56168 [01:57<01:29, 354.71it/s]Running loglikelihood requests:  44%|████▎     | 24545/56168 [01:57<01:30, 348.79it/s]Running loglikelihood requests:  44%|████▍     | 24609/56168 [01:57<01:29, 350.79it/s]Running loglikelihood requests:  44%|████▍     | 24673/56168 [01:58<01:29, 350.92it/s]Running loglikelihood requests:  44%|████▍     | 24737/56168 [01:58<01:29, 352.43it/s]Running loglikelihood requests:  44%|████▍     | 24801/56168 [01:58<01:28, 352.84it/s]Running loglikelihood requests:  44%|████▍     | 24865/56168 [01:58<01:29, 351.21it/s]Running loglikelihood requests:  44%|████▍     | 24929/56168 [01:58<01:29, 349.56it/s]Running loglikelihood requests:  44%|████▍     | 24993/56168 [01:58<01:29, 348.46it/s]Running loglikelihood requests:  45%|████▍     | 25061/56168 [01:59<01:28, 350.44it/s]Running loglikelihood requests:  45%|████▍     | 25125/56168 [01:59<01:27, 353.30it/s]Running loglikelihood requests:  45%|████▍     | 25189/56168 [01:59<01:27, 353.85it/s]Running loglikelihood requests:  45%|████▍     | 25253/56168 [01:59<01:26, 355.40it/s]Running loglikelihood requests:  45%|████▌     | 25317/56168 [01:59<01:27, 351.63it/s]Running loglikelihood requests:  45%|████▌     | 25381/56168 [02:00<01:26, 354.49it/s]Running loglikelihood requests:  45%|████▌     | 25445/56168 [02:00<01:27, 352.53it/s]Running loglikelihood requests:  45%|████▌     | 25509/56168 [02:00<01:27, 352.26it/s]Running loglikelihood requests:  46%|████▌     | 25573/56168 [02:00<01:25, 358.66it/s]Running loglikelihood requests:  46%|████▌     | 25637/56168 [02:00<01:24, 363.03it/s]Running loglikelihood requests:  46%|████▌     | 25701/56168 [02:00<01:23, 364.95it/s]Running loglikelihood requests:  46%|████▌     | 25765/56168 [02:01<01:22, 367.54it/s]Running loglikelihood requests:  46%|████▌     | 25829/56168 [02:01<01:23, 361.62it/s]Running loglikelihood requests:  46%|████▌     | 25893/56168 [02:01<01:24, 358.04it/s]Running loglikelihood requests:  46%|████▌     | 25957/56168 [02:01<01:24, 355.51it/s]Running loglikelihood requests:  46%|████▋     | 26021/56168 [02:01<01:25, 353.44it/s]Running loglikelihood requests:  46%|████▋     | 26085/56168 [02:02<01:26, 349.75it/s]Running loglikelihood requests:  47%|████▋     | 26149/56168 [02:02<01:22, 362.35it/s]Running loglikelihood requests:  47%|████▋     | 26213/56168 [02:02<01:20, 370.80it/s]Running loglikelihood requests:  47%|████▋     | 26277/56168 [02:02<01:19, 376.89it/s]Running loglikelihood requests:  47%|████▋     | 26341/56168 [02:02<01:18, 379.37it/s]Running loglikelihood requests:  47%|████▋     | 26405/56168 [02:02<01:17, 385.13it/s]Running loglikelihood requests:  47%|████▋     | 26469/56168 [02:03<01:16, 387.77it/s]Running loglikelihood requests:  47%|████▋     | 26533/56168 [02:03<01:15, 393.20it/s]Running loglikelihood requests:  47%|████▋     | 26597/56168 [02:03<01:14, 397.70it/s]Running loglikelihood requests:  47%|████▋     | 26661/56168 [02:03<01:14, 396.11it/s]Running loglikelihood requests:  48%|████▊     | 26725/56168 [02:03<01:14, 397.54it/s]Running loglikelihood requests:  48%|████▊     | 26789/56168 [02:03<01:14, 393.98it/s]Running loglikelihood requests:  48%|████▊     | 26853/56168 [02:03<01:13, 399.35it/s]Running loglikelihood requests:  48%|████▊     | 26917/56168 [02:04<01:12, 402.79it/s]Running loglikelihood requests:  48%|████▊     | 26981/56168 [02:04<01:11, 408.12it/s]Running loglikelihood requests:  48%|████▊     | 27045/56168 [02:04<01:10, 412.51it/s]Running loglikelihood requests:  48%|████▊     | 27109/56168 [02:04<01:11, 405.37it/s]Running loglikelihood requests:  48%|████▊     | 27173/56168 [02:04<01:12, 400.24it/s]Running loglikelihood requests:  48%|████▊     | 27237/56168 [02:04<01:12, 399.48it/s]Running loglikelihood requests:  49%|████▊     | 27301/56168 [02:05<01:12, 396.56it/s]Running loglikelihood requests:  49%|████▊     | 27365/56168 [02:05<01:13, 394.39it/s]Running loglikelihood requests:  49%|████▉     | 27429/56168 [02:05<01:12, 393.90it/s]Running loglikelihood requests:  49%|████▉     | 27493/56168 [02:05<01:12, 394.53it/s]Running loglikelihood requests:  49%|████▉     | 27557/56168 [02:05<01:12, 394.47it/s]Running loglikelihood requests:  49%|████▉     | 27621/56168 [02:05<01:12, 391.47it/s]Running loglikelihood requests:  49%|████▉     | 27685/56168 [02:06<01:11, 396.44it/s]Running loglikelihood requests:  49%|████▉     | 27749/56168 [02:06<01:13, 384.61it/s]Running loglikelihood requests:  50%|████▉     | 27813/56168 [02:06<01:13, 386.41it/s]Running loglikelihood requests:  50%|████▉     | 27877/56168 [02:06<01:13, 386.41it/s]Running loglikelihood requests:  50%|████▉     | 27941/56168 [02:06<01:11, 393.69it/s]Running loglikelihood requests:  50%|████▉     | 28005/56168 [02:06<01:11, 393.75it/s]Running loglikelihood requests:  50%|████▉     | 28069/56168 [02:07<01:11, 394.17it/s]Running loglikelihood requests:  50%|█████     | 28133/56168 [02:07<01:10, 394.99it/s]Running loglikelihood requests:  50%|█████     | 28197/56168 [02:07<01:11, 392.00it/s]Running loglikelihood requests:  50%|█████     | 28261/56168 [02:07<01:11, 392.76it/s]Running loglikelihood requests:  50%|█████     | 28329/56168 [02:07<01:09, 401.30it/s]Running loglikelihood requests:  51%|█████     | 28393/56168 [02:07<01:07, 408.69it/s]Running loglikelihood requests:  51%|█████     | 28457/56168 [02:07<01:06, 414.18it/s]Running loglikelihood requests:  51%|█████     | 28521/56168 [02:08<01:06, 418.83it/s]Running loglikelihood requests:  51%|█████     | 28585/56168 [02:08<01:06, 416.40it/s]Running loglikelihood requests:  51%|█████     | 28649/56168 [02:08<01:05, 420.02it/s]Running loglikelihood requests:  51%|█████     | 28713/56168 [02:08<01:05, 420.14it/s]Running loglikelihood requests:  51%|█████     | 28777/56168 [02:08<01:07, 406.20it/s]Running loglikelihood requests:  51%|█████▏    | 28841/56168 [02:08<01:06, 413.49it/s]Running loglikelihood requests:  51%|█████▏    | 28905/56168 [02:09<01:05, 415.57it/s]Running loglikelihood requests:  52%|█████▏    | 28969/56168 [02:09<01:04, 418.75it/s]Running loglikelihood requests:  52%|█████▏    | 29033/56168 [02:09<01:04, 420.57it/s]Running loglikelihood requests:  52%|█████▏    | 29097/56168 [02:09<01:03, 423.79it/s]Running loglikelihood requests:  52%|█████▏    | 29161/56168 [02:09<01:03, 425.50it/s]Running loglikelihood requests:  52%|█████▏    | 29225/56168 [02:09<01:02, 429.76it/s]Running loglikelihood requests:  52%|█████▏    | 29289/56168 [02:09<01:02, 428.53it/s]Running loglikelihood requests:  52%|█████▏    | 29353/56168 [02:10<01:03, 424.26it/s]Running loglikelihood requests:  52%|█████▏    | 29421/56168 [02:10<01:02, 425.35it/s]Running loglikelihood requests:  52%|█████▏    | 29485/56168 [02:10<01:03, 420.90it/s]Running loglikelihood requests:  53%|█████▎    | 29549/56168 [02:10<01:04, 414.30it/s]Running loglikelihood requests:  53%|█████▎    | 29613/56168 [02:10<01:04, 413.62it/s]Running loglikelihood requests:  53%|█████▎    | 29677/56168 [02:10<01:05, 406.45it/s]Running loglikelihood requests:  53%|█████▎    | 29741/56168 [02:11<01:04, 406.95it/s]Running loglikelihood requests:  53%|█████▎    | 29805/56168 [02:11<01:04, 407.83it/s]Running loglikelihood requests:  53%|█████▎    | 29869/56168 [02:11<01:03, 412.32it/s]Running loglikelihood requests:  53%|█████▎    | 29933/56168 [02:11<01:03, 414.77it/s]Running loglikelihood requests:  53%|█████▎    | 29997/56168 [02:11<01:03, 412.78it/s]Running loglikelihood requests:  54%|█████▎    | 30061/56168 [02:11<01:02, 415.93it/s]Running loglikelihood requests:  54%|█████▎    | 30125/56168 [02:11<01:01, 423.76it/s]Running loglikelihood requests:  54%|█████▎    | 30189/56168 [02:12<01:00, 429.60it/s]Running loglikelihood requests:  54%|█████▍    | 30253/56168 [02:12<00:59, 433.43it/s]Running loglikelihood requests:  54%|█████▍    | 30317/56168 [02:12<01:00, 430.29it/s]Running loglikelihood requests:  54%|█████▍    | 30381/56168 [02:12<00:59, 433.99it/s]Running loglikelihood requests:  54%|█████▍    | 30445/56168 [02:12<00:58, 436.17it/s]Running loglikelihood requests:  54%|█████▍    | 30509/56168 [02:12<00:58, 439.36it/s]Running loglikelihood requests:  54%|█████▍    | 30573/56168 [02:12<00:58, 439.39it/s]Running loglikelihood requests:  55%|█████▍    | 30637/56168 [02:13<00:57, 440.26it/s]Running loglikelihood requests:  55%|█████▍    | 30701/56168 [02:13<00:57, 440.81it/s]Running loglikelihood requests:  55%|█████▍    | 30765/56168 [02:13<01:00, 418.99it/s]Running loglikelihood requests:  55%|█████▍    | 30833/56168 [02:13<01:00, 418.36it/s]Running loglikelihood requests:  55%|█████▌    | 30897/56168 [02:13<00:59, 425.64it/s]Running loglikelihood requests:  55%|█████▌    | 30961/56168 [02:13<00:58, 431.59it/s]Running loglikelihood requests:  55%|█████▌    | 31025/56168 [02:14<00:57, 435.28it/s]Running loglikelihood requests:  55%|█████▌    | 31089/56168 [02:14<00:57, 439.59it/s]Running loglikelihood requests:  55%|█████▌    | 31153/56168 [02:14<00:56, 442.79it/s]Running loglikelihood requests:  56%|█████▌    | 31217/56168 [02:14<00:56, 441.28it/s]Running loglikelihood requests:  56%|█████▌    | 31281/56168 [02:14<00:56, 442.74it/s]Running loglikelihood requests:  56%|█████▌    | 31345/56168 [02:14<00:55, 443.56it/s]Running loglikelihood requests:  56%|█████▌    | 31409/56168 [02:14<00:55, 445.61it/s]Running loglikelihood requests:  56%|█████▌    | 31473/56168 [02:15<00:55, 445.97it/s]Running loglikelihood requests:  56%|█████▌    | 31537/56168 [02:15<00:55, 443.33it/s]Running loglikelihood requests:  56%|█████▋    | 31601/56168 [02:15<00:55, 442.46it/s]Running loglikelihood requests:  56%|█████▋    | 31665/56168 [02:15<00:55, 443.66it/s]Running loglikelihood requests:  56%|█████▋    | 31729/56168 [02:15<00:55, 442.82it/s]Running loglikelihood requests:  57%|█████▋    | 31793/56168 [02:15<00:55, 442.97it/s]Running loglikelihood requests:  57%|█████▋    | 31861/56168 [02:15<00:54, 449.98it/s]Running loglikelihood requests:  57%|█████▋    | 31925/56168 [02:16<00:54, 447.21it/s]Running loglikelihood requests:  57%|█████▋    | 31989/56168 [02:16<00:54, 445.32it/s]Running loglikelihood requests:  57%|█████▋    | 32053/56168 [02:16<00:54, 444.47it/s]Running loglikelihood requests:  57%|█████▋    | 32117/56168 [02:16<00:54, 444.95it/s]Running loglikelihood requests:  57%|█████▋    | 32181/56168 [02:16<00:53, 445.32it/s]Running loglikelihood requests:  57%|█████▋    | 32245/56168 [02:16<00:55, 434.90it/s]Running loglikelihood requests:  58%|█████▊    | 32309/56168 [02:16<00:55, 427.39it/s]Running loglikelihood requests:  58%|█████▊    | 32373/56168 [02:17<00:55, 432.55it/s]Running loglikelihood requests:  58%|█████▊    | 32437/56168 [02:17<00:54, 436.47it/s]Running loglikelihood requests:  58%|█████▊    | 32501/56168 [02:17<00:53, 441.44it/s]Running loglikelihood requests:  58%|█████▊    | 32569/56168 [02:17<00:52, 452.55it/s]Running loglikelihood requests:  58%|█████▊    | 32633/56168 [02:17<00:51, 452.81it/s]Running loglikelihood requests:  58%|█████▊    | 32697/56168 [02:17<00:51, 452.64it/s]Running loglikelihood requests:  58%|█████▊    | 32765/56168 [02:17<00:50, 460.95it/s]Running loglikelihood requests:  58%|█████▊    | 32829/56168 [02:18<00:50, 458.93it/s]Running loglikelihood requests:  59%|█████▊    | 32893/56168 [02:18<00:51, 449.19it/s]Running loglikelihood requests:  59%|█████▊    | 32957/56168 [02:18<00:51, 454.54it/s]Running loglikelihood requests:  59%|█████▉    | 33021/56168 [02:18<00:50, 460.79it/s]Running loglikelihood requests:  59%|█████▉    | 33085/56168 [02:18<00:49, 465.17it/s]Running loglikelihood requests:  59%|█████▉    | 33149/56168 [02:18<00:49, 465.55it/s]Running loglikelihood requests:  59%|█████▉    | 33213/56168 [02:18<00:49, 467.91it/s]Running loglikelihood requests:  59%|█████▉    | 33277/56168 [02:19<00:48, 468.98it/s]Running loglikelihood requests:  59%|█████▉    | 33341/56168 [02:19<00:48, 468.95it/s]Running loglikelihood requests:  59%|█████▉    | 33405/56168 [02:19<00:48, 470.21it/s]Running loglikelihood requests:  60%|█████▉    | 33469/56168 [02:19<00:48, 472.27it/s]Running loglikelihood requests:  60%|█████▉    | 33533/56168 [02:19<00:47, 473.23it/s]Running loglikelihood requests:  60%|█████▉    | 33597/56168 [02:19<00:47, 474.72it/s]Running loglikelihood requests:  60%|█████▉    | 33661/56168 [02:19<00:47, 476.13it/s]Running loglikelihood requests:  60%|██████    | 33725/56168 [02:20<00:47, 474.88it/s]Running loglikelihood requests:  60%|██████    | 33789/56168 [02:20<00:47, 469.06it/s]Running loglikelihood requests:  60%|██████    | 33853/56168 [02:20<00:47, 470.45it/s]Running loglikelihood requests:  60%|██████    | 33917/56168 [02:20<00:47, 473.12it/s]Running loglikelihood requests:  60%|██████    | 33981/56168 [02:20<00:46, 474.37it/s]Running loglikelihood requests:  61%|██████    | 34045/56168 [02:20<00:46, 475.67it/s]Running loglikelihood requests:  61%|██████    | 34109/56168 [02:20<00:46, 475.33it/s]Running loglikelihood requests:  61%|██████    | 34173/56168 [02:20<00:46, 474.31it/s]Running loglikelihood requests:  61%|██████    | 34237/56168 [02:21<00:46, 474.49it/s]Running loglikelihood requests:  61%|██████    | 34301/56168 [02:21<00:46, 475.25it/s]Running loglikelihood requests:  61%|██████    | 34365/56168 [02:21<00:45, 474.77it/s]Running loglikelihood requests:  61%|██████▏   | 34429/56168 [02:21<00:45, 476.42it/s]Running loglikelihood requests:  61%|██████▏   | 34493/56168 [02:21<00:45, 476.79it/s]Running loglikelihood requests:  62%|██████▏   | 34557/56168 [02:21<00:45, 477.12it/s]Running loglikelihood requests:  62%|██████▏   | 34621/56168 [02:21<00:45, 477.98it/s]Running loglikelihood requests:  62%|██████▏   | 34685/56168 [02:22<00:45, 477.01it/s]Running loglikelihood requests:  62%|██████▏   | 34749/56168 [02:22<00:44, 476.81it/s]Running loglikelihood requests:  62%|██████▏   | 34813/56168 [02:22<00:44, 478.38it/s]Running loglikelihood requests:  62%|██████▏   | 34877/56168 [02:22<00:44, 478.71it/s]Running loglikelihood requests:  62%|██████▏   | 34941/56168 [02:22<00:44, 479.30it/s]Running loglikelihood requests:  62%|██████▏   | 35005/56168 [02:22<00:44, 476.06it/s]Running loglikelihood requests:  62%|██████▏   | 35069/56168 [02:22<00:44, 476.36it/s]Running loglikelihood requests:  63%|██████▎   | 35133/56168 [02:22<00:44, 476.92it/s]Running loglikelihood requests:  63%|██████▎   | 35197/56168 [02:23<00:43, 476.87it/s]Running loglikelihood requests:  63%|██████▎   | 35261/56168 [02:23<00:43, 476.57it/s]Running loglikelihood requests:  63%|██████▎   | 35325/56168 [02:23<00:43, 477.50it/s]Running loglikelihood requests:  63%|██████▎   | 35389/56168 [02:23<00:43, 477.58it/s]Running loglikelihood requests:  63%|██████▎   | 35453/56168 [02:23<00:43, 477.49it/s]Running loglikelihood requests:  63%|██████▎   | 35517/56168 [02:23<00:43, 476.14it/s]Running loglikelihood requests:  63%|██████▎   | 35581/56168 [02:23<00:43, 468.74it/s]Running loglikelihood requests:  63%|██████▎   | 35645/56168 [02:24<00:43, 471.53it/s]Running loglikelihood requests:  64%|██████▎   | 35709/56168 [02:24<00:43, 474.04it/s]Running loglikelihood requests:  64%|██████▎   | 35773/56168 [02:24<00:42, 476.69it/s]Running loglikelihood requests:  64%|██████▍   | 35837/56168 [02:24<00:42, 477.60it/s]Running loglikelihood requests:  64%|██████▍   | 35901/56168 [02:24<00:42, 478.09it/s]Running loglikelihood requests:  64%|██████▍   | 35965/56168 [02:24<00:42, 478.31it/s]Running loglikelihood requests:  64%|██████▍   | 36029/56168 [02:24<00:42, 479.40it/s]Running loglikelihood requests:  64%|██████▍   | 36093/56168 [02:24<00:41, 481.38it/s]Running loglikelihood requests:  64%|██████▍   | 36157/56168 [02:25<00:41, 480.71it/s]Running loglikelihood requests:  64%|██████▍   | 36221/56168 [02:25<00:41, 482.31it/s]Running loglikelihood requests:  65%|██████▍   | 36285/56168 [02:25<00:41, 482.34it/s]Running loglikelihood requests:  65%|██████▍   | 36349/56168 [02:25<00:40, 484.15it/s]Running loglikelihood requests:  65%|██████▍   | 36413/56168 [02:25<00:40, 484.85it/s]Running loglikelihood requests:  65%|██████▍   | 36477/56168 [02:25<00:40, 486.72it/s]Running loglikelihood requests:  65%|██████▌   | 36541/56168 [02:25<00:40, 485.49it/s]Running loglikelihood requests:  65%|██████▌   | 36605/56168 [02:26<00:40, 486.04it/s]Running loglikelihood requests:  65%|██████▌   | 36669/56168 [02:26<00:40, 485.00it/s]Running loglikelihood requests:  65%|██████▌   | 36733/56168 [02:26<00:40, 485.83it/s]Running loglikelihood requests:  66%|██████▌   | 36797/56168 [02:26<00:39, 485.12it/s]Running loglikelihood requests:  66%|██████▌   | 36861/56168 [02:26<00:39, 486.05it/s]Running loglikelihood requests:  66%|██████▌   | 36925/56168 [02:26<00:39, 486.79it/s]Running loglikelihood requests:  66%|██████▌   | 36993/56168 [02:26<00:38, 494.75it/s]Running loglikelihood requests:  66%|██████▌   | 37057/56168 [02:26<00:38, 491.74it/s]Running loglikelihood requests:  66%|██████▌   | 37121/56168 [02:27<00:38, 491.58it/s]Running loglikelihood requests:  66%|██████▌   | 37185/56168 [02:27<00:38, 490.17it/s]Running loglikelihood requests:  66%|██████▋   | 37249/56168 [02:27<00:38, 490.07it/s]Running loglikelihood requests:  66%|██████▋   | 37313/56168 [02:27<00:38, 488.52it/s]Running loglikelihood requests:  67%|██████▋   | 37377/56168 [02:27<00:38, 487.68it/s]Running loglikelihood requests:  67%|██████▋   | 37441/56168 [02:27<00:37, 494.92it/s]Running loglikelihood requests:  67%|██████▋   | 37505/56168 [02:27<00:37, 500.05it/s]Running loglikelihood requests:  67%|██████▋   | 37569/56168 [02:27<00:36, 503.71it/s]Running loglikelihood requests:  67%|██████▋   | 37633/56168 [02:28<00:36, 506.72it/s]Running loglikelihood requests:  67%|██████▋   | 37697/56168 [02:28<00:36, 507.88it/s]Running loglikelihood requests:  67%|██████▋   | 37761/56168 [02:28<00:36, 509.47it/s]Running loglikelihood requests:  67%|██████▋   | 37825/56168 [02:28<00:35, 511.09it/s]Running loglikelihood requests:  67%|██████▋   | 37889/56168 [02:28<00:35, 512.52it/s]Running loglikelihood requests:  68%|██████▊   | 37953/56168 [02:28<00:35, 513.23it/s]Running loglikelihood requests:  68%|██████▊   | 38017/56168 [02:28<00:35, 514.08it/s]Running loglikelihood requests:  68%|██████▊   | 38081/56168 [02:28<00:35, 514.28it/s]Running loglikelihood requests:  68%|██████▊   | 38145/56168 [02:29<00:35, 514.31it/s]Running loglikelihood requests:  68%|██████▊   | 38209/56168 [02:29<00:35, 512.55it/s]Running loglikelihood requests:  68%|██████▊   | 38273/56168 [02:29<00:34, 513.67it/s]Running loglikelihood requests:  68%|██████▊   | 38337/56168 [02:29<00:34, 514.26it/s]Running loglikelihood requests:  68%|██████▊   | 38401/56168 [02:29<00:34, 514.78it/s]Running loglikelihood requests:  68%|██████▊   | 38465/56168 [02:29<00:34, 515.65it/s]Running loglikelihood requests:  69%|██████▊   | 38529/56168 [02:29<00:34, 515.63it/s]Running loglikelihood requests:  69%|██████▊   | 38593/56168 [02:29<00:34, 515.38it/s]Running loglikelihood requests:  69%|██████▉   | 38657/56168 [02:30<00:34, 514.44it/s]Running loglikelihood requests:  69%|██████▉   | 38721/56168 [02:30<00:33, 514.70it/s]Running loglikelihood requests:  69%|██████▉   | 38789/56168 [02:30<00:33, 523.59it/s]Running loglikelihood requests:  69%|██████▉   | 38853/56168 [02:30<00:33, 522.66it/s]Running loglikelihood requests:  69%|██████▉   | 38917/56168 [02:30<00:33, 521.88it/s]Running loglikelihood requests:  69%|██████▉   | 38981/56168 [02:30<00:33, 520.43it/s]Running loglikelihood requests:  70%|██████▉   | 39045/56168 [02:30<00:32, 519.00it/s]Running loglikelihood requests:  70%|██████▉   | 39109/56168 [02:30<00:32, 517.60it/s]Running loglikelihood requests:  70%|██████▉   | 39173/56168 [02:31<00:32, 517.67it/s]Running loglikelihood requests:  70%|██████▉   | 39237/56168 [02:31<00:32, 516.40it/s]Running loglikelihood requests:  70%|██████▉   | 39301/56168 [02:31<00:32, 516.71it/s]Running loglikelihood requests:  70%|███████   | 39365/56168 [02:31<00:32, 517.55it/s]Running loglikelihood requests:  70%|███████   | 39429/56168 [02:31<00:32, 519.02it/s]Running loglikelihood requests:  70%|███████   | 39493/56168 [02:31<00:32, 518.84it/s]Running loglikelihood requests:  70%|███████   | 39557/56168 [02:31<00:31, 519.14it/s]Running loglikelihood requests:  71%|███████   | 39621/56168 [02:31<00:31, 518.53it/s]Running loglikelihood requests:  71%|███████   | 39685/56168 [02:32<00:31, 517.57it/s]Running loglikelihood requests:  71%|███████   | 39749/56168 [02:32<00:31, 517.52it/s]Running loglikelihood requests:  71%|███████   | 39813/56168 [02:32<00:31, 516.61it/s]Running loglikelihood requests:  71%|███████   | 39877/56168 [02:32<00:31, 518.02it/s]Running loglikelihood requests:  71%|███████   | 39941/56168 [02:32<00:31, 518.41it/s]Running loglikelihood requests:  71%|███████   | 40005/56168 [02:32<00:31, 518.69it/s]Running loglikelihood requests:  71%|███████▏  | 40069/56168 [02:32<00:30, 520.02it/s]Running loglikelihood requests:  71%|███████▏  | 40133/56168 [02:32<00:30, 521.04it/s]Running loglikelihood requests:  72%|███████▏  | 40197/56168 [02:33<00:30, 521.14it/s]Running loglikelihood requests:  72%|███████▏  | 40261/56168 [02:33<00:30, 521.75it/s]Running loglikelihood requests:  72%|███████▏  | 40325/56168 [02:33<00:30, 522.73it/s]Running loglikelihood requests:  72%|███████▏  | 40389/56168 [02:33<00:30, 522.05it/s]Running loglikelihood requests:  72%|███████▏  | 40453/56168 [02:33<00:30, 521.77it/s]Running loglikelihood requests:  72%|███████▏  | 40517/56168 [02:33<00:30, 520.87it/s]Running loglikelihood requests:  72%|███████▏  | 40581/56168 [02:33<00:29, 521.85it/s]Running loglikelihood requests:  72%|███████▏  | 40645/56168 [02:33<00:29, 522.66it/s]Running loglikelihood requests:  72%|███████▏  | 40709/56168 [02:34<00:29, 523.40it/s]Running loglikelihood requests:  73%|███████▎  | 40773/56168 [02:34<00:29, 524.41it/s]Running loglikelihood requests:  73%|███████▎  | 40837/56168 [02:34<00:29, 522.78it/s]Running loglikelihood requests:  73%|███████▎  | 40901/56168 [02:34<00:29, 523.09it/s]Running loglikelihood requests:  73%|███████▎  | 40965/56168 [02:34<00:29, 524.04it/s]Running loglikelihood requests:  73%|███████▎  | 41029/56168 [02:34<00:28, 524.03it/s]Running loglikelihood requests:  73%|███████▎  | 41093/56168 [02:34<00:28, 524.74it/s]Running loglikelihood requests:  73%|███████▎  | 41157/56168 [02:34<00:28, 525.82it/s]Running loglikelihood requests:  73%|███████▎  | 41221/56168 [02:35<00:28, 526.40it/s]Running loglikelihood requests:  74%|███████▎  | 41285/56168 [02:35<00:28, 526.02it/s]Running loglikelihood requests:  74%|███████▎  | 41349/56168 [02:35<00:28, 526.06it/s]Running loglikelihood requests:  74%|███████▎  | 41413/56168 [02:35<00:28, 526.73it/s]Running loglikelihood requests:  74%|███████▍  | 41477/56168 [02:35<00:27, 525.83it/s]Running loglikelihood requests:  74%|███████▍  | 41545/56168 [02:35<00:27, 536.28it/s]Running loglikelihood requests:  74%|███████▍  | 41609/56168 [02:35<00:27, 533.68it/s]Running loglikelihood requests:  74%|███████▍  | 41673/56168 [02:35<00:27, 532.46it/s]Running loglikelihood requests:  74%|███████▍  | 41737/56168 [02:35<00:27, 532.48it/s]Running loglikelihood requests:  74%|███████▍  | 41801/56168 [02:36<00:26, 532.39it/s]Running loglikelihood requests:  75%|███████▍  | 41865/56168 [02:36<00:26, 532.06it/s]Running loglikelihood requests:  75%|███████▍  | 41929/56168 [02:36<00:26, 531.28it/s]Running loglikelihood requests:  75%|███████▍  | 42001/56168 [02:36<00:25, 549.92it/s]Running loglikelihood requests:  75%|███████▍  | 42065/56168 [02:36<00:25, 544.48it/s]Running loglikelihood requests:  75%|███████▌  | 42129/56168 [02:36<00:26, 538.32it/s]Running loglikelihood requests:  75%|███████▌  | 42193/56168 [02:36<00:26, 535.36it/s]Running loglikelihood requests:  75%|███████▌  | 42257/56168 [02:36<00:26, 533.67it/s]Running loglikelihood requests:  75%|███████▌  | 42321/56168 [02:37<00:26, 532.23it/s]Running loglikelihood requests:  75%|███████▌  | 42385/56168 [02:37<00:25, 531.71it/s]Running loglikelihood requests:  76%|███████▌  | 42449/56168 [02:37<00:25, 541.15it/s]Running loglikelihood requests:  76%|███████▌  | 42513/56168 [02:37<00:25, 544.98it/s]Running loglikelihood requests:  76%|███████▌  | 42577/56168 [02:37<00:24, 551.29it/s]Running loglikelihood requests:  76%|███████▌  | 42645/56168 [02:37<00:23, 564.70it/s]Running loglikelihood requests:  76%|███████▌  | 42709/56168 [02:37<00:23, 564.73it/s]Running loglikelihood requests:  76%|███████▌  | 42773/56168 [02:37<00:23, 565.10it/s]Running loglikelihood requests:  76%|███████▋  | 42837/56168 [02:37<00:23, 563.65it/s]Running loglikelihood requests:  76%|███████▋  | 42901/56168 [02:38<00:23, 562.77it/s]Running loglikelihood requests:  76%|███████▋  | 42965/56168 [02:38<00:23, 562.78it/s]Running loglikelihood requests:  77%|███████▋  | 43029/56168 [02:38<00:23, 562.80it/s]Running loglikelihood requests:  77%|███████▋  | 43093/56168 [02:38<00:23, 565.46it/s]Running loglikelihood requests:  77%|███████▋  | 43157/56168 [02:38<00:23, 565.41it/s]Running loglikelihood requests:  77%|███████▋  | 43221/56168 [02:38<00:22, 566.57it/s]Running loglikelihood requests:  77%|███████▋  | 43285/56168 [02:38<00:22, 566.14it/s]Running loglikelihood requests:  77%|███████▋  | 43349/56168 [02:38<00:22, 567.52it/s]Running loglikelihood requests:  77%|███████▋  | 43413/56168 [02:39<00:22, 567.24it/s]Running loglikelihood requests:  77%|███████▋  | 43477/56168 [02:39<00:22, 564.38it/s]Running loglikelihood requests:  78%|███████▊  | 43541/56168 [02:39<00:22, 565.54it/s]Running loglikelihood requests:  78%|███████▊  | 43605/56168 [02:39<00:22, 565.57it/s]Running loglikelihood requests:  78%|███████▊  | 43669/56168 [02:39<00:22, 565.25it/s]Running loglikelihood requests:  78%|███████▊  | 43733/56168 [02:39<00:21, 565.67it/s]Running loglikelihood requests:  78%|███████▊  | 43797/56168 [02:39<00:21, 565.00it/s]Running loglikelihood requests:  78%|███████▊  | 43861/56168 [02:39<00:21, 566.80it/s]Running loglikelihood requests:  78%|███████▊  | 43925/56168 [02:39<00:21, 567.30it/s]Running loglikelihood requests:  78%|███████▊  | 43989/56168 [02:40<00:21, 567.67it/s]Running loglikelihood requests:  78%|███████▊  | 44053/56168 [02:40<00:21, 567.87it/s]Running loglikelihood requests:  79%|███████▊  | 44121/56168 [02:40<00:20, 577.02it/s]Running loglikelihood requests:  79%|███████▊  | 44185/56168 [02:40<00:20, 574.53it/s]Running loglikelihood requests:  79%|███████▉  | 44249/56168 [02:40<00:20, 573.08it/s]Running loglikelihood requests:  79%|███████▉  | 44313/56168 [02:40<00:20, 573.45it/s]Running loglikelihood requests:  79%|███████▉  | 44377/56168 [02:40<00:20, 572.37it/s]Running loglikelihood requests:  79%|███████▉  | 44441/56168 [02:40<00:20, 572.12it/s]Running loglikelihood requests:  79%|███████▉  | 44505/56168 [02:40<00:20, 571.33it/s]Running loglikelihood requests:  79%|███████▉  | 44569/56168 [02:41<00:20, 568.58it/s]Running loglikelihood requests:  79%|███████▉  | 44633/56168 [02:41<00:20, 569.09it/s]Running loglikelihood requests:  80%|███████▉  | 44697/56168 [02:41<00:20, 568.43it/s]Running loglikelihood requests:  80%|███████▉  | 44761/56168 [02:41<00:19, 570.50it/s]Running loglikelihood requests:  80%|███████▉  | 44825/56168 [02:41<00:19, 571.14it/s]Running loglikelihood requests:  80%|███████▉  | 44889/56168 [02:41<00:19, 572.28it/s]Running loglikelihood requests:  80%|████████  | 44953/56168 [02:41<00:19, 572.42it/s]Running loglikelihood requests:  80%|████████  | 45017/56168 [02:41<00:19, 573.31it/s]Running loglikelihood requests:  80%|████████  | 45081/56168 [02:41<00:19, 572.50it/s]Running loglikelihood requests:  80%|████████  | 45145/56168 [02:42<00:19, 571.62it/s]Running loglikelihood requests:  80%|████████  | 45209/56168 [02:42<00:19, 569.58it/s]Running loglikelihood requests:  81%|████████  | 45273/56168 [02:42<00:19, 567.63it/s]Running loglikelihood requests:  81%|████████  | 45337/56168 [02:42<00:19, 569.89it/s]Running loglikelihood requests:  81%|████████  | 45401/56168 [02:42<00:18, 570.80it/s]Running loglikelihood requests:  81%|████████  | 45465/56168 [02:42<00:18, 573.32it/s]Running loglikelihood requests:  81%|████████  | 45529/56168 [02:42<00:18, 574.23it/s]Running loglikelihood requests:  81%|████████  | 45593/56168 [02:42<00:18, 575.97it/s]Running loglikelihood requests:  81%|████████▏ | 45657/56168 [02:42<00:18, 574.85it/s]Running loglikelihood requests:  81%|████████▏ | 45721/56168 [02:43<00:18, 574.83it/s]Running loglikelihood requests:  82%|████████▏ | 45785/56168 [02:43<00:18, 572.94it/s]Running loglikelihood requests:  82%|████████▏ | 45849/56168 [02:43<00:17, 573.84it/s]Running loglikelihood requests:  82%|████████▏ | 45913/56168 [02:43<00:17, 573.21it/s]Running loglikelihood requests:  82%|████████▏ | 45977/56168 [02:43<00:17, 573.04it/s]Running loglikelihood requests:  82%|████████▏ | 46041/56168 [02:43<00:17, 574.73it/s]Running loglikelihood requests:  82%|████████▏ | 46105/56168 [02:43<00:17, 576.83it/s]Running loglikelihood requests:  82%|████████▏ | 46169/56168 [02:43<00:17, 576.79it/s]Running loglikelihood requests:  82%|████████▏ | 46233/56168 [02:43<00:17, 578.65it/s]Running loglikelihood requests:  82%|████████▏ | 46297/56168 [02:44<00:17, 576.40it/s]Running loglikelihood requests:  83%|████████▎ | 46361/56168 [02:44<00:17, 576.82it/s]Running loglikelihood requests:  83%|████████▎ | 46425/56168 [02:44<00:16, 575.27it/s]Running loglikelihood requests:  83%|████████▎ | 46489/56168 [02:44<00:16, 576.35it/s]Running loglikelihood requests:  83%|████████▎ | 46553/56168 [02:44<00:16, 574.84it/s]Running loglikelihood requests:  83%|████████▎ | 46617/56168 [02:44<00:16, 575.07it/s]Running loglikelihood requests:  83%|████████▎ | 46681/56168 [02:44<00:16, 576.39it/s]Running loglikelihood requests:  83%|████████▎ | 46745/56168 [02:44<00:16, 578.49it/s]Running loglikelihood requests:  83%|████████▎ | 46809/56168 [02:44<00:16, 578.60it/s]Running loglikelihood requests:  83%|████████▎ | 46873/56168 [02:45<00:16, 580.14it/s]Running loglikelihood requests:  84%|████████▎ | 46937/56168 [02:45<00:15, 579.82it/s]Running loglikelihood requests:  84%|████████▎ | 47001/56168 [02:45<00:15, 580.01it/s]Running loglikelihood requests:  84%|████████▍ | 47065/56168 [02:45<00:15, 578.63it/s]Running loglikelihood requests:  84%|████████▍ | 47129/56168 [02:45<00:15, 579.10it/s]Running loglikelihood requests:  84%|████████▍ | 47193/56168 [02:45<00:15, 578.50it/s]Running loglikelihood requests:  84%|████████▍ | 47257/56168 [02:45<00:15, 578.81it/s]Running loglikelihood requests:  84%|████████▍ | 47321/56168 [02:45<00:15, 579.30it/s]Running loglikelihood requests:  84%|████████▍ | 47385/56168 [02:45<00:15, 578.39it/s]Running loglikelihood requests:  84%|████████▍ | 47449/56168 [02:46<00:15, 578.86it/s]Running loglikelihood requests:  85%|████████▍ | 47513/56168 [02:46<00:14, 579.83it/s]Running loglikelihood requests:  85%|████████▍ | 47577/56168 [02:46<00:14, 580.76it/s]Running loglikelihood requests:  85%|████████▍ | 47641/56168 [02:46<00:14, 580.80it/s]Running loglikelihood requests:  85%|████████▍ | 47705/56168 [02:46<00:14, 581.91it/s]Running loglikelihood requests:  85%|████████▌ | 47769/56168 [02:46<00:14, 580.62it/s]Running loglikelihood requests:  85%|████████▌ | 47833/56168 [02:46<00:14, 581.88it/s]Running loglikelihood requests:  85%|████████▌ | 47897/56168 [02:46<00:14, 580.82it/s]Running loglikelihood requests:  85%|████████▌ | 47961/56168 [02:46<00:14, 581.07it/s]Running loglikelihood requests:  86%|████████▌ | 48025/56168 [02:47<00:13, 581.75it/s]Running loglikelihood requests:  86%|████████▌ | 48089/56168 [02:47<00:13, 582.08it/s]Running loglikelihood requests:  86%|████████▌ | 48153/56168 [02:47<00:13, 582.23it/s]Running loglikelihood requests:  86%|████████▌ | 48217/56168 [02:47<00:13, 581.20it/s]Running loglikelihood requests:  86%|████████▌ | 48281/56168 [02:47<00:13, 586.89it/s]Running loglikelihood requests:  86%|████████▌ | 48345/56168 [02:47<00:13, 591.46it/s]Running loglikelihood requests:  86%|████████▌ | 48413/56168 [02:47<00:12, 605.55it/s]Running loglikelihood requests:  86%|████████▋ | 48477/56168 [02:47<00:12, 605.80it/s]Running loglikelihood requests:  86%|████████▋ | 48541/56168 [02:47<00:12, 605.62it/s]Running loglikelihood requests:  87%|████████▋ | 48605/56168 [02:47<00:12, 603.90it/s]Running loglikelihood requests:  87%|████████▋ | 48669/56168 [02:48<00:12, 603.54it/s]Running loglikelihood requests:  87%|████████▋ | 48733/56168 [02:48<00:12, 604.04it/s]Running loglikelihood requests:  87%|████████▋ | 48797/56168 [02:48<00:12, 603.96it/s]Running loglikelihood requests:  87%|████████▋ | 48861/56168 [02:48<00:12, 603.10it/s]Running loglikelihood requests:  87%|████████▋ | 48925/56168 [02:48<00:12, 602.40it/s]Running loglikelihood requests:  87%|████████▋ | 48989/56168 [02:48<00:11, 604.51it/s]Running loglikelihood requests:  87%|████████▋ | 49061/56168 [02:48<00:11, 627.78it/s]Running loglikelihood requests:  87%|████████▋ | 49125/56168 [02:48<00:11, 621.49it/s]Running loglikelihood requests:  88%|████████▊ | 49189/56168 [02:48<00:11, 615.73it/s]Running loglikelihood requests:  88%|████████▊ | 49253/56168 [02:49<00:11, 611.99it/s]Running loglikelihood requests:  88%|████████▊ | 49317/56168 [02:49<00:11, 611.08it/s]Running loglikelihood requests:  88%|████████▊ | 49381/56168 [02:49<00:11, 609.96it/s]Running loglikelihood requests:  88%|████████▊ | 49445/56168 [02:49<00:11, 607.77it/s]Running loglikelihood requests:  88%|████████▊ | 49509/56168 [02:49<00:10, 608.12it/s]Running loglikelihood requests:  88%|████████▊ | 49573/56168 [02:49<00:10, 607.45it/s]Running loglikelihood requests:  88%|████████▊ | 49637/56168 [02:49<00:10, 607.67it/s]Running loglikelihood requests:  88%|████████▊ | 49701/56168 [02:49<00:10, 606.66it/s]Running loglikelihood requests:  89%|████████▊ | 49765/56168 [02:49<00:10, 606.82it/s]Running loglikelihood requests:  89%|████████▊ | 49829/56168 [02:50<00:10, 607.59it/s]Running loglikelihood requests:  89%|████████▉ | 49893/56168 [02:50<00:10, 609.45it/s]Running loglikelihood requests:  89%|████████▉ | 49957/56168 [02:50<00:10, 610.16it/s]Running loglikelihood requests:  89%|████████▉ | 50021/56168 [02:50<00:10, 609.82it/s]Running loglikelihood requests:  89%|████████▉ | 50085/56168 [02:50<00:09, 608.93it/s]Running loglikelihood requests:  89%|████████▉ | 50149/56168 [02:50<00:09, 609.87it/s]Running loglikelihood requests:  89%|████████▉ | 50213/56168 [02:50<00:09, 609.78it/s]Running loglikelihood requests:  90%|████████▉ | 50277/56168 [02:50<00:09, 610.20it/s]Running loglikelihood requests:  90%|████████▉ | 50341/56168 [02:50<00:09, 609.15it/s]Running loglikelihood requests:  90%|████████▉ | 50405/56168 [02:50<00:09, 610.55it/s]Running loglikelihood requests:  90%|████████▉ | 50469/56168 [02:51<00:09, 611.87it/s]Running loglikelihood requests:  90%|████████▉ | 50533/56168 [02:51<00:09, 613.46it/s]Running loglikelihood requests:  90%|█████████ | 50597/56168 [02:51<00:09, 614.49it/s]Running loglikelihood requests:  90%|█████████ | 50661/56168 [02:51<00:08, 615.27it/s]Running loglikelihood requests:  90%|█████████ | 50725/56168 [02:51<00:08, 614.87it/s]Running loglikelihood requests:  90%|█████████ | 50793/56168 [02:51<00:08, 623.21it/s]Running loglikelihood requests:  91%|█████████ | 50857/56168 [02:51<00:08, 620.47it/s]Running loglikelihood requests:  91%|█████████ | 50921/56168 [02:51<00:08, 619.21it/s]Running loglikelihood requests:  91%|█████████ | 50985/56168 [02:51<00:08, 617.94it/s]Running loglikelihood requests:  91%|█████████ | 51049/56168 [02:51<00:08, 617.13it/s]Running loglikelihood requests:  91%|█████████ | 51113/56168 [02:52<00:08, 616.78it/s]Running loglikelihood requests:  91%|█████████ | 51177/56168 [02:52<00:08, 615.82it/s]Running loglikelihood requests:  91%|█████████ | 51241/56168 [02:52<00:07, 616.67it/s]Running loglikelihood requests:  91%|█████████▏| 51305/56168 [02:52<00:07, 616.96it/s]Running loglikelihood requests:  91%|█████████▏| 51369/56168 [02:52<00:07, 617.78it/s]Running loglikelihood requests:  92%|█████████▏| 51433/56168 [02:52<00:07, 617.86it/s]Running loglikelihood requests:  92%|█████████▏| 51497/56168 [02:52<00:07, 618.62it/s]Running loglikelihood requests:  92%|█████████▏| 51561/56168 [02:52<00:07, 617.85it/s]Running loglikelihood requests:  92%|█████████▏| 51625/56168 [02:52<00:07, 615.45it/s]Running loglikelihood requests:  92%|█████████▏| 51689/56168 [02:53<00:07, 615.96it/s]Running loglikelihood requests:  92%|█████████▏| 51753/56168 [02:53<00:07, 616.10it/s]Running loglikelihood requests:  92%|█████████▏| 51821/56168 [02:53<00:06, 627.96it/s]Running loglikelihood requests:  92%|█████████▏| 51885/56168 [02:53<00:06, 624.27it/s]Running loglikelihood requests:  92%|█████████▏| 51949/56168 [02:53<00:06, 623.89it/s]Running loglikelihood requests:  93%|█████████▎| 52013/56168 [02:53<00:06, 622.65it/s]Running loglikelihood requests:  93%|█████████▎| 52077/56168 [02:53<00:06, 621.27it/s]Running loglikelihood requests:  93%|█████████▎| 52141/56168 [02:53<00:06, 620.87it/s]Running loglikelihood requests:  93%|█████████▎| 52205/56168 [02:53<00:06, 620.42it/s]Running loglikelihood requests:  93%|█████████▎| 52269/56168 [02:53<00:06, 620.06it/s]Running loglikelihood requests:  93%|█████████▎| 52333/56168 [02:54<00:06, 618.94it/s]Running loglikelihood requests:  93%|█████████▎| 52397/56168 [02:54<00:06, 620.25it/s]Running loglikelihood requests:  93%|█████████▎| 52461/56168 [02:54<00:05, 621.02it/s]Running loglikelihood requests:  94%|█████████▎| 52525/56168 [02:54<00:05, 622.57it/s]Running loglikelihood requests:  94%|█████████▎| 52589/56168 [02:54<00:05, 623.84it/s]Running loglikelihood requests:  94%|█████████▎| 52653/56168 [02:54<00:05, 624.26it/s]Running loglikelihood requests:  94%|█████████▍| 52717/56168 [02:54<00:05, 623.72it/s]Running loglikelihood requests:  94%|█████████▍| 52781/56168 [02:54<00:05, 623.21it/s]Running loglikelihood requests:  94%|█████████▍| 52845/56168 [02:54<00:05, 622.39it/s]Running loglikelihood requests:  94%|█████████▍| 52909/56168 [02:54<00:05, 622.49it/s]Running loglikelihood requests:  94%|█████████▍| 52973/56168 [02:55<00:05, 621.65it/s]Running loglikelihood requests:  94%|█████████▍| 53037/56168 [02:55<00:05, 623.87it/s]Running loglikelihood requests:  95%|█████████▍| 53101/56168 [02:55<00:04, 625.10it/s]Running loglikelihood requests:  95%|█████████▍| 53165/56168 [02:55<00:04, 626.39it/s]Running loglikelihood requests:  95%|█████████▍| 53229/56168 [02:55<00:04, 627.39it/s]Running loglikelihood requests:  95%|█████████▍| 53293/56168 [02:55<00:04, 627.56it/s]Running loglikelihood requests:  95%|█████████▍| 53357/56168 [02:55<00:04, 627.27it/s]Running loglikelihood requests:  95%|█████████▌| 53421/56168 [02:55<00:04, 626.79it/s]Running loglikelihood requests:  95%|█████████▌| 53485/56168 [02:55<00:04, 626.27it/s]Running loglikelihood requests:  95%|█████████▌| 53576/56168 [02:56<00:03, 710.10it/s]Running loglikelihood requests:  96%|█████████▌| 53664/56168 [02:56<00:03, 760.36it/s]Running loglikelihood requests:  96%|█████████▌| 53741/56168 [02:56<00:04, 606.74it/s]Running loglikelihood requests:  96%|█████████▌| 53826/56168 [02:56<00:03, 668.07it/s]Running loglikelihood requests:  96%|█████████▌| 53917/56168 [02:56<00:03, 731.94it/s]Running loglikelihood requests:  96%|█████████▌| 53997/56168 [02:56<00:03, 606.24it/s]Running loglikelihood requests:  96%|█████████▋| 54081/56168 [02:56<00:03, 662.27it/s]Running loglikelihood requests:  96%|█████████▋| 54175/56168 [02:56<00:02, 733.14it/s]Running loglikelihood requests:  97%|█████████▋| 54254/56168 [02:57<00:03, 608.28it/s]Running loglikelihood requests:  97%|█████████▋| 54336/56168 [02:57<00:02, 658.37it/s]Running loglikelihood requests:  97%|█████████▋| 54410/56168 [02:57<00:02, 678.99it/s]Running loglikelihood requests:  97%|█████████▋| 54501/56168 [02:57<00:02, 740.25it/s]Running loglikelihood requests:  97%|█████████▋| 54580/56168 [02:57<00:02, 610.11it/s]Running loglikelihood requests:  97%|█████████▋| 54667/56168 [02:57<00:02, 672.57it/s]Running loglikelihood requests:  97%|█████████▋| 54757/56168 [02:57<00:01, 730.80it/s]Running loglikelihood requests:  98%|█████████▊| 54836/56168 [02:57<00:02, 610.08it/s]Running loglikelihood requests:  98%|█████████▊| 54929/56168 [02:58<00:01, 686.10it/s]Running loglikelihood requests:  98%|█████████▊| 55021/56168 [02:58<00:01, 612.13it/s]Running loglikelihood requests:  98%|█████████▊| 55122/56168 [02:58<00:01, 703.29it/s]Running loglikelihood requests:  98%|█████████▊| 55213/56168 [02:58<00:01, 625.03it/s]Running loglikelihood requests:  98%|█████████▊| 55310/56168 [02:58<00:01, 702.94it/s]Running loglikelihood requests:  99%|█████████▊| 55405/56168 [02:58<00:01, 634.41it/s]Running loglikelihood requests:  99%|█████████▉| 55512/56168 [02:58<00:00, 732.25it/s]Running loglikelihood requests:  99%|█████████▉| 55597/56168 [02:59<00:00, 635.11it/s]Running loglikelihood requests:  99%|█████████▉| 55694/56168 [02:59<00:00, 710.21it/s]Running loglikelihood requests:  99%|█████████▉| 55789/56168 [02:59<00:00, 643.52it/s]Running loglikelihood requests: 100%|█████████▉| 55897/56168 [02:59<00:00, 741.69it/s]Running loglikelihood requests: 100%|█████████▉| 55981/56168 [02:59<00:00, 657.46it/s]Running loglikelihood requests: 100%|█████████▉| 56109/56168 [02:59<00:00, 700.75it/s]Running loglikelihood requests: 100%|██████████| 56168/56168 [02:59<00:00, 312.40it/s]
2025-05-16:03:24:48,132 INFO     [evaluation_tracker.py:269] Output path not provided, skipping saving results aggregated
hf (pretrained=shengyuanhu/wmdp_unlearn_rmu_150_1200_6.5_zephyr,tokenizer=HuggingFaceH4/zephyr-7b-beta), gen_kwargs: (None), limit: None, num_fewshot: None, batch_size: 16
|                 Tasks                 |Version|Filter|n-shot|Metric|   |Value |   |Stderr|
|---------------------------------------|------:|------|-----:|------|---|-----:|---|-----:|
|mmlu                                   |      2|none  |      |acc   |↑  |0.5748|±  |0.0039|
| - humanities                          |      2|none  |      |acc   |↑  |0.5199|±  |0.0068|
|  - formal_logic                       |      1|none  |     0|acc   |↑  |0.3889|±  |0.0436|
|  - high_school_european_history       |      1|none  |     0|acc   |↑  |0.7030|±  |0.0357|
|  - high_school_us_history             |      1|none  |     0|acc   |↑  |0.7647|±  |0.0298|
|  - high_school_world_history          |      1|none  |     0|acc   |↑  |0.7426|±  |0.0285|
|  - international_law                  |      1|none  |     0|acc   |↑  |0.6942|±  |0.0421|
|  - jurisprudence                      |      1|none  |     0|acc   |↑  |0.6852|±  |0.0449|
|  - logical_fallacies                  |      1|none  |     0|acc   |↑  |0.6810|±  |0.0366|
|  - moral_disputes                     |      1|none  |     0|acc   |↑  |0.6647|±  |0.0254|
|  - moral_scenarios                    |      1|none  |     0|acc   |↑  |0.2804|±  |0.0150|
|  - philosophy                         |      1|none  |     0|acc   |↑  |0.6592|±  |0.0269|
|  - prehistory                         |      1|none  |     0|acc   |↑  |0.6543|±  |0.0265|
|  - professional_law                   |      1|none  |     0|acc   |↑  |0.4224|±  |0.0126|
|  - world_religions                    |      1|none  |     0|acc   |↑  |0.7836|±  |0.0316|
| - other                               |      2|none  |      |acc   |↑  |0.6360|±  |0.0082|
|  - business_ethics                    |      1|none  |     0|acc   |↑  |0.5500|±  |0.0500|
|  - clinical_knowledge                 |      1|none  |     0|acc   |↑  |0.6264|±  |0.0298|
|  - college_medicine                   |      1|none  |     0|acc   |↑  |0.5838|±  |0.0376|
|  - global_facts                       |      1|none  |     0|acc   |↑  |0.3300|±  |0.0473|
|  - human_aging                        |      1|none  |     0|acc   |↑  |0.6457|±  |0.0321|
|  - management                         |      1|none  |     0|acc   |↑  |0.7379|±  |0.0435|
|  - marketing                          |      1|none  |     0|acc   |↑  |0.8205|±  |0.0251|
|  - medical_genetics                   |      1|none  |     0|acc   |↑  |0.6900|±  |0.0465|
|  - miscellaneous                      |      1|none  |     0|acc   |↑  |0.7905|±  |0.0146|
|  - nutrition                          |      1|none  |     0|acc   |↑  |0.6569|±  |0.0272|
|  - professional_accounting            |      1|none  |     0|acc   |↑  |0.4220|±  |0.0295|
|  - professional_medicine              |      1|none  |     0|acc   |↑  |0.5699|±  |0.0301|
|  - virology                           |      1|none  |     0|acc   |↑  |0.2771|±  |0.0348|
| - social sciences                     |      2|none  |      |acc   |↑  |0.6812|±  |0.0082|
|  - econometrics                       |      1|none  |     0|acc   |↑  |0.4211|±  |0.0464|
|  - high_school_geography              |      1|none  |     0|acc   |↑  |0.7222|±  |0.0319|
|  - high_school_government_and_politics|      1|none  |     0|acc   |↑  |0.8187|±  |0.0278|
|  - high_school_macroeconomics         |      1|none  |     0|acc   |↑  |0.5769|±  |0.0250|
|  - high_school_microeconomics         |      1|none  |     0|acc   |↑  |0.6218|±  |0.0315|
|  - high_school_psychology             |      1|none  |     0|acc   |↑  |0.7890|±  |0.0175|
|  - human_sexuality                    |      1|none  |     0|acc   |↑  |0.7099|±  |0.0398|
|  - professional_psychology            |      1|none  |     0|acc   |↑  |0.6013|±  |0.0198|
|  - public_relations                   |      1|none  |     0|acc   |↑  |0.6182|±  |0.0465|
|  - security_studies                   |      1|none  |     0|acc   |↑  |0.6571|±  |0.0304|
|  - sociology                          |      1|none  |     0|acc   |↑  |0.8607|±  |0.0245|
|  - us_foreign_policy                  |      1|none  |     0|acc   |↑  |0.8100|±  |0.0394|
| - stem                                |      2|none  |      |acc   |↑  |0.4925|±  |0.0087|
|  - abstract_algebra                   |      1|none  |     0|acc   |↑  |0.2800|±  |0.0451|
|  - anatomy                            |      1|none  |     0|acc   |↑  |0.5630|±  |0.0428|
|  - astronomy                          |      1|none  |     0|acc   |↑  |0.6184|±  |0.0395|
|  - college_biology                    |      1|none  |     0|acc   |↑  |0.6389|±  |0.0402|
|  - college_chemistry                  |      1|none  |     0|acc   |↑  |0.4900|±  |0.0502|
|  - college_computer_science           |      1|none  |     0|acc   |↑  |0.4900|±  |0.0502|
|  - college_mathematics                |      1|none  |     0|acc   |↑  |0.3700|±  |0.0485|
|  - college_physics                    |      1|none  |     0|acc   |↑  |0.5098|±  |0.0497|
|  - computer_security                  |      1|none  |     0|acc   |↑  |0.4700|±  |0.0502|
|  - conceptual_physics                 |      1|none  |     0|acc   |↑  |0.4936|±  |0.0327|
|  - electrical_engineering             |      1|none  |     0|acc   |↑  |0.5517|±  |0.0414|
|  - elementary_mathematics             |      1|none  |     0|acc   |↑  |0.4153|±  |0.0254|
|  - high_school_biology                |      1|none  |     0|acc   |↑  |0.7000|±  |0.0261|
|  - high_school_chemistry              |      1|none  |     0|acc   |↑  |0.5074|±  |0.0352|
|  - high_school_computer_science       |      1|none  |     0|acc   |↑  |0.5500|±  |0.0500|
|  - high_school_mathematics            |      1|none  |     0|acc   |↑  |0.3667|±  |0.0294|
|  - high_school_physics                |      1|none  |     0|acc   |↑  |0.2848|±  |0.0368|
|  - high_school_statistics             |      1|none  |     0|acc   |↑  |0.4954|±  |0.0341|
|  - machine_learning                   |      1|none  |     0|acc   |↑  |0.4643|±  |0.0473|

|      Groups      |Version|Filter|n-shot|Metric|   |Value |   |Stderr|
|------------------|------:|------|------|------|---|-----:|---|-----:|
|mmlu              |      2|none  |      |acc   |↑  |0.5748|±  |0.0039|
| - humanities     |      2|none  |      |acc   |↑  |0.5199|±  |0.0068|
| - other          |      2|none  |      |acc   |↑  |0.6360|±  |0.0082|
| - social sciences|      2|none  |      |acc   |↑  |0.6812|±  |0.0082|
| - stem           |      2|none  |      |acc   |↑  |0.4925|±  |0.0087|

2025-05-16:03:24:54,101 INFO     [__main__.py:279] Verbosity set to INFO
2025-05-16:03:24:54,221 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:54,224 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:54,226 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:54,229 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:54,231 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:54,234 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:54,236 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:54,239 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:54,241 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:54,244 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:54,246 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:54,249 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:54,251 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:54,254 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:54,256 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:54,259 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:54,261 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:54,264 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:54,266 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:54,269 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:54,271 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:54,274 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:54,276 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:54,278 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:54,281 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:54,283 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:54,286 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:54,288 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:54,290 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:54,293 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:54,295 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:54,298 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:54,300 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:54,303 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:54,305 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:54,307 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:54,967 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:54,971 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:54,974 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:54,978 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:54,981 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:54,984 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:54,988 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:54,991 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:54,995 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:54,998 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:55,001 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:55,005 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:55,009 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:55,013 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:55,018 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:55,022 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:55,026 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:55,030 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:55,034 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:55,038 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:55,042 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:55,046 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:55,049 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:55,053 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:55,056 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:55,060 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:55,063 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:55,067 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:55,070 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:55,074 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:55,077 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:55,081 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:55,084 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:55,801 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:55,804 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:55,806 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:55,809 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:55,811 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:55,814 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:55,816 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:55,819 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:55,821 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:55,823 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:55,826 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:55,828 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:55,831 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:55,833 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:55,836 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:55,838 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:56,146 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:56,147 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:56,149 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:56,151 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:56,152 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:56,154 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:56,190 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:56,215 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:56,219 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:56,223 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:56,227 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:56,230 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:56,234 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:56,238 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:56,241 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:56,245 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:56,249 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:56,252 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:56,256 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:56,260 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:56,263 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:56,267 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:56,271 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:56,274 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:56,278 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:56,282 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:56,285 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:56,289 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:56,293 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:56,296 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:56,300 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:56,304 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:56,307 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:56,311 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:56,315 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:56,318 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:56,322 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:56,326 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:56,329 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:56,333 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:56,336 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:56,340 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:56,344 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:56,348 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:56,351 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:56,355 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:56,359 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:56,363 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:56,367 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:56,370 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:56,374 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:56,378 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:56,382 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:56,385 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:56,389 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:56,393 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:56,397 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:56,401 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:56,404 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:56,408 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:56,412 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:56,413 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:56,413 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:56,414 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:56,414 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:56,415 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:56,415 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:56,415 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:56,492 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:56,495 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:56,498 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:56,500 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:56,503 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:56,506 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:56,508 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:56,511 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:56,514 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:56,517 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:56,519 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:56,522 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:56,525 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:56,527 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:56,530 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:56,533 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:56,535 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:56,538 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:56,541 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:56,543 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:56,546 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:56,549 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:56,551 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:56,554 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:56,556 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:56,559 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:56,562 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:56,564 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:56,567 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:56,569 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:56,572 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:56,574 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:56,577 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:56,580 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:56,582 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:56,585 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:56,587 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:56,590 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:56,592 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:56,595 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:56,597 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:56,599 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:56,602 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:56,604 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:56,607 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:56,609 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:56,612 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:56,614 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:56,616 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:56,619 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:56,621 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:56,624 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:56,626 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:56,629 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:56,632 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:56,634 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:56,637 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:56,640 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:56,642 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:56,645 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:56,648 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:56,651 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:56,653 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:56,656 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:56,659 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:56,661 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:56,664 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:56,667 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:56,669 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:56,672 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:56,675 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:56,677 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:56,680 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:56,682 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:56,685 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:56,687 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:56,690 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:56,693 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:56,695 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:56,698 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:56,700 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:56,703 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:56,705 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:56,708 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:56,710 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:56,713 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:56,715 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:56,718 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:57,676 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:57,709 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:57,711 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:57,714 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:57,715 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:57,717 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:57,719 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:57,722 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:58,599 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:58,601 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:58,603 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:58,605 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:58,607 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:58,609 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:58,611 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:58,613 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:58,614 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:58,616 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:58,618 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:58,620 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:58,622 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:58,624 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:58,626 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:58,627 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:58,629 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:58,631 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:58,633 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:58,635 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:58,637 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:58,638 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:58,640 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:58,642 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:58,644 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:58,646 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:58,648 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:58,650 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:58,652 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:58,653 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:58,655 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:58,657 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:58,659 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:58,661 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:58,663 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:58,665 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:58,666 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:58,668 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:58,670 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:58,672 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:58,674 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:58,676 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:58,678 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:58,680 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:58,682 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:58,683 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:58,685 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:58,687 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:58,689 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:58,691 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:58,693 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:58,695 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:58,696 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:58,698 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:58,700 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:58,702 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:58,704 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:58,706 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:58,708 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:58,710 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:58,712 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:58,713 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:58,715 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:58,717 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:58,719 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:58,721 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:58,723 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:58,725 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:58,726 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:58,728 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:58,730 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:58,732 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:58,734 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:58,736 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:58,738 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:58,740 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:58,741 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:58,743 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:58,745 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:58,747 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:58,749 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:58,752 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:58,754 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:58,756 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:58,758 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:58,760 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:58,762 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:58,763 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:58,765 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:58,767 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:58,769 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:58,771 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:58,773 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:58,775 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:58,776 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:58,778 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:58,780 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:58,782 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:58,784 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:58,786 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:58,787 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:58,789 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:58,791 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:58,793 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:58,795 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:58,796 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:58,798 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:58,800 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:58,802 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:58,804 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:58,806 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:58,807 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:58,809 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:58,811 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:58,813 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:58,815 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:58,816 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:58,818 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:58,820 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:58,822 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:58,824 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:58,825 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:58,827 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:58,829 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:58,831 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:58,832 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:58,834 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:58,836 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:58,838 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:58,840 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:58,841 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:58,843 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:58,845 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:58,847 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:58,848 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:58,850 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:58,852 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:58,854 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:58,856 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:58,857 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:58,859 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:58,861 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:58,863 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:58,865 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:58,866 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:58,868 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:58,870 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:58,872 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:58,873 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:58,875 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:58,877 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:58,878 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:58,880 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:58,882 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:58,884 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:58,885 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:58,887 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:58,889 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:58,890 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:58,892 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:58,894 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:58,895 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:58,897 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:58,899 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:58,900 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:58,902 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:58,904 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:58,906 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:58,907 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:58,909 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:58,910 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:58,912 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:58,913 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:58,914 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:58,916 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:58,917 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:58,919 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:58,920 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:58,922 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:58,923 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:58,925 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:58,926 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:58,928 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:58,929 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:58,931 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:58,932 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:58,934 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:58,935 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:58,936 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:58,938 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:58,939 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:58,941 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:58,942 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:58,944 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:58,945 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:58,947 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:58,948 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:58,950 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:58,951 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:58,953 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:58,954 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:58,956 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:58,957 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:58,958 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:58,960 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:58,961 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:58,963 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:58,964 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:58,966 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:58,967 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:58,968 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:58,970 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:58,971 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:58,973 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:58,974 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:58,976 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:58,977 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:58,978 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:58,980 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:58,981 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:58,983 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:58,984 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:58,986 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:58,987 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:58,988 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:58,990 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:58,991 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:58,993 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:58,994 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:58,996 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:58,997 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:58,998 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:59,000 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:59,001 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:59,003 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:59,004 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:59,006 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:59,007 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:59,008 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:59,010 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:59,011 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:59,013 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:59,014 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:59,015 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:59,017 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:59,018 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:59,020 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:59,021 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:59,023 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:59,024 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:59,025 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:59,027 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:59,028 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:59,030 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:59,031 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:59,032 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:59,034 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:59,035 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:59,037 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:59,038 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:59,040 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:59,041 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:59,042 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:59,044 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:59,045 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:59,047 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:59,048 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:59,049 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:59,051 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:59,052 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:59,053 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:59,055 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:59,056 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:59,058 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:59,059 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:59,060 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:59,062 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:59,063 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:59,064 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:59,066 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:59,067 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:59,069 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:59,070 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:59,071 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:59,073 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:59,074 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:59,132 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:59,134 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:59,137 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:59,139 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:59,141 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:59,144 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:24:59,146 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:25:01,412 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:25:01,415 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:25:01,418 INFO     [__main__.py:376] Selected Tasks: ['mmlu']
2025-05-16:03:25:01,421 INFO     [evaluator.py:161] Setting random seed to 0 | Setting numpy seed to 1234 | Setting torch manual seed to 1234
2025-05-16:03:25:01,422 INFO     [evaluator.py:198] Initializing hf model, with arguments: {'pretrained': 'shengyuanhu/benchmark_wmdp_ga_ckpt_140', 'tokenizer': 'HuggingFaceH4/zephyr-7b-beta'}
2025-05-16:03:25:01,929 INFO     [huggingface.py:130] Using device 'cuda:1'
2025-05-16:03:25:02,124 INFO     [huggingface.py:366] Model parallel was set to False, max memory was not set, and device map was set to {'': 'cuda:1'}
Loading checkpoint shards:   0%|          | 0/3 [00:00<?, ?it/s]Loading checkpoint shards:  33%|███▎      | 1/3 [00:01<00:03,  1.91s/it]Loading checkpoint shards:  67%|██████▋   | 2/3 [00:03<00:01,  1.53s/it]Loading checkpoint shards: 100%|██████████| 3/3 [00:04<00:00,  1.35s/it]Loading checkpoint shards: 100%|██████████| 3/3 [00:04<00:00,  1.43s/it]
2025-05-16:03:25:25,170 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:25:25,170 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:25:25,170 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:25:25,170 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:25:25,171 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:25:25,171 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:25:25,171 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:25:25,171 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:25:25,171 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:25:25,171 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:25:25,172 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:25:25,172 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:25:25,172 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:25:25,172 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:25:25,172 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:25:25,172 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:25:25,173 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:25:25,173 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:25:25,173 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:25:25,173 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:25:25,173 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:25:25,173 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:25:25,174 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:25:25,174 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:25:25,175 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:25:25,175 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:25:25,175 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:25:25,175 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:25:25,175 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:25:25,175 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:25:25,175 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:25:25,175 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:25:25,176 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:25:25,176 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:25:25,176 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:25:25,176 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:25:25,176 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:25:25,176 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:25:25,176 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:25:25,177 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:25:25,177 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:25:25,177 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:25:25,177 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:25:25,177 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:25:25,177 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:25:25,177 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:25:25,178 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:25:25,178 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:25:25,178 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:25:25,178 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:25:25,178 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:25:25,178 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:25:25,178 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:25:25,179 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:25:25,179 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:25:25,179 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:25:25,179 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:25:25,179 WARNING  [model.py:422] model.chat_template was called with the chat_template set to False or None. Therefore no chat template will be applied. Make sure this is an intended behavior.
2025-05-16:03:25:25,185 INFO     [task.py:428] Building contexts for mmlu_high_school_computer_science on rank 0...
  0%|          | 0/100 [00:00<?, ?it/s] 73%|███████▎  | 73/100 [00:00<00:00, 726.43it/s]100%|██████████| 100/100 [00:00<00:00, 727.70it/s]
2025-05-16:03:25:25,328 INFO     [task.py:428] Building contexts for mmlu_high_school_biology on rank 0...
  0%|          | 0/310 [00:00<?, ?it/s] 24%|██▍       | 75/310 [00:00<00:00, 742.84it/s] 48%|████▊     | 150/310 [00:00<00:00, 746.42it/s] 73%|███████▎  | 225/310 [00:00<00:00, 739.09it/s] 99%|█████████▊| 306/310 [00:00<00:00, 764.23it/s]100%|██████████| 310/310 [00:00<00:00, 756.91it/s]
2025-05-16:03:25:25,749 INFO     [task.py:428] Building contexts for mmlu_abstract_algebra on rank 0...
  0%|          | 0/100 [00:00<?, ?it/s] 85%|████████▌ | 85/100 [00:00<00:00, 844.72it/s]100%|██████████| 100/100 [00:00<00:00, 824.87it/s]
2025-05-16:03:25:25,875 INFO     [task.py:428] Building contexts for mmlu_electrical_engineering on rank 0...
  0%|          | 0/145 [00:00<?, ?it/s] 51%|█████     | 74/145 [00:00<00:00, 736.82it/s]100%|██████████| 145/145 [00:00<00:00, 741.69it/s]
2025-05-16:03:25:26,076 INFO     [task.py:428] Building contexts for mmlu_college_chemistry on rank 0...
  0%|          | 0/100 [00:00<?, ?it/s] 76%|███████▌  | 76/100 [00:00<00:00, 754.56it/s]100%|██████████| 100/100 [00:00<00:00, 753.73it/s]
2025-05-16:03:25:26,214 INFO     [task.py:428] Building contexts for mmlu_high_school_chemistry on rank 0...
  0%|          | 0/203 [00:00<?, ?it/s] 37%|███▋      | 75/203 [00:00<00:00, 742.41it/s] 74%|███████▍  | 150/203 [00:00<00:00, 746.58it/s]100%|██████████| 203/203 [00:00<00:00, 747.38it/s]
2025-05-16:03:25:26,494 INFO     [task.py:428] Building contexts for mmlu_astronomy on rank 0...
  0%|          | 0/152 [00:00<?, ?it/s] 50%|█████     | 76/152 [00:00<00:00, 754.15it/s]100%|██████████| 152/152 [00:00<00:00, 756.33it/s]100%|██████████| 152/152 [00:00<00:00, 755.07it/s]
2025-05-16:03:25:26,702 INFO     [task.py:428] Building contexts for mmlu_college_physics on rank 0...
  0%|          | 0/102 [00:00<?, ?it/s] 73%|███████▎  | 74/102 [00:00<00:00, 734.68it/s]100%|██████████| 102/102 [00:00<00:00, 738.82it/s]
2025-05-16:03:25:26,844 INFO     [task.py:428] Building contexts for mmlu_college_computer_science on rank 0...
  0%|          | 0/100 [00:00<?, ?it/s] 76%|███████▌  | 76/100 [00:00<00:00, 758.85it/s]100%|██████████| 100/100 [00:00<00:00, 759.45it/s]
2025-05-16:03:25:26,981 INFO     [task.py:428] Building contexts for mmlu_college_biology on rank 0...
  0%|          | 0/144 [00:00<?, ?it/s] 53%|█████▎    | 77/144 [00:00<00:00, 767.20it/s]100%|██████████| 144/144 [00:00<00:00, 764.34it/s]
2025-05-16:03:25:27,176 INFO     [task.py:428] Building contexts for mmlu_conceptual_physics on rank 0...
  0%|          | 0/235 [00:00<?, ?it/s] 32%|███▏      | 76/235 [00:00<00:00, 757.00it/s] 65%|██████▍   | 152/235 [00:00<00:00, 744.78it/s] 97%|█████████▋| 228/235 [00:00<00:00, 747.93it/s]100%|██████████| 235/235 [00:00<00:00, 747.17it/s]
2025-05-16:03:25:27,499 INFO     [task.py:428] Building contexts for mmlu_machine_learning on rank 0...
  0%|          | 0/112 [00:00<?, ?it/s] 68%|██████▊   | 76/112 [00:00<00:00, 756.56it/s]100%|██████████| 112/112 [00:00<00:00, 756.47it/s]
2025-05-16:03:25:27,652 INFO     [task.py:428] Building contexts for mmlu_high_school_mathematics on rank 0...
  0%|          | 0/270 [00:00<?, ?it/s] 28%|██▊       | 76/270 [00:00<00:00, 758.69it/s] 56%|█████▋    | 152/270 [00:00<00:00, 757.91it/s] 84%|████████▍ | 228/270 [00:00<00:00, 748.76it/s]100%|██████████| 270/270 [00:00<00:00, 751.04it/s]
2025-05-16:03:25:28,022 INFO     [task.py:428] Building contexts for mmlu_computer_security on rank 0...
  0%|          | 0/100 [00:00<?, ?it/s] 75%|███████▌  | 75/100 [00:00<00:00, 749.91it/s]100%|██████████| 100/100 [00:00<00:00, 750.19it/s]
2025-05-16:03:25:28,161 INFO     [task.py:428] Building contexts for mmlu_college_mathematics on rank 0...
  0%|          | 0/100 [00:00<?, ?it/s] 79%|███████▉  | 79/100 [00:00<00:00, 781.26it/s]100%|██████████| 100/100 [00:00<00:00, 798.64it/s]
2025-05-16:03:25:28,291 INFO     [task.py:428] Building contexts for mmlu_anatomy on rank 0...
  0%|          | 0/135 [00:00<?, ?it/s] 59%|█████▉    | 80/135 [00:00<00:00, 791.13it/s]100%|██████████| 135/135 [00:00<00:00, 779.20it/s]
2025-05-16:03:25:28,469 INFO     [task.py:428] Building contexts for mmlu_elementary_mathematics on rank 0...
  0%|          | 0/378 [00:00<?, ?it/s] 20%|██        | 76/378 [00:00<00:00, 753.73it/s] 40%|████      | 152/378 [00:00<00:00, 740.47it/s] 60%|██████    | 228/378 [00:00<00:00, 746.23it/s] 80%|████████  | 304/378 [00:00<00:00, 748.91it/s]100%|██████████| 378/378 [00:00<00:00, 748.25it/s]
2025-05-16:03:25:28,988 INFO     [task.py:428] Building contexts for mmlu_high_school_physics on rank 0...
  0%|          | 0/151 [00:00<?, ?it/s] 50%|█████     | 76/151 [00:00<00:00, 756.13it/s]100%|██████████| 151/151 [00:00<00:00, 756.55it/s]
2025-05-16:03:25:29,194 INFO     [task.py:428] Building contexts for mmlu_high_school_statistics on rank 0...
  0%|          | 0/216 [00:00<?, ?it/s] 36%|███▌      | 77/216 [00:00<00:00, 761.84it/s] 71%|███████▏  | 154/216 [00:00<00:00, 751.90it/s]100%|██████████| 216/216 [00:00<00:00, 752.30it/s]
2025-05-16:03:25:29,490 INFO     [task.py:428] Building contexts for mmlu_clinical_knowledge on rank 0...
  0%|          | 0/265 [00:00<?, ?it/s] 29%|██▉       | 77/265 [00:00<00:00, 764.40it/s] 58%|█████▊    | 154/265 [00:00<00:00, 763.95it/s] 87%|████████▋ | 231/265 [00:00<00:00, 759.92it/s]100%|██████████| 265/265 [00:00<00:00, 760.54it/s]
2025-05-16:03:25:29,849 INFO     [task.py:428] Building contexts for mmlu_business_ethics on rank 0...
  0%|          | 0/100 [00:00<?, ?it/s] 77%|███████▋  | 77/100 [00:00<00:00, 763.25it/s]100%|██████████| 100/100 [00:00<00:00, 762.38it/s]
2025-05-16:03:25:29,985 INFO     [task.py:428] Building contexts for mmlu_management on rank 0...
  0%|          | 0/103 [00:00<?, ?it/s] 75%|███████▍  | 77/103 [00:00<00:00, 768.61it/s]100%|██████████| 103/103 [00:00<00:00, 766.56it/s]
2025-05-16:03:25:30,124 INFO     [task.py:428] Building contexts for mmlu_nutrition on rank 0...
  0%|          | 0/306 [00:00<?, ?it/s] 25%|██▌       | 78/306 [00:00<00:00, 772.23it/s] 51%|█████     | 156/306 [00:00<00:00, 755.48it/s] 76%|███████▌  | 232/306 [00:00<00:00, 756.78it/s]100%|██████████| 306/306 [00:00<00:00, 757.96it/s]
2025-05-16:03:25:30,539 INFO     [task.py:428] Building contexts for mmlu_college_medicine on rank 0...
  0%|          | 0/173 [00:00<?, ?it/s] 46%|████▌     | 79/173 [00:00<00:00, 782.74it/s] 97%|█████████▋| 168/173 [00:00<00:00, 844.95it/s]100%|██████████| 173/173 [00:00<00:00, 835.46it/s]
2025-05-16:03:25:30,754 INFO     [task.py:428] Building contexts for mmlu_virology on rank 0...
  0%|          | 0/166 [00:00<?, ?it/s] 51%|█████     | 85/166 [00:00<00:00, 839.55it/s]100%|██████████| 166/166 [00:00<00:00, 804.87it/s]
2025-05-16:03:25:30,966 INFO     [task.py:428] Building contexts for mmlu_professional_medicine on rank 0...
  0%|          | 0/272 [00:00<?, ?it/s] 28%|██▊       | 77/272 [00:00<00:00, 762.48it/s] 57%|█████▋    | 154/272 [00:00<00:00, 761.77it/s] 85%|████████▍ | 231/272 [00:00<00:00, 754.34it/s]100%|██████████| 272/272 [00:00<00:00, 757.52it/s]
2025-05-16:03:25:31,336 INFO     [task.py:428] Building contexts for mmlu_miscellaneous on rank 0...
  0%|          | 0/783 [00:00<?, ?it/s] 10%|▉         | 78/783 [00:00<00:00, 777.62it/s] 20%|█▉        | 156/783 [00:00<00:00, 777.32it/s] 30%|███       | 235/783 [00:00<00:00, 780.27it/s] 40%|████      | 314/783 [00:00<00:00, 779.27it/s] 50%|█████     | 392/783 [00:00<00:00, 778.71it/s] 60%|██████    | 470/783 [00:00<00:00, 778.96it/s] 70%|███████   | 549/783 [00:00<00:00, 779.51it/s] 80%|████████  | 629/783 [00:00<00:00, 784.24it/s] 91%|█████████ | 709/783 [00:00<00:00, 787.15it/s]100%|██████████| 783/783 [00:00<00:00, 784.51it/s]
2025-05-16:03:25:32,362 INFO     [task.py:428] Building contexts for mmlu_medical_genetics on rank 0...
  0%|          | 0/100 [00:00<?, ?it/s] 81%|████████  | 81/100 [00:00<00:00, 791.26it/s]100%|██████████| 100/100 [00:00<00:00, 788.07it/s]
2025-05-16:03:25:32,493 INFO     [task.py:428] Building contexts for mmlu_global_facts on rank 0...
  0%|          | 0/100 [00:00<?, ?it/s] 81%|████████  | 81/100 [00:00<00:00, 801.98it/s]100%|██████████| 100/100 [00:00<00:00, 800.79it/s]
2025-05-16:03:25:32,622 INFO     [task.py:428] Building contexts for mmlu_professional_accounting on rank 0...
  0%|          | 0/282 [00:00<?, ?it/s] 29%|██▊       | 81/282 [00:00<00:00, 800.34it/s] 57%|█████▋    | 162/282 [00:00<00:00, 803.64it/s] 87%|████████▋ | 244/282 [00:00<00:00, 806.82it/s]100%|██████████| 282/282 [00:00<00:00, 807.19it/s]
2025-05-16:03:25:32,982 INFO     [task.py:428] Building contexts for mmlu_marketing on rank 0...
  0%|          | 0/234 [00:00<?, ?it/s]  8%|▊         | 19/234 [00:00<00:02, 80.13it/s] 42%|████▏     | 99/234 [00:00<00:00, 350.67it/s] 77%|███████▋  | 180/234 [00:00<00:00, 510.32it/s]100%|██████████| 234/234 [00:00<00:00, 465.57it/s]
2025-05-16:03:25:33,493 INFO     [task.py:428] Building contexts for mmlu_human_aging on rank 0...
  0%|          | 0/223 [00:00<?, ?it/s] 38%|███▊      | 84/223 [00:00<00:00, 835.36it/s] 75%|███████▌  | 168/223 [00:00<00:00, 819.48it/s]100%|██████████| 223/223 [00:00<00:00, 827.55it/s]
2025-05-16:03:25:33,770 INFO     [task.py:428] Building contexts for mmlu_public_relations on rank 0...
  0%|          | 0/110 [00:00<?, ?it/s] 77%|███████▋  | 85/110 [00:00<00:00, 845.65it/s]100%|██████████| 110/110 [00:00<00:00, 836.87it/s]
2025-05-16:03:25:33,906 INFO     [task.py:428] Building contexts for mmlu_sociology on rank 0...
  0%|          | 0/201 [00:00<?, ?it/s] 43%|████▎     | 86/201 [00:00<00:00, 853.77it/s] 86%|████████▌ | 172/201 [00:00<00:00, 854.34it/s]100%|██████████| 201/201 [00:00<00:00, 854.98it/s]
2025-05-16:03:25:34,148 INFO     [task.py:428] Building contexts for mmlu_high_school_geography on rank 0...
  0%|          | 0/198 [00:00<?, ?it/s] 44%|████▍     | 87/198 [00:00<00:00, 860.36it/s] 88%|████████▊ | 174/198 [00:00<00:00, 861.17it/s]100%|██████████| 198/198 [00:00<00:00, 859.41it/s]
2025-05-16:03:25:34,385 INFO     [task.py:428] Building contexts for mmlu_security_studies on rank 0...
  0%|          | 0/245 [00:00<?, ?it/s] 36%|███▌      | 87/245 [00:00<00:00, 860.25it/s] 71%|███████   | 174/245 [00:00<00:00, 865.16it/s]100%|██████████| 245/245 [00:00<00:00, 863.93it/s]
2025-05-16:03:25:34,677 INFO     [task.py:428] Building contexts for mmlu_high_school_psychology on rank 0...
  0%|          | 0/545 [00:00<?, ?it/s] 16%|█▌        | 87/545 [00:00<00:00, 867.60it/s] 32%|███▏      | 174/545 [00:00<00:00, 865.10it/s] 48%|████▊     | 261/545 [00:00<00:00, 864.84it/s] 64%|██████▍   | 348/545 [00:00<00:00, 862.38it/s] 80%|███████▉  | 435/545 [00:00<00:00, 844.97it/s] 95%|█████████▌| 520/545 [00:00<00:00, 834.67it/s]100%|██████████| 545/545 [00:00<00:00, 847.95it/s]
2025-05-16:03:25:35,338 INFO     [task.py:428] Building contexts for mmlu_us_foreign_policy on rank 0...
  0%|          | 0/100 [00:00<?, ?it/s] 87%|████████▋ | 87/100 [00:00<00:00, 864.61it/s]100%|██████████| 100/100 [00:00<00:00, 860.68it/s]
2025-05-16:03:25:35,458 INFO     [task.py:428] Building contexts for mmlu_high_school_macroeconomics on rank 0...
  0%|          | 0/390 [00:00<?, ?it/s] 22%|██▏       | 86/390 [00:00<00:00, 858.23it/s] 44%|████▍     | 172/390 [00:00<00:00, 851.19it/s] 66%|██████▌   | 258/390 [00:00<00:00, 822.25it/s] 87%|████████▋ | 341/390 [00:00<00:00, 813.65it/s]100%|██████████| 390/390 [00:00<00:00, 815.63it/s]
2025-05-16:03:25:35,949 INFO     [task.py:428] Building contexts for mmlu_high_school_microeconomics on rank 0...
  0%|          | 0/238 [00:00<?, ?it/s] 32%|███▏      | 77/238 [00:00<00:00, 769.93it/s] 65%|██████▌   | 155/238 [00:00<00:00, 774.79it/s] 98%|█████████▊| 233/238 [00:00<00:00, 775.58it/s]100%|██████████| 238/238 [00:00<00:00, 773.62it/s]
2025-05-16:03:25:36,266 INFO     [task.py:428] Building contexts for mmlu_econometrics on rank 0...
  0%|          | 0/114 [00:00<?, ?it/s] 67%|██████▋   | 76/114 [00:00<00:00, 752.34it/s]100%|██████████| 114/114 [00:00<00:00, 748.06it/s]
2025-05-16:03:25:36,424 INFO     [task.py:428] Building contexts for mmlu_professional_psychology on rank 0...
  0%|          | 0/612 [00:00<?, ?it/s] 13%|█▎        | 77/612 [00:00<00:00, 768.50it/s] 25%|██▌       | 154/612 [00:00<00:00, 767.65it/s] 38%|███▊      | 232/612 [00:00<00:00, 770.17it/s] 51%|█████     | 310/612 [00:00<00:00, 768.49it/s] 63%|██████▎   | 387/612 [00:00<00:00, 760.28it/s] 76%|███████▌  | 464/612 [00:00<00:00, 761.35it/s] 88%|████████▊ | 541/612 [00:00<00:00, 761.33it/s]100%|██████████| 612/612 [00:00<00:00, 763.24it/s]
2025-05-16:03:25:37,248 INFO     [task.py:428] Building contexts for mmlu_human_sexuality on rank 0...
  0%|          | 0/131 [00:00<?, ?it/s] 53%|█████▎    | 70/131 [00:00<00:00, 693.57it/s]100%|██████████| 131/131 [00:00<00:00, 724.28it/s]
2025-05-16:03:25:37,435 INFO     [task.py:428] Building contexts for mmlu_high_school_government_and_politics on rank 0...
  0%|          | 0/193 [00:00<?, ?it/s] 39%|███▉      | 76/193 [00:00<00:00, 757.95it/s] 79%|███████▉  | 152/193 [00:00<00:00, 752.98it/s]100%|██████████| 193/193 [00:00<00:00, 753.44it/s]
2025-05-16:03:25:37,699 INFO     [task.py:428] Building contexts for mmlu_moral_scenarios on rank 0...
  0%|          | 0/895 [00:00<?, ?it/s] 10%|▉         | 88/895 [00:00<00:00, 876.33it/s] 20%|█▉        | 176/895 [00:00<00:00, 837.26it/s] 29%|██▉       | 260/895 [00:00<00:00, 803.41it/s] 38%|███▊      | 341/895 [00:00<00:00, 789.34it/s] 47%|████▋     | 421/895 [00:00<00:00, 780.17it/s] 56%|█████▌    | 500/895 [00:00<00:00, 772.95it/s] 65%|██████▍   | 578/895 [00:00<00:00, 766.94it/s] 73%|███████▎  | 655/895 [00:00<00:00, 764.57it/s] 82%|████████▏ | 732/895 [00:00<00:00, 763.46it/s] 90%|█████████ | 809/895 [00:01<00:00, 762.28it/s] 99%|█████████▉| 886/895 [00:01<00:00, 762.46it/s]100%|██████████| 895/895 [00:01<00:00, 775.75it/s]
2025-05-16:03:25:38,884 INFO     [task.py:428] Building contexts for mmlu_high_school_world_history on rank 0...
  0%|          | 0/237 [00:00<?, ?it/s] 32%|███▏      | 75/237 [00:00<00:00, 740.63it/s] 64%|██████▎   | 151/237 [00:00<00:00, 748.14it/s] 96%|█████████▌| 227/237 [00:00<00:00, 749.51it/s]100%|██████████| 237/237 [00:00<00:00, 746.88it/s]
2025-05-16:03:25:39,212 INFO     [task.py:428] Building contexts for mmlu_high_school_european_history on rank 0...
  0%|          | 0/165 [00:00<?, ?it/s] 46%|████▌     | 76/165 [00:00<00:00, 759.44it/s] 92%|█████████▏| 152/165 [00:00<00:00, 756.50it/s]100%|██████████| 165/165 [00:00<00:00, 754.68it/s]
2025-05-16:03:25:39,439 INFO     [task.py:428] Building contexts for mmlu_philosophy on rank 0...
  0%|          | 0/311 [00:00<?, ?it/s] 24%|██▍       | 76/311 [00:00<00:00, 759.62it/s] 49%|████▉     | 152/311 [00:00<00:00, 759.39it/s] 73%|███████▎  | 228/311 [00:00<00:00, 755.98it/s] 98%|█████████▊| 304/311 [00:00<00:00, 753.88it/s]100%|██████████| 311/311 [00:00<00:00, 754.41it/s]
2025-05-16:03:25:39,864 INFO     [task.py:428] Building contexts for mmlu_moral_disputes on rank 0...
  0%|          | 0/346 [00:00<?, ?it/s] 22%|██▏       | 76/346 [00:00<00:00, 757.38it/s] 44%|████▍     | 152/346 [00:00<00:00, 758.52it/s] 66%|██████▌   | 229/346 [00:00<00:00, 761.36it/s] 89%|████████▉ | 308/346 [00:00<00:00, 771.64it/s]100%|██████████| 346/346 [00:00<00:00, 778.19it/s]
2025-05-16:03:25:40,322 INFO     [task.py:428] Building contexts for mmlu_high_school_us_history on rank 0...
  0%|          | 0/204 [00:00<?, ?it/s] 41%|████      | 83/204 [00:00<00:00, 825.06it/s] 81%|████████▏ | 166/204 [00:00<00:00, 782.94it/s]100%|██████████| 204/204 [00:00<00:00, 780.60it/s]
2025-05-16:03:25:40,591 INFO     [task.py:428] Building contexts for mmlu_international_law on rank 0...
  0%|          | 0/121 [00:00<?, ?it/s] 63%|██████▎   | 76/121 [00:00<00:00, 753.08it/s]100%|██████████| 121/121 [00:00<00:00, 749.98it/s]
2025-05-16:03:25:40,758 INFO     [task.py:428] Building contexts for mmlu_professional_law on rank 0...
  0%|          | 0/1534 [00:00<?, ?it/s]  5%|▍         | 75/1534 [00:00<00:01, 748.47it/s] 10%|▉         | 151/1534 [00:00<00:01, 753.52it/s] 15%|█▍        | 227/1534 [00:00<00:01, 745.96it/s] 20%|█▉        | 302/1534 [00:00<00:01, 746.76it/s] 25%|██▍       | 378/1534 [00:00<00:01, 749.01it/s] 30%|██▉       | 454/1534 [00:00<00:01, 750.69it/s] 35%|███▍      | 530/1534 [00:00<00:01, 749.88it/s] 39%|███▉      | 605/1534 [00:00<00:01, 749.64it/s] 44%|████▍     | 681/1534 [00:00<00:01, 750.89it/s] 49%|████▉     | 757/1534 [00:01<00:01, 751.27it/s] 54%|█████▍    | 833/1534 [00:01<00:00, 751.21it/s] 59%|█████▉    | 909/1534 [00:01<00:00, 751.73it/s] 64%|██████▍   | 985/1534 [00:01<00:00, 750.88it/s] 69%|██████▉   | 1061/1534 [00:01<00:00, 748.79it/s] 74%|███████▍  | 1136/1534 [00:01<00:00, 748.70it/s] 79%|███████▉  | 1212/1534 [00:01<00:00, 751.49it/s] 84%|████████▍ | 1288/1534 [00:01<00:00, 751.57it/s] 89%|████████▉ | 1365/1534 [00:01<00:00, 756.28it/s] 94%|█████████▍| 1442/1534 [00:01<00:00, 759.24it/s] 99%|█████████▉| 1522/1534 [00:02<00:00, 769.47it/s]100%|██████████| 1534/1534 [00:02<00:00, 754.92it/s]
2025-05-16:03:25:42,847 INFO     [task.py:428] Building contexts for mmlu_world_religions on rank 0...
  0%|          | 0/171 [00:00<?, ?it/s] 53%|█████▎    | 90/171 [00:00<00:00, 897.61it/s]100%|██████████| 171/171 [00:00<00:00, 891.41it/s]
2025-05-16:03:25:43,045 INFO     [task.py:428] Building contexts for mmlu_jurisprudence on rank 0...
  0%|          | 0/108 [00:00<?, ?it/s] 82%|████████▏ | 89/108 [00:00<00:00, 884.83it/s]100%|██████████| 108/108 [00:00<00:00, 884.12it/s]
2025-05-16:03:25:43,171 INFO     [task.py:428] Building contexts for mmlu_formal_logic on rank 0...
  0%|          | 0/126 [00:00<?, ?it/s] 70%|██████▉   | 88/126 [00:00<00:00, 879.92it/s]100%|██████████| 126/126 [00:00<00:00, 881.08it/s]
2025-05-16:03:25:43,318 INFO     [task.py:428] Building contexts for mmlu_prehistory on rank 0...
  0%|          | 0/324 [00:00<?, ?it/s] 24%|██▍       | 79/324 [00:00<00:00, 786.70it/s] 49%|████▉     | 158/324 [00:00<00:00, 296.66it/s] 72%|███████▏  | 234/324 [00:00<00:00, 407.45it/s] 96%|█████████▌| 310/324 [00:00<00:00, 496.97it/s]100%|██████████| 324/324 [00:00<00:00, 461.54it/s]
2025-05-16:03:25:44,031 INFO     [task.py:428] Building contexts for mmlu_logical_fallacies on rank 0...
  0%|          | 0/163 [00:00<?, ?it/s] 47%|████▋     | 77/163 [00:00<00:00, 768.21it/s] 94%|█████████▍| 154/163 [00:00<00:00, 768.93it/s]100%|██████████| 163/163 [00:00<00:00, 768.06it/s]
2025-05-16:03:25:44,250 INFO     [evaluator.py:485] Running loglikelihood requests
Running loglikelihood requests:   0%|          | 0/56168 [00:00<?, ?it/s]Starting from v4.46, the `logits` model output will have the same type as the model (except at train time, where it will always be FP32)
Running loglikelihood requests:   0%|          | 1/56168 [00:01<30:58:16,  1.99s/it]Running loglikelihood requests:   0%|          | 65/56168 [00:02<33:54, 27.57it/s]  Running loglikelihood requests:   0%|          | 129/56168 [00:03<21:37, 43.18it/s]Running loglikelihood requests:   0%|          | 193/56168 [00:04<17:15, 54.08it/s]Running loglikelihood requests:   0%|          | 257/56168 [00:05<15:04, 61.82it/s]Running loglikelihood requests:   1%|          | 321/56168 [00:06<13:43, 67.83it/s]Running loglikelihood requests:   1%|          | 385/56168 [00:07<12:49, 72.46it/s]Running loglikelihood requests:   1%|          | 449/56168 [00:07<12:11, 76.21it/s]Running loglikelihood requests:   1%|          | 513/56168 [00:08<11:41, 79.31it/s]Running loglikelihood requests:   1%|          | 577/56168 [00:09<11:13, 82.53it/s]Running loglikelihood requests:   1%|          | 641/56168 [00:09<10:52, 85.03it/s]Running loglikelihood requests:   1%|▏         | 705/56168 [00:10<10:34, 87.36it/s]Running loglikelihood requests:   1%|▏         | 769/56168 [00:11<10:21, 89.13it/s]Running loglikelihood requests:   1%|▏         | 833/56168 [00:11<10:06, 91.18it/s]Running loglikelihood requests:   2%|▏         | 897/56168 [00:12<09:56, 92.63it/s]Running loglikelihood requests:   2%|▏         | 961/56168 [00:13<09:43, 94.59it/s]Running loglikelihood requests:   2%|▏         | 1025/56168 [00:13<09:33, 96.09it/s]Running loglikelihood requests:   2%|▏         | 1089/56168 [00:14<09:24, 97.60it/s]Running loglikelihood requests:   2%|▏         | 1153/56168 [00:15<09:16, 98.93it/s]Running loglikelihood requests:   2%|▏         | 1217/56168 [00:15<09:07, 100.33it/s]Running loglikelihood requests:   2%|▏         | 1281/56168 [00:16<09:00, 101.64it/s]Running loglikelihood requests:   2%|▏         | 1345/56168 [00:16<08:56, 102.19it/s]Running loglikelihood requests:   3%|▎         | 1409/56168 [00:17<08:43, 104.65it/s]Running loglikelihood requests:   3%|▎         | 1473/56168 [00:18<08:33, 106.61it/s]Running loglikelihood requests:   3%|▎         | 1537/56168 [00:18<08:25, 108.15it/s]Running loglikelihood requests:   3%|▎         | 1601/56168 [00:19<08:18, 109.40it/s]Running loglikelihood requests:   3%|▎         | 1665/56168 [00:19<08:11, 110.91it/s]Running loglikelihood requests:   3%|▎         | 1729/56168 [00:20<08:05, 112.06it/s]Running loglikelihood requests:   3%|▎         | 1793/56168 [00:20<08:01, 112.91it/s]Running loglikelihood requests:   3%|▎         | 1857/56168 [00:21<07:57, 113.67it/s]Running loglikelihood requests:   3%|▎         | 1921/56168 [00:22<07:52, 114.74it/s]Running loglikelihood requests:   4%|▎         | 1985/56168 [00:22<07:48, 115.56it/s]Running loglikelihood requests:   4%|▎         | 2049/56168 [00:23<07:44, 116.40it/s]Running loglikelihood requests:   4%|▍         | 2113/56168 [00:23<07:41, 117.13it/s]Running loglikelihood requests:   4%|▍         | 2177/56168 [00:24<07:35, 118.48it/s]Running loglikelihood requests:   4%|▍         | 2241/56168 [00:24<07:30, 119.74it/s]Running loglikelihood requests:   4%|▍         | 2305/56168 [00:25<07:26, 120.59it/s]Running loglikelihood requests:   4%|▍         | 2369/56168 [00:25<07:21, 121.90it/s]Running loglikelihood requests:   4%|▍         | 2433/56168 [00:26<07:17, 122.78it/s]Running loglikelihood requests:   4%|▍         | 2497/56168 [00:26<07:14, 123.59it/s]Running loglikelihood requests:   5%|▍         | 2561/56168 [00:27<07:11, 124.24it/s]Running loglikelihood requests:   5%|▍         | 2625/56168 [00:27<07:06, 125.58it/s]Running loglikelihood requests:   5%|▍         | 2689/56168 [00:28<07:02, 126.68it/s]Running loglikelihood requests:   5%|▍         | 2753/56168 [00:28<06:59, 127.40it/s]Running loglikelihood requests:   5%|▌         | 2817/56168 [00:29<06:56, 128.13it/s]Running loglikelihood requests:   5%|▌         | 2881/56168 [00:29<06:53, 128.71it/s]Running loglikelihood requests:   5%|▌         | 2945/56168 [00:30<06:51, 129.28it/s]Running loglikelihood requests:   5%|▌         | 3009/56168 [00:30<06:49, 129.78it/s]Running loglikelihood requests:   5%|▌         | 3073/56168 [00:31<06:45, 130.78it/s]Running loglikelihood requests:   6%|▌         | 3137/56168 [00:31<06:42, 131.69it/s]Running loglikelihood requests:   6%|▌         | 3201/56168 [00:32<06:40, 132.33it/s]Running loglikelihood requests:   6%|▌         | 3265/56168 [00:32<06:38, 132.63it/s]Running loglikelihood requests:   6%|▌         | 3329/56168 [00:33<06:36, 133.12it/s]Running loglikelihood requests:   6%|▌         | 3393/56168 [00:33<06:35, 133.51it/s]Running loglikelihood requests:   6%|▌         | 3457/56168 [00:34<06:34, 133.68it/s]Running loglikelihood requests:   6%|▋         | 3521/56168 [00:34<06:32, 134.26it/s]Running loglikelihood requests:   6%|▋         | 3585/56168 [00:35<06:31, 134.38it/s]Running loglikelihood requests:   6%|▋         | 3649/56168 [00:35<06:27, 135.41it/s]Running loglikelihood requests:   7%|▋         | 3713/56168 [00:35<06:25, 136.18it/s]Running loglikelihood requests:   7%|▋         | 3777/56168 [00:36<06:22, 136.88it/s]Running loglikelihood requests:   7%|▋         | 3841/56168 [00:36<06:20, 137.37it/s]Running loglikelihood requests:   7%|▋         | 3905/56168 [00:37<06:18, 137.93it/s]Running loglikelihood requests:   7%|▋         | 3969/56168 [00:37<06:17, 138.33it/s]Running loglikelihood requests:   7%|▋         | 4033/56168 [00:38<06:16, 138.65it/s]Running loglikelihood requests:   7%|▋         | 4097/56168 [00:38<06:08, 141.13it/s]Running loglikelihood requests:   7%|▋         | 4161/56168 [00:39<06:03, 142.98it/s]Running loglikelihood requests:   8%|▊         | 4225/56168 [00:39<05:59, 144.40it/s]Running loglikelihood requests:   8%|▊         | 4289/56168 [00:40<05:56, 145.45it/s]Running loglikelihood requests:   8%|▊         | 4353/56168 [00:40<05:54, 146.24it/s]Running loglikelihood requests:   8%|▊         | 4417/56168 [00:40<05:51, 147.27it/s]Running loglikelihood requests:   8%|▊         | 4481/56168 [00:41<05:49, 147.85it/s]Running loglikelihood requests:   8%|▊         | 4545/56168 [00:41<05:47, 148.38it/s]Running loglikelihood requests:   8%|▊         | 4609/56168 [00:42<05:46, 148.89it/s]Running loglikelihood requests:   8%|▊         | 4673/56168 [00:42<05:43, 149.99it/s]Running loglikelihood requests:   8%|▊         | 4737/56168 [00:42<05:40, 150.97it/s]Running loglikelihood requests:   9%|▊         | 4801/56168 [00:43<05:38, 151.77it/s]Running loglikelihood requests:   9%|▊         | 4865/56168 [00:43<05:36, 152.37it/s]Running loglikelihood requests:   9%|▉         | 4929/56168 [00:44<05:35, 152.88it/s]Running loglikelihood requests:   9%|▉         | 4993/56168 [00:44<05:33, 153.45it/s]Running loglikelihood requests:   9%|▉         | 5057/56168 [00:45<05:31, 154.05it/s]Running loglikelihood requests:   9%|▉         | 5121/56168 [00:45<05:30, 154.28it/s]Running loglikelihood requests:   9%|▉         | 5185/56168 [00:45<05:29, 154.64it/s]Running loglikelihood requests:   9%|▉         | 5249/56168 [00:46<05:26, 155.96it/s]Running loglikelihood requests:   9%|▉         | 5313/56168 [00:46<05:23, 156.98it/s]Running loglikelihood requests:  10%|▉         | 5377/56168 [00:47<05:21, 157.77it/s]Running loglikelihood requests:  10%|▉         | 5441/56168 [00:47<05:20, 158.20it/s]Running loglikelihood requests:  10%|▉         | 5505/56168 [00:47<05:19, 158.76it/s]Running loglikelihood requests:  10%|▉         | 5569/56168 [00:48<05:17, 159.25it/s]Running loglikelihood requests:  10%|█         | 5633/56168 [00:48<05:16, 159.85it/s]Running loglikelihood requests:  10%|█         | 5697/56168 [00:49<05:15, 160.05it/s]Running loglikelihood requests:  10%|█         | 5761/56168 [00:49<05:14, 160.45it/s]Running loglikelihood requests:  10%|█         | 5825/56168 [00:49<05:12, 160.88it/s]Running loglikelihood requests:  10%|█         | 5889/56168 [00:50<05:10, 162.03it/s]Running loglikelihood requests:  11%|█         | 5953/56168 [00:50<05:08, 163.03it/s]Running loglikelihood requests:  11%|█         | 6017/56168 [00:51<05:06, 163.67it/s]Running loglikelihood requests:  11%|█         | 6081/56168 [00:51<05:05, 164.07it/s]Running loglikelihood requests:  11%|█         | 6145/56168 [00:51<05:04, 164.55it/s]Running loglikelihood requests:  11%|█         | 6209/56168 [00:52<05:02, 165.30it/s]Running loglikelihood requests:  11%|█         | 6273/56168 [00:52<04:59, 166.85it/s]Running loglikelihood requests:  11%|█▏        | 6337/56168 [00:52<04:56, 167.90it/s]Running loglikelihood requests:  11%|█▏        | 6401/56168 [00:53<04:54, 169.02it/s]Running loglikelihood requests:  12%|█▏        | 6465/56168 [00:53<04:53, 169.59it/s]Running loglikelihood requests:  12%|█▏        | 6529/56168 [00:54<04:51, 170.29it/s]Running loglikelihood requests:  12%|█▏        | 6593/56168 [00:54<04:50, 170.82it/s]Running loglikelihood requests:  12%|█▏        | 6657/56168 [00:54<04:49, 171.11it/s]Running loglikelihood requests:  12%|█▏        | 6721/56168 [00:55<04:43, 174.14it/s]Running loglikelihood requests:  12%|█▏        | 6785/56168 [00:55<04:40, 175.91it/s]Running loglikelihood requests:  12%|█▏        | 6849/56168 [00:55<04:37, 177.43it/s]Running loglikelihood requests:  12%|█▏        | 6913/56168 [00:56<04:36, 178.44it/s]Running loglikelihood requests:  12%|█▏        | 6977/56168 [00:56<04:33, 179.60it/s]Running loglikelihood requests:  13%|█▎        | 7041/56168 [00:56<04:32, 180.12it/s]Running loglikelihood requests:  13%|█▎        | 7105/56168 [00:57<04:31, 180.72it/s]Running loglikelihood requests:  13%|█▎        | 7169/56168 [00:57<04:30, 181.14it/s]Running loglikelihood requests:  13%|█▎        | 7233/56168 [00:57<04:29, 181.50it/s]Running loglikelihood requests:  13%|█▎        | 7297/56168 [00:58<04:28, 182.06it/s]Running loglikelihood requests:  13%|█▎        | 7361/56168 [00:58<04:27, 182.57it/s]Running loglikelihood requests:  13%|█▎        | 7425/56168 [00:59<04:26, 182.66it/s]Running loglikelihood requests:  13%|█▎        | 7489/56168 [00:59<04:25, 183.44it/s]Running loglikelihood requests:  13%|█▎        | 7553/56168 [00:59<04:22, 184.96it/s]Running loglikelihood requests:  14%|█▎        | 7617/56168 [01:00<04:21, 185.51it/s]Running loglikelihood requests:  14%|█▎        | 7681/56168 [01:00<04:20, 186.26it/s]Running loglikelihood requests:  14%|█▍        | 7745/56168 [01:00<04:19, 186.79it/s]Running loglikelihood requests:  14%|█▍        | 7809/56168 [01:01<04:17, 187.72it/s]Running loglikelihood requests:  14%|█▍        | 7873/56168 [01:01<04:16, 188.15it/s]Running loglikelihood requests:  14%|█▍        | 7937/56168 [01:01<04:15, 188.68it/s]Running loglikelihood requests:  14%|█▍        | 8001/56168 [01:02<04:13, 189.87it/s]Running loglikelihood requests:  14%|█▍        | 8065/56168 [01:02<04:12, 190.27it/s]Running loglikelihood requests:  14%|█▍        | 8129/56168 [01:02<04:11, 190.98it/s]Running loglikelihood requests:  15%|█▍        | 8193/56168 [01:03<04:08, 192.78it/s]Running loglikelihood requests:  15%|█▍        | 8257/56168 [01:03<04:07, 193.79it/s]Running loglikelihood requests:  15%|█▍        | 8321/56168 [01:03<04:05, 194.60it/s]Running loglikelihood requests:  15%|█▍        | 8385/56168 [01:04<04:04, 195.43it/s]Running loglikelihood requests:  15%|█▌        | 8449/56168 [01:04<04:02, 196.39it/s]Running loglikelihood requests:  15%|█▌        | 8513/56168 [01:04<04:01, 197.08it/s]Running loglikelihood requests:  15%|█▌        | 8577/56168 [01:05<04:01, 197.39it/s]Running loglikelihood requests:  15%|█▌        | 8641/56168 [01:05<03:54, 202.71it/s]Running loglikelihood requests:  15%|█▌        | 8705/56168 [01:05<03:49, 206.42it/s]Running loglikelihood requests:  16%|█▌        | 8769/56168 [01:05<03:46, 209.64it/s]Running loglikelihood requests:  16%|█▌        | 8833/56168 [01:06<03:43, 211.82it/s]Running loglikelihood requests:  16%|█▌        | 8897/56168 [01:06<03:41, 213.72it/s]Running loglikelihood requests:  16%|█▌        | 8961/56168 [01:06<03:39, 215.09it/s]Running loglikelihood requests:  16%|█▌        | 9025/56168 [01:07<03:37, 216.94it/s]Running loglikelihood requests:  16%|█▌        | 9089/56168 [01:07<03:35, 218.28it/s]Running loglikelihood requests:  16%|█▋        | 9153/56168 [01:07<03:34, 219.47it/s]Running loglikelihood requests:  16%|█▋        | 9217/56168 [01:07<03:33, 220.36it/s]Running loglikelihood requests:  17%|█▋        | 9281/56168 [01:08<03:32, 220.95it/s]Running loglikelihood requests:  17%|█▋        | 9345/56168 [01:08<03:31, 221.56it/s]Running loglikelihood requests:  17%|█▋        | 9409/56168 [01:08<03:29, 223.72it/s]Running loglikelihood requests:  17%|█▋        | 9473/56168 [01:09<03:27, 225.07it/s]Running loglikelihood requests:  17%|█▋        | 9537/56168 [01:09<03:25, 226.58it/s]Running loglikelihood requests:  17%|█▋        | 9601/56168 [01:09<03:25, 226.91it/s]Running loglikelihood requests:  17%|█▋        | 9665/56168 [01:09<03:24, 227.72it/s]Running loglikelihood requests:  17%|█▋        | 9729/56168 [01:10<03:23, 228.31it/s]Running loglikelihood requests:  17%|█▋        | 9793/56168 [01:10<03:22, 229.35it/s]Running loglikelihood requests:  18%|█▊        | 9857/56168 [01:10<03:20, 231.15it/s]Running loglikelihood requests:  18%|█▊        | 9921/56168 [01:11<03:19, 232.25it/s]Running loglikelihood requests:  18%|█▊        | 9985/56168 [01:11<03:18, 232.72it/s]Running loglikelihood requests:  18%|█▊        | 10049/56168 [01:11<03:17, 233.74it/s]Running loglikelihood requests:  18%|█▊        | 10113/56168 [01:11<03:16, 234.14it/s]Running loglikelihood requests:  18%|█▊        | 10177/56168 [01:12<03:15, 235.33it/s]Running loglikelihood requests:  18%|█▊        | 10241/56168 [01:12<03:14, 235.87it/s]Running loglikelihood requests:  18%|█▊        | 10305/56168 [01:12<03:12, 237.96it/s]Running loglikelihood requests:  18%|█▊        | 10369/56168 [01:12<03:11, 238.70it/s]Running loglikelihood requests:  19%|█▊        | 10433/56168 [01:13<03:10, 240.38it/s]Running loglikelihood requests:  19%|█▊        | 10497/56168 [01:13<03:09, 241.29it/s]Running loglikelihood requests:  19%|█▉        | 10561/56168 [01:13<03:08, 241.85it/s]Running loglikelihood requests:  19%|█▉        | 10625/56168 [01:13<03:07, 242.75it/s]Running loglikelihood requests:  19%|█▉        | 10689/56168 [01:14<03:06, 243.37it/s]Running loglikelihood requests:  19%|█▉        | 10753/56168 [01:14<03:06, 243.72it/s]Running loglikelihood requests:  19%|█▉        | 10817/56168 [01:14<03:05, 245.05it/s]Running loglikelihood requests:  19%|█▉        | 10881/56168 [01:14<03:04, 245.50it/s]Running loglikelihood requests:  19%|█▉        | 10945/56168 [01:15<03:03, 246.02it/s]Running loglikelihood requests:  20%|█▉        | 11009/56168 [01:15<03:02, 247.31it/s]Running loglikelihood requests:  20%|█▉        | 11073/56168 [01:15<03:01, 248.80it/s]Running loglikelihood requests:  20%|█▉        | 11137/56168 [01:16<03:00, 250.08it/s]Running loglikelihood requests:  20%|█▉        | 11201/56168 [01:16<02:59, 250.97it/s]Running loglikelihood requests:  20%|██        | 11265/56168 [01:16<02:58, 250.93it/s]Running loglikelihood requests:  20%|██        | 11329/56168 [01:16<02:57, 251.95it/s]Running loglikelihood requests:  20%|██        | 11393/56168 [01:17<02:56, 254.14it/s]Running loglikelihood requests:  20%|██        | 11457/56168 [01:17<02:54, 256.32it/s]Running loglikelihood requests:  21%|██        | 11521/56168 [01:17<02:52, 258.10it/s]Running loglikelihood requests:  21%|██        | 11585/56168 [01:17<02:51, 259.32it/s]Running loglikelihood requests:  21%|██        | 11649/56168 [01:17<02:51, 260.33it/s]Running loglikelihood requests:  21%|██        | 11713/56168 [01:18<02:50, 260.95it/s]Running loglikelihood requests:  21%|██        | 11777/56168 [01:18<02:49, 261.64it/s]Running loglikelihood requests:  21%|██        | 11841/56168 [01:18<02:48, 262.45it/s]Running loglikelihood requests:  21%|██        | 11909/56168 [01:18<02:45, 267.95it/s]Running loglikelihood requests:  21%|██▏       | 11973/56168 [01:19<02:45, 266.92it/s]Running loglikelihood requests:  21%|██▏       | 12037/56168 [01:19<02:42, 271.23it/s]Running loglikelihood requests:  22%|██▏       | 12101/56168 [01:19<02:40, 274.38it/s]Running loglikelihood requests:  22%|██▏       | 12165/56168 [01:19<02:39, 275.90it/s]Running loglikelihood requests:  22%|██▏       | 12229/56168 [01:20<02:38, 277.43it/s]Running loglikelihood requests:  22%|██▏       | 12293/56168 [01:20<02:37, 279.07it/s]Running loglikelihood requests:  22%|██▏       | 12357/56168 [01:20<02:36, 279.96it/s]Running loglikelihood requests:  22%|██▏       | 12421/56168 [01:20<02:35, 280.43it/s]Running loglikelihood requests:  22%|██▏       | 12485/56168 [01:21<02:35, 280.15it/s]Running loglikelihood requests:  22%|██▏       | 12549/56168 [01:21<02:34, 281.62it/s]Running loglikelihood requests:  22%|██▏       | 12613/56168 [01:21<02:34, 282.80it/s]Running loglikelihood requests:  23%|██▎       | 12677/56168 [01:21<02:33, 283.42it/s]Running loglikelihood requests:  23%|██▎       | 12741/56168 [01:21<02:33, 282.88it/s]Running loglikelihood requests:  23%|██▎       | 12805/56168 [01:22<02:32, 283.78it/s]Running loglikelihood requests:  23%|██▎       | 12869/56168 [01:22<02:31, 286.66it/s]Running loglikelihood requests:  23%|██▎       | 12933/56168 [01:22<02:29, 288.58it/s]Running loglikelihood requests:  23%|██▎       | 12997/56168 [01:22<02:28, 290.08it/s]Running loglikelihood requests:  23%|██▎       | 13061/56168 [01:23<02:27, 291.63it/s]Running loglikelihood requests:  23%|██▎       | 13125/56168 [01:23<02:27, 292.55it/s]Running loglikelihood requests:  23%|██▎       | 13189/56168 [01:23<02:26, 293.74it/s]Running loglikelihood requests:  24%|██▎       | 13253/56168 [01:23<02:25, 294.42it/s]Running loglikelihood requests:  24%|██▎       | 13317/56168 [01:23<02:25, 295.36it/s]Running loglikelihood requests:  24%|██▍       | 13381/56168 [01:24<02:25, 294.79it/s]Running loglikelihood requests:  24%|██▍       | 13445/56168 [01:24<02:24, 295.17it/s]Running loglikelihood requests:  24%|██▍       | 13509/56168 [01:24<02:24, 296.07it/s]Running loglikelihood requests:  24%|██▍       | 13573/56168 [01:24<02:23, 296.61it/s]Running loglikelihood requests:  24%|██▍       | 13637/56168 [01:24<02:23, 296.17it/s]Running loglikelihood requests:  24%|██▍       | 13701/56168 [01:25<02:22, 297.41it/s]Running loglikelihood requests:  25%|██▍       | 13765/56168 [01:25<02:22, 297.21it/s]Running loglikelihood requests:  25%|██▍       | 13829/56168 [01:25<02:22, 297.12it/s]Running loglikelihood requests:  25%|██▍       | 13893/56168 [01:25<02:23, 295.44it/s]Running loglikelihood requests:  25%|██▍       | 13957/56168 [01:26<02:23, 294.19it/s]Running loglikelihood requests:  25%|██▍       | 14021/56168 [01:26<02:22, 295.96it/s]Running loglikelihood requests:  25%|██▌       | 14085/56168 [01:26<02:21, 297.50it/s]Running loglikelihood requests:  25%|██▌       | 14149/56168 [01:26<02:21, 297.25it/s]Running loglikelihood requests:  25%|██▌       | 14213/56168 [01:26<02:20, 297.69it/s]Running loglikelihood requests:  25%|██▌       | 14277/56168 [01:27<02:20, 298.71it/s]Running loglikelihood requests:  26%|██▌       | 14341/56168 [01:27<02:19, 300.07it/s]Running loglikelihood requests:  26%|██▌       | 14405/56168 [01:27<02:18, 301.04it/s]Running loglikelihood requests:  26%|██▌       | 14469/56168 [01:27<02:18, 301.43it/s]Running loglikelihood requests:  26%|██▌       | 14533/56168 [01:27<02:18, 301.61it/s]Running loglikelihood requests:  26%|██▌       | 14597/56168 [01:28<02:18, 301.20it/s]Running loglikelihood requests:  26%|██▌       | 14661/56168 [01:28<02:17, 301.92it/s]Running loglikelihood requests:  26%|██▌       | 14725/56168 [01:28<02:17, 302.18it/s]Running loglikelihood requests:  26%|██▋       | 14789/56168 [01:28<02:16, 302.80it/s]Running loglikelihood requests:  26%|██▋       | 14853/56168 [01:29<02:16, 303.21it/s]Running loglikelihood requests:  27%|██▋       | 14917/56168 [01:29<02:15, 304.18it/s]Running loglikelihood requests:  27%|██▋       | 14981/56168 [01:29<02:15, 303.61it/s]Running loglikelihood requests:  27%|██▋       | 15045/56168 [01:29<02:15, 303.76it/s]Running loglikelihood requests:  27%|██▋       | 15109/56168 [01:29<02:15, 304.11it/s]Running loglikelihood requests:  27%|██▋       | 15173/56168 [01:30<02:14, 304.04it/s]Running loglikelihood requests:  27%|██▋       | 15237/56168 [01:30<02:14, 304.27it/s]Running loglikelihood requests:  27%|██▋       | 15301/56168 [01:30<02:14, 304.55it/s]Running loglikelihood requests:  27%|██▋       | 15365/56168 [01:30<02:13, 304.57it/s]Running loglikelihood requests:  27%|██▋       | 15429/56168 [01:30<02:13, 304.63it/s]Running loglikelihood requests:  28%|██▊       | 15493/56168 [01:31<02:13, 303.85it/s]Running loglikelihood requests:  28%|██▊       | 15557/56168 [01:31<02:13, 304.10it/s]Running loglikelihood requests:  28%|██▊       | 15621/56168 [01:31<02:13, 304.07it/s]Running loglikelihood requests:  28%|██▊       | 15685/56168 [01:31<02:12, 304.58it/s]Running loglikelihood requests:  28%|██▊       | 15749/56168 [01:31<02:12, 304.39it/s]Running loglikelihood requests:  28%|██▊       | 15813/56168 [01:32<02:12, 304.51it/s]Running loglikelihood requests:  28%|██▊       | 15877/56168 [01:32<02:11, 305.68it/s]Running loglikelihood requests:  28%|██▊       | 15941/56168 [01:32<02:11, 305.51it/s]Running loglikelihood requests:  28%|██▊       | 16005/56168 [01:32<02:10, 308.83it/s]Running loglikelihood requests:  29%|██▊       | 16069/56168 [01:32<02:08, 312.04it/s]Running loglikelihood requests:  29%|██▊       | 16133/56168 [01:33<02:07, 312.79it/s]Running loglikelihood requests:  29%|██▉       | 16197/56168 [01:33<02:07, 313.70it/s]Running loglikelihood requests:  29%|██▉       | 16261/56168 [01:33<02:06, 315.03it/s]Running loglikelihood requests:  29%|██▉       | 16325/56168 [01:33<02:05, 316.83it/s]Running loglikelihood requests:  29%|██▉       | 16389/56168 [01:33<02:05, 317.06it/s]Running loglikelihood requests:  29%|██▉       | 16453/56168 [01:34<02:05, 316.81it/s]Running loglikelihood requests:  29%|██▉       | 16517/56168 [01:34<02:05, 316.86it/s]Running loglikelihood requests:  30%|██▉       | 16581/56168 [01:34<02:05, 316.45it/s]Running loglikelihood requests:  30%|██▉       | 16645/56168 [01:34<02:04, 316.61it/s]Running loglikelihood requests:  30%|██▉       | 16709/56168 [01:35<02:04, 318.10it/s]Running loglikelihood requests:  30%|██▉       | 16773/56168 [01:35<02:03, 318.07it/s]Running loglikelihood requests:  30%|██▉       | 16837/56168 [01:35<02:03, 317.86it/s]Running loglikelihood requests:  30%|███       | 16901/56168 [01:35<02:03, 317.30it/s]Running loglikelihood requests:  30%|███       | 16965/56168 [01:35<02:03, 317.34it/s]Running loglikelihood requests:  30%|███       | 17029/56168 [01:36<02:03, 317.64it/s]Running loglikelihood requests:  30%|███       | 17093/56168 [01:36<02:02, 317.74it/s]Running loglikelihood requests:  31%|███       | 17157/56168 [01:36<02:02, 318.65it/s]Running loglikelihood requests:  31%|███       | 17221/56168 [01:36<02:02, 317.95it/s]Running loglikelihood requests:  31%|███       | 17285/56168 [01:36<02:02, 317.98it/s]Running loglikelihood requests:  31%|███       | 17349/56168 [01:37<02:02, 318.05it/s]Running loglikelihood requests:  31%|███       | 17413/56168 [01:37<02:01, 318.47it/s]Running loglikelihood requests:  31%|███       | 17477/56168 [01:37<02:01, 319.18it/s]Running loglikelihood requests:  31%|███       | 17541/56168 [01:37<02:00, 320.00it/s]Running loglikelihood requests:  31%|███▏      | 17605/56168 [01:37<02:00, 320.18it/s]Running loglikelihood requests:  31%|███▏      | 17669/56168 [01:38<01:59, 320.85it/s]Running loglikelihood requests:  32%|███▏      | 17733/56168 [01:38<01:59, 321.04it/s]Running loglikelihood requests:  32%|███▏      | 17797/56168 [01:38<01:59, 321.15it/s]Running loglikelihood requests:  32%|███▏      | 17861/56168 [01:38<01:59, 320.85it/s]Running loglikelihood requests:  32%|███▏      | 17925/56168 [01:38<01:59, 320.96it/s]Running loglikelihood requests:  32%|███▏      | 17989/56168 [01:39<01:58, 321.66it/s]Running loglikelihood requests:  32%|███▏      | 18053/56168 [01:39<01:58, 322.32it/s]Running loglikelihood requests:  32%|███▏      | 18117/56168 [01:39<01:58, 322.10it/s]Running loglikelihood requests:  32%|███▏      | 18181/56168 [01:39<01:58, 321.41it/s]Running loglikelihood requests:  32%|███▏      | 18245/56168 [01:39<01:57, 321.54it/s]Running loglikelihood requests:  33%|███▎      | 18309/56168 [01:40<01:57, 321.40it/s]Running loglikelihood requests:  33%|███▎      | 18373/56168 [01:40<01:57, 321.93it/s]Running loglikelihood requests:  33%|███▎      | 18437/56168 [01:40<01:57, 322.47it/s]Running loglikelihood requests:  33%|███▎      | 18501/56168 [01:40<01:56, 322.17it/s]Running loglikelihood requests:  33%|███▎      | 18565/56168 [01:40<01:56, 322.07it/s]Running loglikelihood requests:  33%|███▎      | 18629/56168 [01:40<01:56, 321.69it/s]Running loglikelihood requests:  33%|███▎      | 18697/56168 [01:41<01:54, 328.05it/s]Running loglikelihood requests:  33%|███▎      | 18761/56168 [01:41<01:54, 326.64it/s]Running loglikelihood requests:  34%|███▎      | 18825/56168 [01:41<01:54, 326.39it/s]Running loglikelihood requests:  34%|███▎      | 18889/56168 [01:41<01:54, 325.04it/s]Running loglikelihood requests:  34%|███▎      | 18953/56168 [01:41<01:53, 328.27it/s]Running loglikelihood requests:  34%|███▍      | 19017/56168 [01:42<01:52, 330.66it/s]Running loglikelihood requests:  34%|███▍      | 19081/56168 [01:42<01:51, 332.11it/s]Running loglikelihood requests:  34%|███▍      | 19145/56168 [01:42<01:51, 333.41it/s]Running loglikelihood requests:  34%|███▍      | 19209/56168 [01:42<01:50, 334.92it/s]Running loglikelihood requests:  34%|███▍      | 19273/56168 [01:42<01:49, 335.72it/s]Running loglikelihood requests:  34%|███▍      | 19337/56168 [01:43<01:49, 336.90it/s]Running loglikelihood requests:  35%|███▍      | 19401/56168 [01:43<01:49, 336.78it/s]Running loglikelihood requests:  35%|███▍      | 19465/56168 [01:43<01:49, 336.64it/s]Running loglikelihood requests:  35%|███▍      | 19529/56168 [01:43<01:48, 337.59it/s]Running loglikelihood requests:  35%|███▍      | 19593/56168 [01:43<01:48, 337.03it/s]Running loglikelihood requests:  35%|███▍      | 19657/56168 [01:44<01:48, 337.32it/s]Running loglikelihood requests:  35%|███▌      | 19721/56168 [01:44<01:47, 338.55it/s]Running loglikelihood requests:  35%|███▌      | 19789/56168 [01:44<01:45, 344.70it/s]Running loglikelihood requests:  35%|███▌      | 19853/56168 [01:44<01:46, 342.53it/s]Running loglikelihood requests:  35%|███▌      | 19917/56168 [01:44<01:45, 342.17it/s]Running loglikelihood requests:  36%|███▌      | 19981/56168 [01:45<01:46, 340.77it/s]Running loglikelihood requests:  36%|███▌      | 20045/56168 [01:45<01:46, 340.75it/s]Running loglikelihood requests:  36%|███▌      | 20109/56168 [01:45<01:45, 340.91it/s]Running loglikelihood requests:  36%|███▌      | 20173/56168 [01:45<01:45, 341.43it/s]Running loglikelihood requests:  36%|███▌      | 20237/56168 [01:45<01:45, 340.89it/s]Running loglikelihood requests:  36%|███▌      | 20305/56168 [01:45<01:43, 347.67it/s]Running loglikelihood requests:  36%|███▋      | 20369/56168 [01:46<01:43, 345.90it/s]Running loglikelihood requests:  36%|███▋      | 20433/56168 [01:46<01:43, 344.29it/s]Running loglikelihood requests:  36%|███▋      | 20497/56168 [01:46<01:43, 344.12it/s]Running loglikelihood requests:  37%|███▋      | 20561/56168 [01:46<01:43, 343.29it/s]Running loglikelihood requests:  37%|███▋      | 20625/56168 [01:46<01:43, 343.09it/s]Running loglikelihood requests:  37%|███▋      | 20689/56168 [01:47<01:43, 342.87it/s]Running loglikelihood requests:  37%|███▋      | 20757/56168 [01:47<01:41, 349.50it/s]Running loglikelihood requests:  37%|███▋      | 20821/56168 [01:47<01:41, 347.20it/s]Running loglikelihood requests:  37%|███▋      | 20885/56168 [01:47<01:41, 346.26it/s]Running loglikelihood requests:  37%|███▋      | 20949/56168 [01:47<01:42, 345.04it/s]Running loglikelihood requests:  37%|███▋      | 21013/56168 [01:48<01:42, 344.01it/s]Running loglikelihood requests:  38%|███▊      | 21077/56168 [01:48<01:42, 343.73it/s]Running loglikelihood requests:  38%|███▊      | 21141/56168 [01:48<01:41, 344.50it/s]Running loglikelihood requests:  38%|███▊      | 21205/56168 [01:48<01:41, 344.39it/s]Running loglikelihood requests:  38%|███▊      | 21269/56168 [01:48<01:41, 343.89it/s]Running loglikelihood requests:  38%|███▊      | 21341/56168 [01:48<01:37, 356.63it/s]Running loglikelihood requests:  38%|███▊      | 21405/56168 [01:49<01:37, 354.90it/s]Running loglikelihood requests:  38%|███▊      | 21469/56168 [01:49<01:37, 355.63it/s]Running loglikelihood requests:  38%|███▊      | 21533/56168 [01:49<01:37, 354.99it/s]Running loglikelihood requests:  38%|███▊      | 21597/56168 [01:49<01:37, 354.63it/s]Running loglikelihood requests:  39%|███▊      | 21661/56168 [01:49<01:37, 353.80it/s]Running loglikelihood requests:  39%|███▊      | 21725/56168 [01:50<01:37, 353.54it/s]Running loglikelihood requests:  39%|███▉      | 21793/56168 [01:50<01:35, 359.62it/s]Running loglikelihood requests:  39%|███▉      | 21857/56168 [01:50<01:35, 357.76it/s]Running loglikelihood requests:  39%|███▉      | 21921/56168 [01:50<01:35, 356.96it/s]Running loglikelihood requests:  39%|███▉      | 21985/56168 [01:50<01:36, 355.68it/s]Running loglikelihood requests:  39%|███▉      | 22049/56168 [01:50<01:36, 354.45it/s]Running loglikelihood requests:  39%|███▉      | 22113/56168 [01:51<01:35, 355.07it/s]Running loglikelihood requests:  39%|███▉      | 22177/56168 [01:51<01:35, 355.48it/s]Running loglikelihood requests:  40%|███▉      | 22241/56168 [01:51<01:35, 356.09it/s]Running loglikelihood requests:  40%|███▉      | 22305/56168 [01:51<01:35, 355.74it/s]Running loglikelihood requests:  40%|███▉      | 22369/56168 [01:51<01:34, 356.20it/s]Running loglikelihood requests:  40%|███▉      | 22433/56168 [01:52<01:34, 356.81it/s]Running loglikelihood requests:  40%|████      | 22497/56168 [01:52<01:34, 356.99it/s]Running loglikelihood requests:  40%|████      | 22561/56168 [01:52<01:34, 356.96it/s]Running loglikelihood requests:  40%|████      | 22625/56168 [01:52<01:33, 357.68it/s]Running loglikelihood requests:  40%|████      | 22689/56168 [01:52<01:33, 358.74it/s]Running loglikelihood requests:  41%|████      | 22753/56168 [01:52<01:32, 360.03it/s]Running loglikelihood requests:  41%|████      | 22817/56168 [01:53<01:32, 360.23it/s]Running loglikelihood requests:  41%|████      | 22881/56168 [01:53<01:32, 360.10it/s]Running loglikelihood requests:  41%|████      | 22945/56168 [01:53<01:31, 361.42it/s]Running loglikelihood requests:  41%|████      | 23009/56168 [01:53<01:31, 361.54it/s]Running loglikelihood requests:  41%|████      | 23073/56168 [01:53<01:31, 360.88it/s]Running loglikelihood requests:  41%|████      | 23137/56168 [01:53<01:31, 360.78it/s]Running loglikelihood requests:  41%|████▏     | 23201/56168 [01:54<01:31, 361.07it/s]Running loglikelihood requests:  41%|████▏     | 23265/56168 [01:54<01:30, 361.84it/s]Running loglikelihood requests:  42%|████▏     | 23329/56168 [01:54<01:30, 361.43it/s]Running loglikelihood requests:  42%|████▏     | 23393/56168 [01:54<01:30, 361.16it/s]Running loglikelihood requests:  42%|████▏     | 23457/56168 [01:54<01:30, 361.21it/s]Running loglikelihood requests:  42%|████▏     | 23521/56168 [01:55<01:30, 361.90it/s]Running loglikelihood requests:  42%|████▏     | 23585/56168 [01:55<01:29, 362.33it/s]Running loglikelihood requests:  42%|████▏     | 23649/56168 [01:55<01:29, 362.91it/s]Running loglikelihood requests:  42%|████▏     | 23713/56168 [01:55<01:29, 364.37it/s]Running loglikelihood requests:  42%|████▏     | 23777/56168 [01:55<01:28, 364.19it/s]Running loglikelihood requests:  42%|████▏     | 23841/56168 [01:55<01:28, 365.09it/s]Running loglikelihood requests:  43%|████▎     | 23905/56168 [01:56<01:28, 365.76it/s]Running loglikelihood requests:  43%|████▎     | 23969/56168 [01:56<01:28, 365.55it/s]Running loglikelihood requests:  43%|████▎     | 24033/56168 [01:56<01:27, 365.74it/s]Running loglikelihood requests:  43%|████▎     | 24097/56168 [01:56<01:27, 365.23it/s]Running loglikelihood requests:  43%|████▎     | 24161/56168 [01:56<01:27, 366.27it/s]Running loglikelihood requests:  43%|████▎     | 24225/56168 [01:56<01:26, 367.89it/s]Running loglikelihood requests:  43%|████▎     | 24289/56168 [01:57<01:26, 367.74it/s]Running loglikelihood requests:  43%|████▎     | 24353/56168 [01:57<01:26, 368.58it/s]Running loglikelihood requests:  43%|████▎     | 24417/56168 [01:57<01:26, 368.11it/s]Running loglikelihood requests:  44%|████▎     | 24481/56168 [01:57<01:25, 369.03it/s]Running loglikelihood requests:  44%|████▎     | 24545/56168 [01:57<01:25, 369.31it/s]Running loglikelihood requests:  44%|████▍     | 24609/56168 [01:57<01:25, 370.67it/s]Running loglikelihood requests:  44%|████▍     | 24673/56168 [01:58<01:24, 370.56it/s]Running loglikelihood requests:  44%|████▍     | 24737/56168 [01:58<01:25, 369.67it/s]Running loglikelihood requests:  44%|████▍     | 24801/56168 [01:58<01:24, 369.91it/s]Running loglikelihood requests:  44%|████▍     | 24865/56168 [01:58<01:24, 370.18it/s]Running loglikelihood requests:  44%|████▍     | 24929/56168 [01:58<01:24, 370.81it/s]Running loglikelihood requests:  44%|████▍     | 24993/56168 [01:59<01:24, 370.89it/s]Running loglikelihood requests:  45%|████▍     | 25061/56168 [01:59<01:22, 377.85it/s]Running loglikelihood requests:  45%|████▍     | 25125/56168 [01:59<01:22, 375.87it/s]Running loglikelihood requests:  45%|████▍     | 25189/56168 [01:59<01:22, 375.20it/s]Running loglikelihood requests:  45%|████▍     | 25253/56168 [01:59<01:22, 373.83it/s]Running loglikelihood requests:  45%|████▌     | 25317/56168 [01:59<01:22, 373.71it/s]Running loglikelihood requests:  45%|████▌     | 25381/56168 [02:00<01:22, 372.16it/s]Running loglikelihood requests:  45%|████▌     | 25445/56168 [02:00<01:22, 371.69it/s]Running loglikelihood requests:  45%|████▌     | 25509/56168 [02:00<01:22, 371.66it/s]Running loglikelihood requests:  46%|████▌     | 25573/56168 [02:00<01:21, 373.14it/s]Running loglikelihood requests:  46%|████▌     | 25637/56168 [02:00<01:22, 372.25it/s]Running loglikelihood requests:  46%|████▌     | 25701/56168 [02:00<01:21, 372.43it/s]Running loglikelihood requests:  46%|████▌     | 25765/56168 [02:01<01:21, 372.85it/s]Running loglikelihood requests:  46%|████▌     | 25829/56168 [02:01<01:21, 374.11it/s]Running loglikelihood requests:  46%|████▌     | 25893/56168 [02:01<01:21, 372.95it/s]Running loglikelihood requests:  46%|████▌     | 25957/56168 [02:01<01:20, 373.37it/s]Running loglikelihood requests:  46%|████▋     | 26021/56168 [02:01<01:20, 372.21it/s]Running loglikelihood requests:  46%|████▋     | 26085/56168 [02:01<01:20, 373.78it/s]Running loglikelihood requests:  47%|████▋     | 26149/56168 [02:02<01:17, 386.27it/s]Running loglikelihood requests:  47%|████▋     | 26213/56168 [02:02<01:15, 397.00it/s]Running loglikelihood requests:  47%|████▋     | 26277/56168 [02:02<01:14, 402.33it/s]Running loglikelihood requests:  47%|████▋     | 26341/56168 [02:02<01:13, 406.94it/s]Running loglikelihood requests:  47%|████▋     | 26405/56168 [02:02<01:12, 409.15it/s]Running loglikelihood requests:  47%|████▋     | 26469/56168 [02:02<01:12, 411.33it/s]Running loglikelihood requests:  47%|████▋     | 26533/56168 [02:03<01:11, 414.74it/s]Running loglikelihood requests:  47%|████▋     | 26597/56168 [02:03<01:11, 415.75it/s]Running loglikelihood requests:  47%|████▋     | 26661/56168 [02:03<01:10, 417.48it/s]Running loglikelihood requests:  48%|████▊     | 26725/56168 [02:03<01:10, 418.00it/s]Running loglikelihood requests:  48%|████▊     | 26789/56168 [02:03<01:10, 419.38it/s]Running loglikelihood requests:  48%|████▊     | 26853/56168 [02:03<01:10, 418.75it/s]Running loglikelihood requests:  48%|████▊     | 26917/56168 [02:03<01:09, 419.86it/s]Running loglikelihood requests:  48%|████▊     | 26981/56168 [02:04<01:09, 419.72it/s]Running loglikelihood requests:  48%|████▊     | 27045/56168 [02:04<01:09, 420.52it/s]Running loglikelihood requests:  48%|████▊     | 27109/56168 [02:04<01:08, 421.64it/s]Running loglikelihood requests:  48%|████▊     | 27173/56168 [02:04<01:08, 421.32it/s]Running loglikelihood requests:  48%|████▊     | 27237/56168 [02:04<01:08, 420.67it/s]Running loglikelihood requests:  49%|████▊     | 27301/56168 [02:04<01:08, 421.22it/s]Running loglikelihood requests:  49%|████▊     | 27365/56168 [02:04<01:08, 421.59it/s]Running loglikelihood requests:  49%|████▉     | 27429/56168 [02:05<01:07, 422.64it/s]Running loglikelihood requests:  49%|████▉     | 27493/56168 [02:05<01:07, 422.62it/s]Running loglikelihood requests:  49%|████▉     | 27557/56168 [02:05<01:07, 423.93it/s]Running loglikelihood requests:  49%|████▉     | 27621/56168 [02:05<01:07, 422.11it/s]Running loglikelihood requests:  49%|████▉     | 27685/56168 [02:05<01:07, 423.46it/s]Running loglikelihood requests:  49%|████▉     | 27749/56168 [02:05<01:06, 424.37it/s]Running loglikelihood requests:  50%|████▉     | 27813/56168 [02:06<01:06, 424.99it/s]Running loglikelihood requests:  50%|████▉     | 27877/56168 [02:06<01:06, 424.17it/s]Running loglikelihood requests:  50%|████▉     | 27941/56168 [02:06<01:06, 425.32it/s]Running loglikelihood requests:  50%|████▉     | 28005/56168 [02:06<01:06, 424.93it/s]Running loglikelihood requests:  50%|████▉     | 28069/56168 [02:06<01:06, 425.31it/s]Running loglikelihood requests:  50%|█████     | 28133/56168 [02:06<01:05, 425.95it/s]Running loglikelihood requests:  50%|█████     | 28197/56168 [02:06<01:05, 426.24it/s]Running loglikelihood requests:  50%|█████     | 28261/56168 [02:07<01:05, 426.89it/s]Running loglikelihood requests:  50%|█████     | 28329/56168 [02:07<01:04, 434.46it/s]Running loglikelihood requests:  51%|█████     | 28393/56168 [02:07<01:04, 431.08it/s]Running loglikelihood requests:  51%|█████     | 28457/56168 [02:07<01:04, 429.61it/s]Running loglikelihood requests:  51%|█████     | 28521/56168 [02:07<01:04, 428.40it/s]Running loglikelihood requests:  51%|█████     | 28585/56168 [02:07<01:04, 428.72it/s]Running loglikelihood requests:  51%|█████     | 28649/56168 [02:07<01:04, 428.29it/s]Running loglikelihood requests:  51%|█████     | 28713/56168 [02:08<01:04, 428.02it/s]Running loglikelihood requests:  51%|█████     | 28777/56168 [02:08<01:03, 428.34it/s]Running loglikelihood requests:  51%|█████▏    | 28841/56168 [02:08<01:03, 430.98it/s]Running loglikelihood requests:  51%|█████▏    | 28905/56168 [02:08<01:03, 432.00it/s]Running loglikelihood requests:  52%|█████▏    | 28969/56168 [02:08<01:03, 431.60it/s]Running loglikelihood requests:  52%|█████▏    | 29033/56168 [02:08<01:02, 431.59it/s]Running loglikelihood requests:  52%|█████▏    | 29097/56168 [02:09<01:02, 432.86it/s]Running loglikelihood requests:  52%|█████▏    | 29161/56168 [02:09<01:02, 431.89it/s]Running loglikelihood requests:  52%|█████▏    | 29225/56168 [02:09<01:02, 434.51it/s]Running loglikelihood requests:  52%|█████▏    | 29289/56168 [02:09<01:01, 438.36it/s]Running loglikelihood requests:  52%|█████▏    | 29353/56168 [02:09<01:01, 439.28it/s]Running loglikelihood requests:  52%|█████▏    | 29421/56168 [02:09<00:59, 449.22it/s]Running loglikelihood requests:  52%|█████▏    | 29485/56168 [02:09<00:59, 446.88it/s]Running loglikelihood requests:  53%|█████▎    | 29549/56168 [02:10<00:59, 444.69it/s]Running loglikelihood requests:  53%|█████▎    | 29613/56168 [02:10<00:59, 444.88it/s]Running loglikelihood requests:  53%|█████▎    | 29677/56168 [02:10<00:59, 442.98it/s]Running loglikelihood requests:  53%|█████▎    | 29741/56168 [02:10<00:59, 444.25it/s]Running loglikelihood requests:  53%|█████▎    | 29805/56168 [02:10<00:59, 444.72it/s]Running loglikelihood requests:  53%|█████▎    | 29869/56168 [02:10<00:59, 445.67it/s]Running loglikelihood requests:  53%|█████▎    | 29933/56168 [02:10<00:58, 445.76it/s]Running loglikelihood requests:  53%|█████▎    | 29997/56168 [02:11<00:58, 444.96it/s]Running loglikelihood requests:  54%|█████▎    | 30061/56168 [02:11<00:58, 444.13it/s]Running loglikelihood requests:  54%|█████▎    | 30125/56168 [02:11<00:58, 444.19it/s]Running loglikelihood requests:  54%|█████▎    | 30189/56168 [02:11<00:58, 443.30it/s]Running loglikelihood requests:  54%|█████▍    | 30253/56168 [02:11<00:58, 442.55it/s]Running loglikelihood requests:  54%|█████▍    | 30317/56168 [02:11<00:58, 444.31it/s]Running loglikelihood requests:  54%|█████▍    | 30381/56168 [02:11<00:57, 446.37it/s]Running loglikelihood requests:  54%|█████▍    | 30445/56168 [02:12<00:57, 446.14it/s]Running loglikelihood requests:  54%|█████▍    | 30509/56168 [02:12<00:57, 445.69it/s]Running loglikelihood requests:  54%|█████▍    | 30573/56168 [02:12<00:57, 445.16it/s]Running loglikelihood requests:  55%|█████▍    | 30637/56168 [02:12<00:57, 445.02it/s]Running loglikelihood requests:  55%|█████▍    | 30701/56168 [02:12<00:57, 444.17it/s]Running loglikelihood requests:  55%|█████▍    | 30765/56168 [02:12<00:57, 445.25it/s]Running loglikelihood requests:  55%|█████▍    | 30833/56168 [02:12<00:55, 454.35it/s]Running loglikelihood requests:  55%|█████▌    | 30897/56168 [02:13<00:55, 452.82it/s]Running loglikelihood requests:  55%|█████▌    | 30961/56168 [02:13<00:55, 452.35it/s]Running loglikelihood requests:  55%|█████▌    | 31025/56168 [02:13<00:55, 451.35it/s]Running loglikelihood requests:  55%|█████▌    | 31089/56168 [02:13<00:55, 449.18it/s]Running loglikelihood requests:  55%|█████▌    | 31153/56168 [02:13<00:55, 448.83it/s]Running loglikelihood requests:  56%|█████▌    | 31217/56168 [02:13<00:55, 449.67it/s]Running loglikelihood requests:  56%|█████▌    | 31281/56168 [02:13<00:55, 449.26it/s]Running loglikelihood requests:  56%|█████▌    | 31345/56168 [02:14<00:55, 448.02it/s]Running loglikelihood requests:  56%|█████▌    | 31409/56168 [02:14<00:55, 447.77it/s]Running loglikelihood requests:  56%|█████▌    | 31473/56168 [02:14<00:55, 447.23it/s]Running loglikelihood requests:  56%|█████▌    | 31537/56168 [02:14<00:54, 448.00it/s]Running loglikelihood requests:  56%|█████▋    | 31601/56168 [02:14<00:54, 449.26it/s]Running loglikelihood requests:  56%|█████▋    | 31665/56168 [02:14<00:54, 449.94it/s]Running loglikelihood requests:  56%|█████▋    | 31729/56168 [02:14<00:54, 448.68it/s]Running loglikelihood requests:  57%|█████▋    | 31793/56168 [02:15<00:54, 449.97it/s]Running loglikelihood requests:  57%|█████▋    | 31861/56168 [02:15<00:52, 459.00it/s]Running loglikelihood requests:  57%|█████▋    | 31925/56168 [02:15<00:53, 457.14it/s]Running loglikelihood requests:  57%|█████▋    | 31989/56168 [02:15<00:53, 455.50it/s]Running loglikelihood requests:  57%|█████▋    | 32053/56168 [02:15<00:53, 454.53it/s]Running loglikelihood requests:  57%|█████▋    | 32117/56168 [02:15<00:53, 452.94it/s]Running loglikelihood requests:  57%|█████▋    | 32181/56168 [02:15<00:52, 452.80it/s]Running loglikelihood requests:  57%|█████▋    | 32245/56168 [02:16<00:52, 452.93it/s]Running loglikelihood requests:  58%|█████▊    | 32309/56168 [02:16<00:52, 452.23it/s]Running loglikelihood requests:  58%|█████▊    | 32373/56168 [02:16<00:52, 452.25it/s]Running loglikelihood requests:  58%|█████▊    | 32437/56168 [02:16<00:52, 452.55it/s]Running loglikelihood requests:  58%|█████▊    | 32501/56168 [02:16<00:52, 452.31it/s]Running loglikelihood requests:  58%|█████▊    | 32569/56168 [02:16<00:51, 460.98it/s]Running loglikelihood requests:  58%|█████▊    | 32633/56168 [02:16<00:51, 458.41it/s]Running loglikelihood requests:  58%|█████▊    | 32697/56168 [02:17<00:51, 455.80it/s]Running loglikelihood requests:  58%|█████▊    | 32765/56168 [02:17<00:50, 463.14it/s]Running loglikelihood requests:  58%|█████▊    | 32829/56168 [02:17<00:50, 460.03it/s]Running loglikelihood requests:  59%|█████▊    | 32893/56168 [02:17<00:50, 458.49it/s]Running loglikelihood requests:  59%|█████▊    | 32957/56168 [02:17<00:50, 464.00it/s]Running loglikelihood requests:  59%|█████▉    | 33021/56168 [02:17<00:49, 466.23it/s]Running loglikelihood requests:  59%|█████▉    | 33085/56168 [02:17<00:49, 468.44it/s]Running loglikelihood requests:  59%|█████▉    | 33149/56168 [02:18<00:49, 468.82it/s]Running loglikelihood requests:  59%|█████▉    | 33213/56168 [02:18<00:48, 470.68it/s]Running loglikelihood requests:  59%|█████▉    | 33277/56168 [02:18<00:48, 469.47it/s]Running loglikelihood requests:  59%|█████▉    | 33341/56168 [02:18<00:48, 470.96it/s]Running loglikelihood requests:  59%|█████▉    | 33405/56168 [02:18<00:48, 470.62it/s]Running loglikelihood requests:  60%|█████▉    | 33469/56168 [02:18<00:48, 472.58it/s]Running loglikelihood requests:  60%|█████▉    | 33533/56168 [02:18<00:47, 474.62it/s]Running loglikelihood requests:  60%|█████▉    | 33597/56168 [02:18<00:47, 474.00it/s]Running loglikelihood requests:  60%|█████▉    | 33661/56168 [02:19<00:47, 474.99it/s]Running loglikelihood requests:  60%|██████    | 33725/56168 [02:19<00:47, 476.50it/s]Running loglikelihood requests:  60%|██████    | 33789/56168 [02:19<00:46, 476.81it/s]Running loglikelihood requests:  60%|██████    | 33853/56168 [02:19<00:46, 476.71it/s]Running loglikelihood requests:  60%|██████    | 33917/56168 [02:19<00:46, 477.61it/s]Running loglikelihood requests:  60%|██████    | 33981/56168 [02:19<00:46, 476.40it/s]Running loglikelihood requests:  61%|██████    | 34045/56168 [02:19<00:46, 477.20it/s]Running loglikelihood requests:  61%|██████    | 34109/56168 [02:20<00:46, 476.09it/s]Running loglikelihood requests:  61%|██████    | 34173/56168 [02:20<00:46, 475.55it/s]Running loglikelihood requests:  61%|██████    | 34237/56168 [02:20<00:46, 476.01it/s]Running loglikelihood requests:  61%|██████    | 34301/56168 [02:20<00:45, 475.55it/s]Running loglikelihood requests:  61%|██████    | 34365/56168 [02:20<00:45, 475.91it/s]Running loglikelihood requests:  61%|██████▏   | 34429/56168 [02:20<00:45, 477.23it/s]Running loglikelihood requests:  61%|██████▏   | 34493/56168 [02:20<00:45, 477.36it/s]Running loglikelihood requests:  62%|██████▏   | 34557/56168 [02:20<00:45, 477.67it/s]Running loglikelihood requests:  62%|██████▏   | 34621/56168 [02:21<00:45, 478.45it/s]Running loglikelihood requests:  62%|██████▏   | 34685/56168 [02:21<00:44, 477.41it/s]Running loglikelihood requests:  62%|██████▏   | 34749/56168 [02:21<00:44, 478.84it/s]Running loglikelihood requests:  62%|██████▏   | 34813/56168 [02:21<00:44, 478.82it/s]Running loglikelihood requests:  62%|██████▏   | 34877/56168 [02:21<00:44, 477.52it/s]Running loglikelihood requests:  62%|██████▏   | 34941/56168 [02:21<00:44, 477.95it/s]Running loglikelihood requests:  62%|██████▏   | 35005/56168 [02:21<00:44, 477.84it/s]Running loglikelihood requests:  62%|██████▏   | 35069/56168 [02:22<00:44, 478.14it/s]Running loglikelihood requests:  63%|██████▎   | 35133/56168 [02:22<00:43, 480.57it/s]Running loglikelihood requests:  63%|██████▎   | 35197/56168 [02:22<00:43, 481.19it/s]Running loglikelihood requests:  63%|██████▎   | 35261/56168 [02:22<00:43, 480.01it/s]Running loglikelihood requests:  63%|██████▎   | 35325/56168 [02:22<00:43, 479.03it/s]Running loglikelihood requests:  63%|██████▎   | 35389/56168 [02:22<00:43, 479.67it/s]Running loglikelihood requests:  63%|██████▎   | 35453/56168 [02:22<00:43, 479.88it/s]Running loglikelihood requests:  63%|██████▎   | 35517/56168 [02:22<00:43, 479.13it/s]Running loglikelihood requests:  63%|██████▎   | 35581/56168 [02:23<00:42, 479.68it/s]Running loglikelihood requests:  63%|██████▎   | 35645/56168 [02:23<00:42, 480.30it/s]Running loglikelihood requests:  64%|██████▎   | 35709/56168 [02:23<00:42, 480.46it/s]Running loglikelihood requests:  64%|██████▎   | 35773/56168 [02:23<00:42, 481.30it/s]Running loglikelihood requests:  64%|██████▍   | 35837/56168 [02:23<00:42, 480.35it/s]Running loglikelihood requests:  64%|██████▍   | 35901/56168 [02:23<00:42, 480.97it/s]Running loglikelihood requests:  64%|██████▍   | 35965/56168 [02:23<00:41, 481.58it/s]Running loglikelihood requests:  64%|██████▍   | 36029/56168 [02:24<00:41, 483.70it/s]Running loglikelihood requests:  64%|██████▍   | 36093/56168 [02:24<00:41, 483.84it/s]Running loglikelihood requests:  64%|██████▍   | 36157/56168 [02:24<00:41, 484.50it/s]Running loglikelihood requests:  64%|██████▍   | 36221/56168 [02:24<00:41, 477.12it/s]Running loglikelihood requests:  65%|██████▍   | 36285/56168 [02:24<00:41, 480.48it/s]Running loglikelihood requests:  65%|██████▍   | 36349/56168 [02:24<00:40, 484.73it/s]Running loglikelihood requests:  65%|██████▍   | 36413/56168 [02:24<00:40, 485.61it/s]Running loglikelihood requests:  65%|██████▍   | 36477/56168 [02:24<00:40, 487.84it/s]Running loglikelihood requests:  65%|██████▌   | 36541/56168 [02:25<00:40, 486.81it/s]Running loglikelihood requests:  65%|██████▌   | 36605/56168 [02:25<00:40, 487.54it/s]Running loglikelihood requests:  65%|██████▌   | 36669/56168 [02:25<00:39, 488.15it/s]Running loglikelihood requests:  65%|██████▌   | 36733/56168 [02:25<00:39, 487.64it/s]Running loglikelihood requests:  66%|██████▌   | 36797/56168 [02:25<00:39, 488.17it/s]Running loglikelihood requests:  66%|██████▌   | 36861/56168 [02:25<00:39, 490.07it/s]Running loglikelihood requests:  66%|██████▌   | 36925/56168 [02:25<00:39, 490.58it/s]Running loglikelihood requests:  66%|██████▌   | 36993/56168 [02:26<00:38, 498.74it/s]Running loglikelihood requests:  66%|██████▌   | 37057/56168 [02:26<00:38, 497.20it/s]Running loglikelihood requests:  66%|██████▌   | 37121/56168 [02:26<00:38, 494.28it/s]Running loglikelihood requests:  66%|██████▌   | 37185/56168 [02:26<00:38, 492.53it/s]Running loglikelihood requests:  66%|██████▋   | 37249/56168 [02:26<00:38, 491.81it/s]Running loglikelihood requests:  66%|██████▋   | 37313/56168 [02:26<00:38, 492.99it/s]Running loglikelihood requests:  67%|██████▋   | 37377/56168 [02:26<00:38, 491.18it/s]Running loglikelihood requests:  67%|██████▋   | 37441/56168 [02:26<00:37, 496.63it/s]Running loglikelihood requests:  67%|██████▋   | 37505/56168 [02:27<00:37, 501.17it/s]Running loglikelihood requests:  67%|██████▋   | 37569/56168 [02:27<00:36, 504.07it/s]Running loglikelihood requests:  67%|██████▋   | 37633/56168 [02:27<00:36, 504.75it/s]Running loglikelihood requests:  67%|██████▋   | 37697/56168 [02:27<00:36, 506.73it/s]Running loglikelihood requests:  67%|██████▋   | 37761/56168 [02:27<00:36, 509.22it/s]Running loglikelihood requests:  67%|██████▋   | 37825/56168 [02:27<00:35, 509.84it/s]Running loglikelihood requests:  67%|██████▋   | 37889/56168 [02:27<00:35, 510.53it/s]Running loglikelihood requests:  68%|██████▊   | 37953/56168 [02:27<00:35, 509.28it/s]Running loglikelihood requests:  68%|██████▊   | 38017/56168 [02:28<00:35, 509.29it/s]Running loglikelihood requests:  68%|██████▊   | 38081/56168 [02:28<00:35, 512.51it/s]Running loglikelihood requests:  68%|██████▊   | 38145/56168 [02:28<00:35, 514.18it/s]Running loglikelihood requests:  68%|██████▊   | 38209/56168 [02:28<00:34, 514.98it/s]Running loglikelihood requests:  68%|██████▊   | 38273/56168 [02:28<00:34, 515.23it/s]Running loglikelihood requests:  68%|██████▊   | 38337/56168 [02:28<00:34, 515.72it/s]Running loglikelihood requests:  68%|██████▊   | 38401/56168 [02:28<00:34, 515.78it/s]Running loglikelihood requests:  68%|██████▊   | 38465/56168 [02:28<00:34, 514.99it/s]Running loglikelihood requests:  69%|██████▊   | 38529/56168 [02:29<00:34, 514.81it/s]Running loglikelihood requests:  69%|██████▊   | 38593/56168 [02:29<00:34, 516.84it/s]Running loglikelihood requests:  69%|██████▉   | 38657/56168 [02:29<00:33, 518.19it/s]Running loglikelihood requests:  69%|██████▉   | 38721/56168 [02:29<00:33, 517.05it/s]Running loglikelihood requests:  69%|██████▉   | 38789/56168 [02:29<00:33, 525.31it/s]Running loglikelihood requests:  69%|██████▉   | 38853/56168 [02:29<00:33, 521.66it/s]Running loglikelihood requests:  69%|██████▉   | 38917/56168 [02:29<00:33, 518.79it/s]Running loglikelihood requests:  69%|██████▉   | 38981/56168 [02:29<00:33, 518.84it/s]Running loglikelihood requests:  70%|██████▉   | 39045/56168 [02:30<00:32, 519.45it/s]Running loglikelihood requests:  70%|██████▉   | 39109/56168 [02:30<00:32, 519.88it/s]Running loglikelihood requests:  70%|██████▉   | 39173/56168 [02:30<00:32, 520.50it/s]Running loglikelihood requests:  70%|██████▉   | 39237/56168 [02:30<00:32, 522.14it/s]Running loglikelihood requests:  70%|██████▉   | 39301/56168 [02:30<00:32, 522.50it/s]Running loglikelihood requests:  70%|███████   | 39365/56168 [02:30<00:32, 522.58it/s]Running loglikelihood requests:  70%|███████   | 39429/56168 [02:30<00:32, 522.18it/s]Running loglikelihood requests:  70%|███████   | 39493/56168 [02:30<00:32, 520.52it/s]Running loglikelihood requests:  70%|███████   | 39557/56168 [02:31<00:32, 518.50it/s]Running loglikelihood requests:  71%|███████   | 39621/56168 [02:31<00:31, 518.04it/s]Running loglikelihood requests:  71%|███████   | 39685/56168 [02:31<00:31, 517.58it/s]Running loglikelihood requests:  71%|███████   | 39749/56168 [02:31<00:31, 516.71it/s]Running loglikelihood requests:  71%|███████   | 39813/56168 [02:31<00:31, 515.89it/s]Running loglikelihood requests:  71%|███████   | 39877/56168 [02:31<00:31, 516.23it/s]Running loglikelihood requests:  71%|███████   | 39941/56168 [02:31<00:31, 516.07it/s]Running loglikelihood requests:  71%|███████   | 40005/56168 [02:31<00:31, 516.00it/s]Running loglikelihood requests:  71%|███████▏  | 40069/56168 [02:31<00:31, 514.34it/s]Running loglikelihood requests:  71%|███████▏  | 40133/56168 [02:32<00:31, 515.84it/s]Running loglikelihood requests:  72%|███████▏  | 40197/56168 [02:32<00:31, 514.28it/s]Running loglikelihood requests:  72%|███████▏  | 40261/56168 [02:32<00:30, 516.64it/s]Running loglikelihood requests:  72%|███████▏  | 40325/56168 [02:32<00:30, 517.24it/s]Running loglikelihood requests:  72%|███████▏  | 40389/56168 [02:32<00:30, 516.73it/s]Running loglikelihood requests:  72%|███████▏  | 40453/56168 [02:32<00:30, 515.20it/s]Running loglikelihood requests:  72%|███████▏  | 40517/56168 [02:32<00:30, 516.80it/s]Running loglikelihood requests:  72%|███████▏  | 40581/56168 [02:32<00:30, 516.21it/s]Running loglikelihood requests:  72%|███████▏  | 40645/56168 [02:33<00:29, 518.60it/s]Running loglikelihood requests:  72%|███████▏  | 40709/56168 [02:33<00:29, 517.15it/s]Running loglikelihood requests:  73%|███████▎  | 40773/56168 [02:33<00:29, 517.45it/s]Running loglikelihood requests:  73%|███████▎  | 40837/56168 [02:33<00:29, 518.92it/s]Running loglikelihood requests:  73%|███████▎  | 40901/56168 [02:33<00:29, 521.31it/s]Running loglikelihood requests:  73%|███████▎  | 40965/56168 [02:33<00:29, 522.58it/s]Running loglikelihood requests:  73%|███████▎  | 41029/56168 [02:33<00:28, 522.81it/s]Running loglikelihood requests:  73%|███████▎  | 41093/56168 [02:33<00:28, 521.35it/s]Running loglikelihood requests:  73%|███████▎  | 41157/56168 [02:34<00:28, 521.78it/s]Running loglikelihood requests:  73%|███████▎  | 41221/56168 [02:34<00:28, 521.50it/s]Running loglikelihood requests:  74%|███████▎  | 41285/56168 [02:34<00:28, 518.97it/s]Running loglikelihood requests:  74%|███████▎  | 41349/56168 [02:34<00:28, 518.64it/s]Running loglikelihood requests:  74%|███████▎  | 41413/56168 [02:34<00:28, 520.01it/s]Running loglikelihood requests:  74%|███████▍  | 41477/56168 [02:34<00:28, 521.16it/s]Running loglikelihood requests:  74%|███████▍  | 41545/56168 [02:34<00:27, 530.49it/s]Running loglikelihood requests:  74%|███████▍  | 41609/56168 [02:34<00:27, 529.51it/s]Running loglikelihood requests:  74%|███████▍  | 41673/56168 [02:35<00:27, 528.82it/s]Running loglikelihood requests:  74%|███████▍  | 41737/56168 [02:35<00:27, 527.63it/s]Running loglikelihood requests:  74%|███████▍  | 41801/56168 [02:35<00:27, 526.58it/s]Running loglikelihood requests:  75%|███████▍  | 41865/56168 [02:35<00:27, 526.02it/s]Running loglikelihood requests:  75%|███████▍  | 41929/56168 [02:35<00:27, 525.41it/s]Running loglikelihood requests:  75%|███████▍  | 42001/56168 [02:35<00:26, 543.87it/s]Running loglikelihood requests:  75%|███████▍  | 42065/56168 [02:35<00:26, 538.47it/s]Running loglikelihood requests:  75%|███████▌  | 42129/56168 [02:35<00:26, 534.04it/s]Running loglikelihood requests:  75%|███████▌  | 42193/56168 [02:36<00:26, 531.30it/s]Running loglikelihood requests:  75%|███████▌  | 42257/56168 [02:36<00:26, 529.54it/s]Running loglikelihood requests:  75%|███████▌  | 42321/56168 [02:36<00:26, 527.10it/s]Running loglikelihood requests:  75%|███████▌  | 42385/56168 [02:36<00:26, 525.30it/s]Running loglikelihood requests:  76%|███████▌  | 42449/56168 [02:36<00:25, 534.79it/s]Running loglikelihood requests:  76%|███████▌  | 42513/56168 [02:36<00:25, 542.17it/s]Running loglikelihood requests:  76%|███████▌  | 42577/56168 [02:36<00:24, 547.51it/s]Running loglikelihood requests:  76%|███████▌  | 42645/56168 [02:36<00:24, 559.59it/s]Running loglikelihood requests:  76%|███████▌  | 42709/56168 [02:36<00:24, 558.92it/s]Running loglikelihood requests:  76%|███████▌  | 42773/56168 [02:37<00:23, 558.66it/s]Running loglikelihood requests:  76%|███████▋  | 42837/56168 [02:37<00:23, 558.61it/s]Running loglikelihood requests:  76%|███████▋  | 42901/56168 [02:37<00:23, 558.18it/s]Running loglikelihood requests:  76%|███████▋  | 42965/56168 [02:37<00:23, 559.49it/s]Running loglikelihood requests:  77%|███████▋  | 43029/56168 [02:37<00:23, 561.33it/s]Running loglikelihood requests:  77%|███████▋  | 43093/56168 [02:37<00:23, 560.51it/s]Running loglikelihood requests:  77%|███████▋  | 43157/56168 [02:37<00:23, 560.88it/s]Running loglikelihood requests:  77%|███████▋  | 43221/56168 [02:37<00:23, 559.76it/s]Running loglikelihood requests:  77%|███████▋  | 43285/56168 [02:38<00:22, 560.34it/s]Running loglikelihood requests:  77%|███████▋  | 43349/56168 [02:38<00:22, 560.91it/s]Running loglikelihood requests:  77%|███████▋  | 43413/56168 [02:38<00:22, 559.64it/s]Running loglikelihood requests:  77%|███████▋  | 43477/56168 [02:38<00:22, 560.15it/s]Running loglikelihood requests:  78%|███████▊  | 43541/56168 [02:38<00:22, 560.89it/s]Running loglikelihood requests:  78%|███████▊  | 43605/56168 [02:38<00:22, 559.66it/s]Running loglikelihood requests:  78%|███████▊  | 43669/56168 [02:38<00:22, 558.93it/s]Running loglikelihood requests:  78%|███████▊  | 43733/56168 [02:38<00:22, 559.30it/s]Running loglikelihood requests:  78%|███████▊  | 43797/56168 [02:38<00:22, 557.46it/s]Running loglikelihood requests:  78%|███████▊  | 43861/56168 [02:39<00:21, 560.52it/s]Running loglikelihood requests:  78%|███████▊  | 43925/56168 [02:39<00:21, 562.80it/s]Running loglikelihood requests:  78%|███████▊  | 43989/56168 [02:39<00:21, 559.95it/s]Running loglikelihood requests:  78%|███████▊  | 44053/56168 [02:39<00:21, 561.86it/s]Running loglikelihood requests:  79%|███████▊  | 44121/56168 [02:39<00:21, 572.94it/s]Running loglikelihood requests:  79%|███████▊  | 44185/56168 [02:39<00:21, 570.41it/s]Running loglikelihood requests:  79%|███████▉  | 44249/56168 [02:39<00:20, 569.35it/s]Running loglikelihood requests:  79%|███████▉  | 44313/56168 [02:39<00:20, 567.22it/s]Running loglikelihood requests:  79%|███████▉  | 44377/56168 [02:39<00:20, 567.51it/s]Running loglikelihood requests:  79%|███████▉  | 44441/56168 [02:40<00:20, 567.15it/s]Running loglikelihood requests:  79%|███████▉  | 44505/56168 [02:40<00:20, 566.12it/s]Running loglikelihood requests:  79%|███████▉  | 44569/56168 [02:40<00:20, 566.12it/s]Running loglikelihood requests:  79%|███████▉  | 44633/56168 [02:40<00:20, 565.66it/s]Running loglikelihood requests:  80%|███████▉  | 44697/56168 [02:40<00:20, 566.76it/s]Running loglikelihood requests:  80%|███████▉  | 44761/56168 [02:40<00:20, 566.17it/s]Running loglikelihood requests:  80%|███████▉  | 44825/56168 [02:40<00:20, 565.78it/s]Running loglikelihood requests:  80%|███████▉  | 44889/56168 [02:40<00:19, 566.86it/s]Running loglikelihood requests:  80%|████████  | 44953/56168 [02:40<00:19, 566.00it/s]Running loglikelihood requests:  80%|████████  | 45017/56168 [02:41<00:19, 568.99it/s]Running loglikelihood requests:  80%|████████  | 45081/56168 [02:41<00:19, 570.16it/s]Running loglikelihood requests:  80%|████████  | 45145/56168 [02:41<00:19, 573.10it/s]Running loglikelihood requests:  80%|████████  | 45209/56168 [02:41<00:19, 572.55it/s]Running loglikelihood requests:  81%|████████  | 45273/56168 [02:41<00:19, 573.35it/s]Running loglikelihood requests:  81%|████████  | 45337/56168 [02:41<00:18, 573.83it/s]Running loglikelihood requests:  81%|████████  | 45401/56168 [02:41<00:18, 576.18it/s]Running loglikelihood requests:  81%|████████  | 45465/56168 [02:41<00:18, 575.73it/s]Running loglikelihood requests:  81%|████████  | 45529/56168 [02:41<00:18, 577.52it/s]Running loglikelihood requests:  81%|████████  | 45593/56168 [02:42<00:18, 577.06it/s]Running loglikelihood requests:  81%|████████▏ | 45657/56168 [02:42<00:18, 578.41it/s]Running loglikelihood requests:  81%|████████▏ | 45721/56168 [02:42<00:18, 577.74it/s]Running loglikelihood requests:  82%|████████▏ | 45785/56168 [02:42<00:17, 578.69it/s]Running loglikelihood requests:  82%|████████▏ | 45849/56168 [02:42<00:17, 576.24it/s]Running loglikelihood requests:  82%|████████▏ | 45913/56168 [02:42<00:17, 577.06it/s]Running loglikelihood requests:  82%|████████▏ | 45977/56168 [02:42<00:17, 575.90it/s]Running loglikelihood requests:  82%|████████▏ | 46041/56168 [02:42<00:17, 578.30it/s]Running loglikelihood requests:  82%|████████▏ | 46105/56168 [02:42<00:17, 577.81it/s]Running loglikelihood requests:  82%|████████▏ | 46169/56168 [02:43<00:17, 578.06it/s]Running loglikelihood requests:  82%|████████▏ | 46233/56168 [02:43<00:17, 576.14it/s]Running loglikelihood requests:  82%|████████▏ | 46297/56168 [02:43<00:17, 577.58it/s]Running loglikelihood requests:  83%|████████▎ | 46361/56168 [02:43<00:17, 576.78it/s]Running loglikelihood requests:  83%|████████▎ | 46425/56168 [02:43<00:16, 578.86it/s]Running loglikelihood requests:  83%|████████▎ | 46489/56168 [02:43<00:16, 578.75it/s]Running loglikelihood requests:  83%|████████▎ | 46553/56168 [02:43<00:16, 578.08it/s]Running loglikelihood requests:  83%|████████▎ | 46617/56168 [02:43<00:16, 578.07it/s]Running loglikelihood requests:  83%|████████▎ | 46681/56168 [02:43<00:16, 579.37it/s]Running loglikelihood requests:  83%|████████▎ | 46745/56168 [02:44<00:16, 579.82it/s]Running loglikelihood requests:  83%|████████▎ | 46809/56168 [02:44<00:16, 579.39it/s]Running loglikelihood requests:  83%|████████▎ | 46873/56168 [02:44<00:16, 579.67it/s]Running loglikelihood requests:  84%|████████▎ | 46937/56168 [02:44<00:15, 580.34it/s]Running loglikelihood requests:  84%|████████▎ | 47001/56168 [02:44<00:15, 581.93it/s]Running loglikelihood requests:  84%|████████▍ | 47065/56168 [02:44<00:15, 581.65it/s]Running loglikelihood requests:  84%|████████▍ | 47129/56168 [02:44<00:15, 583.13it/s]Running loglikelihood requests:  84%|████████▍ | 47193/56168 [02:44<00:15, 582.89it/s]Running loglikelihood requests:  84%|████████▍ | 47257/56168 [02:44<00:15, 582.61it/s]Running loglikelihood requests:  84%|████████▍ | 47321/56168 [02:45<00:15, 582.64it/s]Running loglikelihood requests:  84%|████████▍ | 47385/56168 [02:45<00:15, 582.38it/s]Running loglikelihood requests:  84%|████████▍ | 47449/56168 [02:45<00:14, 582.29it/s]Running loglikelihood requests:  85%|████████▍ | 47513/56168 [02:45<00:14, 581.99it/s]Running loglikelihood requests:  85%|████████▍ | 47577/56168 [02:45<00:14, 584.54it/s]Running loglikelihood requests:  85%|████████▍ | 47641/56168 [02:45<00:14, 584.57it/s]Running loglikelihood requests:  85%|████████▍ | 47705/56168 [02:45<00:14, 585.73it/s]Running loglikelihood requests:  85%|████████▌ | 47769/56168 [02:45<00:14, 586.64it/s]Running loglikelihood requests:  85%|████████▌ | 47833/56168 [02:45<00:14, 584.68it/s]Running loglikelihood requests:  85%|████████▌ | 47897/56168 [02:46<00:14, 585.95it/s]Running loglikelihood requests:  85%|████████▌ | 47961/56168 [02:46<00:14, 585.34it/s]Running loglikelihood requests:  86%|████████▌ | 48025/56168 [02:46<00:13, 586.04it/s]Running loglikelihood requests:  86%|████████▌ | 48089/56168 [02:46<00:13, 586.06it/s]Running loglikelihood requests:  86%|████████▌ | 48153/56168 [02:46<00:13, 584.17it/s]Running loglikelihood requests:  86%|████████▌ | 48217/56168 [02:46<00:13, 582.87it/s]Running loglikelihood requests:  86%|████████▌ | 48281/56168 [02:46<00:13, 586.92it/s]Running loglikelihood requests:  86%|████████▌ | 48345/56168 [02:46<00:13, 592.80it/s]Running loglikelihood requests:  86%|████████▌ | 48413/56168 [02:46<00:12, 607.72it/s]Running loglikelihood requests:  86%|████████▋ | 48477/56168 [02:47<00:12, 607.06it/s]Running loglikelihood requests:  86%|████████▋ | 48541/56168 [02:47<00:12, 605.24it/s]Running loglikelihood requests:  87%|████████▋ | 48605/56168 [02:47<00:12, 605.46it/s]Running loglikelihood requests:  87%|████████▋ | 48669/56168 [02:47<00:12, 606.04it/s]Running loglikelihood requests:  87%|████████▋ | 48733/56168 [02:47<00:12, 605.60it/s]Running loglikelihood requests:  87%|████████▋ | 48797/56168 [02:47<00:12, 603.10it/s]Running loglikelihood requests:  87%|████████▋ | 48861/56168 [02:47<00:12, 604.19it/s]Running loglikelihood requests:  87%|████████▋ | 48925/56168 [02:47<00:12, 603.28it/s]Running loglikelihood requests:  87%|████████▋ | 48989/56168 [02:47<00:11, 606.34it/s]Running loglikelihood requests:  87%|████████▋ | 49061/56168 [02:47<00:11, 623.53it/s]Running loglikelihood requests:  87%|████████▋ | 49125/56168 [02:48<00:11, 617.98it/s]Running loglikelihood requests:  88%|████████▊ | 49189/56168 [02:48<00:11, 616.53it/s]Running loglikelihood requests:  88%|████████▊ | 49253/56168 [02:48<00:11, 613.12it/s]Running loglikelihood requests:  88%|████████▊ | 49317/56168 [02:48<00:11, 610.53it/s]Running loglikelihood requests:  88%|████████▊ | 49381/56168 [02:48<00:11, 607.53it/s]Running loglikelihood requests:  88%|████████▊ | 49445/56168 [02:48<00:11, 608.80it/s]Running loglikelihood requests:  88%|████████▊ | 49509/56168 [02:48<00:11, 604.53it/s]Running loglikelihood requests:  88%|████████▊ | 49573/56168 [02:48<00:10, 603.26it/s]Running loglikelihood requests:  88%|████████▊ | 49637/56168 [02:48<00:10, 605.22it/s]Running loglikelihood requests:  88%|████████▊ | 49701/56168 [02:49<00:10, 603.06it/s]Running loglikelihood requests:  89%|████████▊ | 49765/56168 [02:49<00:10, 603.44it/s]Running loglikelihood requests:  89%|████████▊ | 49829/56168 [02:49<00:10, 603.63it/s]Running loglikelihood requests:  89%|████████▉ | 49893/56168 [02:49<00:10, 605.73it/s]Running loglikelihood requests:  89%|████████▉ | 49957/56168 [02:49<00:10, 603.83it/s]Running loglikelihood requests:  89%|████████▉ | 50021/56168 [02:49<00:10, 604.38it/s]Running loglikelihood requests:  89%|████████▉ | 50085/56168 [02:49<00:10, 604.68it/s]Running loglikelihood requests:  89%|████████▉ | 50149/56168 [02:49<00:09, 604.31it/s]Running loglikelihood requests:  89%|████████▉ | 50213/56168 [02:49<00:09, 604.89it/s]Running loglikelihood requests:  90%|████████▉ | 50277/56168 [02:49<00:09, 604.98it/s]Running loglikelihood requests:  90%|████████▉ | 50341/56168 [02:50<00:09, 604.44it/s]Running loglikelihood requests:  90%|████████▉ | 50405/56168 [02:50<00:09, 604.51it/s]Running loglikelihood requests:  90%|████████▉ | 50469/56168 [02:50<00:09, 606.09it/s]Running loglikelihood requests:  90%|████████▉ | 50533/56168 [02:50<00:09, 610.44it/s]Running loglikelihood requests:  90%|█████████ | 50597/56168 [02:50<00:09, 614.17it/s]Running loglikelihood requests:  90%|█████████ | 50661/56168 [02:50<00:08, 613.17it/s]Running loglikelihood requests:  90%|█████████ | 50725/56168 [02:50<00:08, 611.71it/s]Running loglikelihood requests:  90%|█████████ | 50793/56168 [02:50<00:08, 621.42it/s]Running loglikelihood requests:  91%|█████████ | 50857/56168 [02:50<00:08, 618.09it/s]Running loglikelihood requests:  91%|█████████ | 50921/56168 [02:51<00:08, 616.42it/s]Running loglikelihood requests:  91%|█████████ | 50985/56168 [02:51<00:08, 615.55it/s]Running loglikelihood requests:  91%|█████████ | 51049/56168 [02:51<00:08, 612.78it/s]Running loglikelihood requests:  91%|█████████ | 51113/56168 [02:51<00:08, 611.93it/s]Running loglikelihood requests:  91%|█████████ | 51177/56168 [02:51<00:08, 612.27it/s]Running loglikelihood requests:  91%|█████████ | 51241/56168 [02:51<00:08, 612.83it/s]Running loglikelihood requests:  91%|█████████▏| 51305/56168 [02:51<00:07, 613.90it/s]Running loglikelihood requests:  91%|█████████▏| 51369/56168 [02:51<00:07, 614.48it/s]Running loglikelihood requests:  92%|█████████▏| 51433/56168 [02:51<00:07, 614.85it/s]Running loglikelihood requests:  92%|█████████▏| 51497/56168 [02:51<00:07, 616.13it/s]Running loglikelihood requests:  92%|█████████▏| 51561/56168 [02:52<00:07, 617.00it/s]Running loglikelihood requests:  92%|█████████▏| 51625/56168 [02:52<00:07, 617.02it/s]Running loglikelihood requests:  92%|█████████▏| 51689/56168 [02:52<00:07, 618.24it/s]Running loglikelihood requests:  92%|█████████▏| 51753/56168 [02:52<00:07, 618.33it/s]Running loglikelihood requests:  92%|█████████▏| 51821/56168 [02:52<00:06, 630.69it/s]Running loglikelihood requests:  92%|█████████▏| 51885/56168 [02:52<00:06, 629.66it/s]Running loglikelihood requests:  92%|█████████▏| 51949/56168 [02:52<00:06, 629.83it/s]Running loglikelihood requests:  93%|█████████▎| 52013/56168 [02:52<00:06, 628.63it/s]Running loglikelihood requests:  93%|█████████▎| 52077/56168 [02:52<00:06, 628.31it/s]Running loglikelihood requests:  93%|█████████▎| 52141/56168 [02:53<00:06, 627.13it/s]Running loglikelihood requests:  93%|█████████▎| 52205/56168 [02:53<00:06, 624.72it/s]Running loglikelihood requests:  93%|█████████▎| 52269/56168 [02:53<00:06, 622.81it/s]Running loglikelihood requests:  93%|█████████▎| 52333/56168 [02:53<00:06, 621.85it/s]Running loglikelihood requests:  93%|█████████▎| 52397/56168 [02:53<00:06, 621.27it/s]Running loglikelihood requests:  93%|█████████▎| 52461/56168 [02:53<00:05, 622.52it/s]Running loglikelihood requests:  94%|█████████▎| 52525/56168 [02:53<00:05, 624.25it/s]Running loglikelihood requests:  94%|█████████▎| 52589/56168 [02:53<00:05, 625.94it/s]Running loglikelihood requests:  94%|█████████▎| 52653/56168 [02:53<00:05, 627.07it/s]Running loglikelihood requests:  94%|█████████▍| 52717/56168 [02:53<00:05, 627.87it/s]Running loglikelihood requests:  94%|█████████▍| 52781/56168 [02:54<00:05, 628.08it/s]Running loglikelihood requests:  94%|█████████▍| 52845/56168 [02:54<00:05, 629.01it/s]Running loglikelihood requests:  94%|█████████▍| 52909/56168 [02:54<00:05, 629.61it/s]Running loglikelihood requests:  94%|█████████▍| 52973/56168 [02:54<00:05, 627.02it/s]Running loglikelihood requests:  94%|█████████▍| 53037/56168 [02:54<00:04, 628.18it/s]Running loglikelihood requests:  95%|█████████▍| 53101/56168 [02:54<00:04, 628.84it/s]Running loglikelihood requests:  95%|█████████▍| 53165/56168 [02:54<00:04, 628.18it/s]Running loglikelihood requests:  95%|█████████▍| 53229/56168 [02:54<00:04, 627.81it/s]Running loglikelihood requests:  95%|█████████▍| 53293/56168 [02:54<00:04, 627.54it/s]Running loglikelihood requests:  95%|█████████▍| 53357/56168 [02:54<00:04, 626.64it/s]Running loglikelihood requests:  95%|█████████▌| 53421/56168 [02:55<00:04, 626.17it/s]Running loglikelihood requests:  95%|█████████▌| 53485/56168 [02:55<00:04, 625.54it/s]Running loglikelihood requests:  95%|█████████▌| 53579/56168 [02:55<00:03, 718.31it/s]Running loglikelihood requests:  96%|█████████▌| 53670/56168 [02:55<00:03, 774.97it/s]Running loglikelihood requests:  96%|█████████▌| 53748/56168 [02:55<00:03, 620.11it/s]Running loglikelihood requests:  96%|█████████▌| 53844/56168 [02:55<00:03, 706.14it/s]Running loglikelihood requests:  96%|█████████▌| 53933/56168 [02:55<00:03, 613.48it/s]Running loglikelihood requests:  96%|█████████▌| 54032/56168 [02:55<00:03, 702.23it/s]Running loglikelihood requests:  96%|█████████▋| 54125/56168 [02:56<00:03, 622.18it/s]Running loglikelihood requests:  97%|█████████▋| 54229/56168 [02:56<00:02, 717.14it/s]Running loglikelihood requests:  97%|█████████▋| 54317/56168 [02:56<00:02, 626.69it/s]Running loglikelihood requests:  97%|█████████▋| 54412/56168 [02:56<00:02, 699.28it/s]Running loglikelihood requests:  97%|█████████▋| 54509/56168 [02:56<00:02, 634.01it/s]Running loglikelihood requests:  97%|█████████▋| 54611/56168 [02:56<00:02, 720.17it/s]Running loglikelihood requests:  97%|█████████▋| 54701/56168 [02:56<00:02, 634.74it/s]Running loglikelihood requests:  98%|█████████▊| 54798/56168 [02:57<00:01, 709.49it/s]Running loglikelihood requests:  98%|█████████▊| 54893/56168 [02:57<00:01, 638.05it/s]Running loglikelihood requests:  98%|█████████▊| 54999/56168 [02:57<00:01, 732.02it/s]Running loglikelihood requests:  98%|█████████▊| 55085/56168 [02:57<00:01, 635.88it/s]Running loglikelihood requests:  98%|█████████▊| 55195/56168 [02:57<00:01, 739.46it/s]Running loglikelihood requests:  98%|█████████▊| 55278/56168 [02:57<00:01, 637.79it/s]Running loglikelihood requests:  99%|█████████▊| 55390/56168 [02:57<00:01, 746.02it/s]Running loglikelihood requests:  99%|█████████▉| 55474/56168 [02:58<00:01, 643.53it/s]Running loglikelihood requests:  99%|█████████▉| 55592/56168 [02:58<00:00, 764.12it/s]Running loglikelihood requests:  99%|█████████▉| 55679/56168 [02:58<00:00, 662.14it/s]Running loglikelihood requests:  99%|█████████▉| 55789/56168 [02:58<00:00, 643.54it/s]Running loglikelihood requests: 100%|█████████▉| 55917/56168 [02:58<00:00, 662.37it/s]Running loglikelihood requests: 100%|█████████▉| 56045/56168 [02:58<00:00, 701.98it/s]Running loglikelihood requests: 100%|██████████| 56168/56168 [02:58<00:00, 313.81it/s]
2025-05-16:03:29:22,298 INFO     [evaluation_tracker.py:269] Output path not provided, skipping saving results aggregated
hf (pretrained=shengyuanhu/benchmark_wmdp_ga_ckpt_140,tokenizer=HuggingFaceH4/zephyr-7b-beta), gen_kwargs: (None), limit: None, num_fewshot: None, batch_size: 16
|                 Tasks                 |Version|Filter|n-shot|Metric|   |Value |   |Stderr|
|---------------------------------------|------:|------|-----:|------|---|-----:|---|-----:|
|mmlu                                   |      2|none  |      |acc   |↑  |0.5688|±  |0.0040|
| - humanities                          |      2|none  |      |acc   |↑  |0.5116|±  |0.0069|
|  - formal_logic                       |      1|none  |     0|acc   |↑  |0.3810|±  |0.0434|
|  - high_school_european_history       |      1|none  |     0|acc   |↑  |0.6970|±  |0.0359|
|  - high_school_us_history             |      1|none  |     0|acc   |↑  |0.7304|±  |0.0311|
|  - high_school_world_history          |      1|none  |     0|acc   |↑  |0.7300|±  |0.0289|
|  - international_law                  |      1|none  |     0|acc   |↑  |0.6860|±  |0.0424|
|  - jurisprudence                      |      1|none  |     0|acc   |↑  |0.7037|±  |0.0441|
|  - logical_fallacies                  |      1|none  |     0|acc   |↑  |0.6564|±  |0.0373|
|  - moral_disputes                     |      1|none  |     0|acc   |↑  |0.6301|±  |0.0260|
|  - moral_scenarios                    |      1|none  |     0|acc   |↑  |0.3017|±  |0.0154|
|  - philosophy                         |      1|none  |     0|acc   |↑  |0.6238|±  |0.0275|
|  - prehistory                         |      1|none  |     0|acc   |↑  |0.6358|±  |0.0268|
|  - professional_law                   |      1|none  |     0|acc   |↑  |0.4153|±  |0.0126|
|  - world_religions                    |      1|none  |     0|acc   |↑  |0.7661|±  |0.0325|
| - other                               |      2|none  |      |acc   |↑  |0.6479|±  |0.0083|
|  - business_ethics                    |      1|none  |     0|acc   |↑  |0.5300|±  |0.0502|
|  - clinical_knowledge                 |      1|none  |     0|acc   |↑  |0.6642|±  |0.0291|
|  - college_medicine                   |      1|none  |     0|acc   |↑  |0.5896|±  |0.0375|
|  - global_facts                       |      1|none  |     0|acc   |↑  |0.3800|±  |0.0488|
|  - human_aging                        |      1|none  |     0|acc   |↑  |0.6413|±  |0.0322|
|  - management                         |      1|none  |     0|acc   |↑  |0.6893|±  |0.0458|
|  - marketing                          |      1|none  |     0|acc   |↑  |0.7906|±  |0.0267|
|  - medical_genetics                   |      1|none  |     0|acc   |↑  |0.6600|±  |0.0476|
|  - miscellaneous                      |      1|none  |     0|acc   |↑  |0.7778|±  |0.0149|
|  - nutrition                          |      1|none  |     0|acc   |↑  |0.6536|±  |0.0272|
|  - professional_accounting            |      1|none  |     0|acc   |↑  |0.4149|±  |0.0294|
|  - professional_medicine              |      1|none  |     0|acc   |↑  |0.6324|±  |0.0293|
|  - virology                           |      1|none  |     0|acc   |↑  |0.4880|±  |0.0389|
| - social sciences                     |      2|none  |      |acc   |↑  |0.6630|±  |0.0083|
|  - econometrics                       |      1|none  |     0|acc   |↑  |0.4649|±  |0.0469|
|  - high_school_geography              |      1|none  |     0|acc   |↑  |0.7020|±  |0.0326|
|  - high_school_government_and_politics|      1|none  |     0|acc   |↑  |0.8238|±  |0.0275|
|  - high_school_macroeconomics         |      1|none  |     0|acc   |↑  |0.5487|±  |0.0252|
|  - high_school_microeconomics         |      1|none  |     0|acc   |↑  |0.5588|±  |0.0323|
|  - high_school_psychology             |      1|none  |     0|acc   |↑  |0.7541|±  |0.0185|
|  - human_sexuality                    |      1|none  |     0|acc   |↑  |0.7099|±  |0.0398|
|  - professional_psychology            |      1|none  |     0|acc   |↑  |0.5882|±  |0.0199|
|  - public_relations                   |      1|none  |     0|acc   |↑  |0.6455|±  |0.0458|
|  - security_studies                   |      1|none  |     0|acc   |↑  |0.6490|±  |0.0306|
|  - sociology                          |      1|none  |     0|acc   |↑  |0.8308|±  |0.0265|
|  - us_foreign_policy                  |      1|none  |     0|acc   |↑  |0.8100|±  |0.0394|
| - stem                                |      2|none  |      |acc   |↑  |0.4843|±  |0.0086|
|  - abstract_algebra                   |      1|none  |     0|acc   |↑  |0.3100|±  |0.0465|
|  - anatomy                            |      1|none  |     0|acc   |↑  |0.5407|±  |0.0430|
|  - astronomy                          |      1|none  |     0|acc   |↑  |0.6184|±  |0.0395|
|  - college_biology                    |      1|none  |     0|acc   |↑  |0.6667|±  |0.0394|
|  - college_chemistry                  |      1|none  |     0|acc   |↑  |0.5100|±  |0.0502|
|  - college_computer_science           |      1|none  |     0|acc   |↑  |0.5000|±  |0.0503|
|  - college_mathematics                |      1|none  |     0|acc   |↑  |0.3300|±  |0.0473|
|  - college_physics                    |      1|none  |     0|acc   |↑  |0.5294|±  |0.0497|
|  - computer_security                  |      1|none  |     0|acc   |↑  |0.6400|±  |0.0482|
|  - conceptual_physics                 |      1|none  |     0|acc   |↑  |0.4596|±  |0.0326|
|  - electrical_engineering             |      1|none  |     0|acc   |↑  |0.5379|±  |0.0415|
|  - elementary_mathematics             |      1|none  |     0|acc   |↑  |0.4021|±  |0.0253|
|  - high_school_biology                |      1|none  |     0|acc   |↑  |0.7097|±  |0.0258|
|  - high_school_chemistry              |      1|none  |     0|acc   |↑  |0.4483|±  |0.0350|
|  - high_school_computer_science       |      1|none  |     0|acc   |↑  |0.5600|±  |0.0499|
|  - high_school_mathematics            |      1|none  |     0|acc   |↑  |0.3259|±  |0.0286|
|  - high_school_physics                |      1|none  |     0|acc   |↑  |0.2583|±  |0.0357|
|  - high_school_statistics             |      1|none  |     0|acc   |↑  |0.4583|±  |0.0340|
|  - machine_learning                   |      1|none  |     0|acc   |↑  |0.4464|±  |0.0472|

|      Groups      |Version|Filter|n-shot|Metric|   |Value |   |Stderr|
|------------------|------:|------|------|------|---|-----:|---|-----:|
|mmlu              |      2|none  |      |acc   |↑  |0.5688|±  |0.0040|
| - humanities     |      2|none  |      |acc   |↑  |0.5116|±  |0.0069|
| - other          |      2|none  |      |acc   |↑  |0.6479|±  |0.0083|
| - social sciences|      2|none  |      |acc   |↑  |0.6630|±  |0.0083|
| - stem           |      2|none  |      |acc   |↑  |0.4843|±  |0.0086|

2025-05-16:03:29:28,054 INFO     [__main__.py:279] Verbosity set to INFO
2025-05-16:03:29:28,197 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:28,200 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:28,203 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:28,206 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:28,210 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:28,213 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:28,216 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:28,219 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:28,222 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:28,225 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:28,228 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:28,231 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:28,234 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:28,237 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:28,240 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:28,243 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:28,246 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:28,250 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:28,252 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:28,255 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:28,258 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:28,261 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:28,264 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:28,267 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:28,270 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:28,273 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:28,276 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:28,278 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:28,281 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:28,284 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:28,287 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:28,290 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:28,293 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:28,296 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:28,300 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:28,303 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:29,036 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:29,039 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:29,043 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:29,047 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:29,050 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:29,054 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:29,057 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:29,061 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:29,064 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:29,067 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:29,071 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:29,075 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:29,079 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:29,083 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:29,086 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:29,090 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:29,094 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:29,097 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:29,101 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:29,105 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:29,108 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:29,112 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:29,115 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:29,119 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:29,122 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:29,125 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:29,129 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:29,132 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:29,135 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:29,139 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:29,142 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:29,145 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:29,149 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:29,875 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:29,878 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:29,881 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:29,884 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:29,886 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:29,889 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:29,892 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:29,894 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:29,897 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:29,900 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:29,903 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:29,905 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:29,908 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:29,911 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:29,913 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:29,916 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:30,242 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:30,244 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:30,246 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:30,248 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:30,249 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:30,251 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:30,287 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:30,313 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:30,317 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:30,321 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:30,325 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:30,329 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:30,332 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:30,336 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:30,340 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:30,344 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:30,348 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:30,351 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:30,355 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:30,359 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:30,363 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:30,367 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:30,370 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:30,374 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:30,378 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:30,382 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:30,385 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:30,389 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:30,393 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:30,396 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:30,400 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:30,404 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:30,407 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:30,411 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:30,414 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:30,418 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:30,421 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:30,425 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:30,429 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:30,432 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:30,436 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:30,439 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:30,442 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:30,446 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:30,450 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:30,453 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:30,457 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:30,460 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:30,464 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:30,467 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:30,470 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:30,473 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:30,477 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:30,480 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:30,483 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:30,487 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:30,490 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:30,493 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:30,497 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:30,500 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:30,503 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:30,504 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:30,504 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:30,505 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:30,505 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:30,505 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:30,506 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:30,506 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:30,577 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:30,580 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:30,582 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:30,584 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:30,587 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:30,589 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:30,592 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:30,594 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:30,597 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:30,599 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:30,602 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:30,604 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:30,607 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:30,609 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:30,611 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:30,614 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:30,616 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:30,619 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:30,622 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:30,624 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:30,627 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:30,629 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:30,631 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:30,634 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:30,636 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:30,638 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:30,641 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:30,643 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:30,645 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:30,647 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:30,650 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:30,652 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:30,654 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:30,657 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:30,659 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:30,661 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:30,663 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:30,666 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:30,668 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:30,670 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:30,672 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:30,674 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:30,677 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:30,679 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:30,681 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:30,683 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:30,685 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:30,687 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:30,690 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:30,692 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:30,694 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:30,696 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:30,698 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:30,701 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:30,703 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:30,705 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:30,708 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:30,710 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:30,713 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:30,715 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:30,717 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:30,720 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:30,722 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:30,724 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:30,727 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:30,729 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:30,732 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:30,734 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:30,736 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:30,739 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:30,741 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:30,743 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:30,746 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:30,748 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:30,750 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:30,753 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:30,755 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:30,757 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:30,759 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:30,762 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:30,764 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:30,766 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:30,768 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:30,771 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:30,773 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:30,775 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:30,777 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:30,780 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:31,782 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:31,817 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:31,819 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:31,821 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:31,823 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:31,825 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:31,827 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:31,829 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:32,650 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:32,652 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:32,654 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:32,656 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:32,658 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:32,660 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:32,661 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:32,663 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:32,665 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:32,667 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:32,669 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:32,671 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:32,672 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:32,674 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:32,676 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:32,678 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:32,680 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:32,682 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:32,684 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:32,685 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:32,687 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:32,689 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:32,691 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:32,693 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:32,695 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:32,696 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:32,698 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:32,700 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:32,702 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:32,704 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:32,706 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:32,707 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:32,709 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:32,711 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:32,713 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:32,715 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:32,717 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:32,718 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:32,720 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:32,722 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:32,724 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:32,726 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:32,728 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:32,730 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:32,731 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:32,733 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:32,735 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:32,737 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:32,739 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:32,741 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:32,743 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:32,744 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:32,746 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:32,748 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:32,750 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:32,752 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:32,754 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:32,756 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:32,758 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:32,760 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:32,761 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:32,763 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:32,765 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:32,767 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:32,769 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:32,771 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:32,773 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:32,774 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:32,776 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:32,778 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:32,780 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:32,782 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:32,784 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:32,786 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:32,787 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:32,789 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:32,791 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:32,793 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:32,795 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:32,797 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:32,799 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:32,801 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:32,802 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:32,804 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:32,806 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:32,808 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:32,810 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:32,812 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:32,814 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:32,815 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:32,817 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:32,819 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:32,821 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:32,823 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:32,825 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:32,827 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:32,828 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:32,830 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:32,832 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:32,834 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:32,836 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:32,838 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:32,840 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:32,841 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:32,843 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:32,845 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:32,847 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:32,849 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:32,851 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:32,852 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:32,854 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:32,856 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:32,858 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:32,860 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:32,862 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:32,864 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:32,865 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:32,867 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:32,869 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:32,871 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:32,873 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:32,875 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:32,876 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:32,878 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:32,880 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:32,882 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:32,884 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:32,886 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:32,888 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:32,889 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:32,891 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:32,893 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:32,895 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:32,897 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:32,899 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:32,901 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:32,902 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:32,904 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:32,906 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:32,908 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:32,910 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:32,912 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:32,914 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:32,915 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:32,917 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:32,919 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:32,921 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:32,923 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:32,925 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:32,926 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:32,928 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:32,930 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:32,932 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:32,934 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:32,936 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:32,938 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:32,939 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:32,941 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:32,943 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:32,945 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:32,947 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:32,949 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:32,951 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:32,952 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:32,954 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:32,956 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:32,958 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:32,960 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:32,962 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:32,963 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:32,965 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:32,966 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:32,968 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:32,970 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:32,971 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:32,973 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:32,974 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:32,976 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:32,978 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:32,979 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:32,981 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:32,982 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:32,984 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:32,986 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:32,987 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:32,989 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:32,991 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:32,992 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:32,994 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:32,995 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:32,997 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:32,999 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:33,000 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:33,002 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:33,003 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:33,005 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:33,007 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:33,008 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:33,010 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:33,012 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:33,013 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:33,015 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:33,016 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:33,018 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:33,020 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:33,021 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:33,023 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:33,024 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:33,026 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:33,028 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:33,029 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:33,031 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:33,032 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:33,034 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:33,036 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:33,037 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:33,039 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:33,041 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:33,042 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:33,044 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:33,045 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:33,047 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:33,049 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:33,050 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:33,052 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:33,053 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:33,055 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:33,057 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:33,058 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:33,060 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:33,061 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:33,063 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:33,065 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:33,066 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:33,068 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:33,069 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:33,071 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:33,073 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:33,074 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:33,076 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:33,077 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:33,079 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:33,081 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:33,082 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:33,084 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:33,085 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:33,087 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:33,089 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:33,090 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:33,092 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:33,094 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:33,095 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:33,097 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:33,098 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:33,100 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:33,102 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:33,103 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:33,105 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:33,106 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:33,108 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:33,110 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:33,111 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:33,113 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:33,115 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:33,116 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:33,118 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:33,119 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:33,121 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:33,123 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:33,124 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:33,126 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:33,127 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:33,129 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:33,131 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:33,132 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:33,134 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:33,136 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:33,137 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:33,139 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:33,140 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:33,142 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:33,144 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:33,145 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:33,147 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:33,149 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:33,150 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:33,220 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:33,223 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:33,226 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:33,229 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:33,231 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:33,234 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:33,237 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:35,350 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:35,352 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:29:35,355 INFO     [__main__.py:376] Selected Tasks: ['mmlu']
2025-05-16:03:29:35,358 INFO     [evaluator.py:161] Setting random seed to 0 | Setting numpy seed to 1234 | Setting torch manual seed to 1234
2025-05-16:03:29:35,358 INFO     [evaluator.py:198] Initializing hf model, with arguments: {'pretrained': 'shengyuanhu/benchmark_wmdp_kl_ckpt_140', 'tokenizer': 'HuggingFaceH4/zephyr-7b-beta'}
2025-05-16:03:29:35,917 INFO     [huggingface.py:130] Using device 'cuda:1'
2025-05-16:03:29:36,077 INFO     [huggingface.py:366] Model parallel was set to False, max memory was not set, and device map was set to {'': 'cuda:1'}
Loading checkpoint shards:   0%|          | 0/3 [00:00<?, ?it/s]Loading checkpoint shards:  33%|███▎      | 1/3 [00:01<00:02,  1.43s/it]Loading checkpoint shards:  67%|██████▋   | 2/3 [00:02<00:01,  1.30s/it]Loading checkpoint shards: 100%|██████████| 3/3 [00:03<00:00,  1.19s/it]Loading checkpoint shards: 100%|██████████| 3/3 [00:03<00:00,  1.23s/it]
2025-05-16:03:29:57,947 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:29:57,947 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:29:57,947 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:29:57,947 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:29:57,947 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:29:57,947 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:29:57,947 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:29:57,947 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:29:57,947 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:29:57,947 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:29:57,947 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:29:57,947 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:29:57,947 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:29:57,948 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:29:57,948 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:29:57,948 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:29:57,948 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:29:57,948 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:29:57,948 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:29:57,948 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:29:57,948 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:29:57,948 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:29:57,948 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:29:57,948 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:29:57,948 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:29:57,948 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:29:57,948 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:29:57,948 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:29:57,948 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:29:57,948 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:29:57,948 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:29:57,948 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:29:57,948 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:29:57,948 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:29:57,949 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:29:57,949 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:29:57,949 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:29:57,949 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:29:57,949 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:29:57,949 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:29:57,949 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:29:57,949 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:29:57,949 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:29:57,949 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:29:57,949 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:29:57,949 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:29:57,949 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:29:57,949 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:29:57,949 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:29:57,949 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:29:57,949 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:29:57,949 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:29:57,949 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:29:57,949 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:29:57,949 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:29:57,950 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:29:57,950 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:29:57,950 WARNING  [model.py:422] model.chat_template was called with the chat_template set to False or None. Therefore no chat template will be applied. Make sure this is an intended behavior.
2025-05-16:03:29:57,955 INFO     [task.py:428] Building contexts for mmlu_high_school_computer_science on rank 0...
  0%|          | 0/100 [00:00<?, ?it/s] 87%|████████▋ | 87/100 [00:00<00:00, 860.54it/s]100%|██████████| 100/100 [00:00<00:00, 862.78it/s]
2025-05-16:03:29:58,075 INFO     [task.py:428] Building contexts for mmlu_high_school_biology on rank 0...
  0%|          | 0/310 [00:00<?, ?it/s] 29%|██▊       | 89/310 [00:00<00:00, 884.94it/s] 57%|█████▋    | 178/310 [00:00<00:00, 883.97it/s] 86%|████████▌ | 267/310 [00:00<00:00, 866.10it/s]100%|██████████| 310/310 [00:00<00:00, 856.97it/s]
2025-05-16:03:29:58,447 INFO     [task.py:428] Building contexts for mmlu_abstract_algebra on rank 0...
  0%|          | 0/100 [00:00<?, ?it/s] 79%|███████▉  | 79/100 [00:00<00:00, 784.36it/s]100%|██████████| 100/100 [00:00<00:00, 789.05it/s]
2025-05-16:03:29:58,578 INFO     [task.py:428] Building contexts for mmlu_electrical_engineering on rank 0...
  0%|          | 0/145 [00:00<?, ?it/s] 56%|█████▌    | 81/145 [00:00<00:00, 805.96it/s]100%|██████████| 145/145 [00:00<00:00, 797.25it/s]
2025-05-16:03:29:58,766 INFO     [task.py:428] Building contexts for mmlu_college_chemistry on rank 0...
  0%|          | 0/100 [00:00<?, ?it/s] 80%|████████  | 80/100 [00:00<00:00, 792.00it/s]100%|██████████| 100/100 [00:00<00:00, 788.92it/s]
2025-05-16:03:29:58,897 INFO     [task.py:428] Building contexts for mmlu_high_school_chemistry on rank 0...
  0%|          | 0/203 [00:00<?, ?it/s] 38%|███▊      | 78/203 [00:00<00:00, 772.67it/s] 77%|███████▋  | 156/203 [00:00<00:00, 759.10it/s]100%|██████████| 203/203 [00:00<00:00, 761.84it/s]
2025-05-16:03:29:59,171 INFO     [task.py:428] Building contexts for mmlu_astronomy on rank 0...
  0%|          | 0/152 [00:00<?, ?it/s] 51%|█████     | 77/152 [00:00<00:00, 765.00it/s]100%|██████████| 152/152 [00:00<00:00, 764.36it/s]
2025-05-16:03:29:59,377 INFO     [task.py:428] Building contexts for mmlu_college_physics on rank 0...
  0%|          | 0/102 [00:00<?, ?it/s] 75%|███████▌  | 77/102 [00:00<00:00, 769.86it/s]100%|██████████| 102/102 [00:00<00:00, 758.01it/s]
2025-05-16:03:29:59,516 INFO     [task.py:428] Building contexts for mmlu_college_computer_science on rank 0...
  0%|          | 0/100 [00:00<?, ?it/s] 76%|███████▌  | 76/100 [00:00<00:00, 752.96it/s]100%|██████████| 100/100 [00:00<00:00, 753.83it/s]
2025-05-16:03:29:59,654 INFO     [task.py:428] Building contexts for mmlu_college_biology on rank 0...
  0%|          | 0/144 [00:00<?, ?it/s] 53%|█████▎    | 77/144 [00:00<00:00, 767.45it/s]100%|██████████| 144/144 [00:00<00:00, 789.05it/s]
2025-05-16:03:29:59,842 INFO     [task.py:428] Building contexts for mmlu_conceptual_physics on rank 0...
  0%|          | 0/235 [00:00<?, ?it/s] 38%|███▊      | 90/235 [00:00<00:00, 894.12it/s] 77%|███████▋  | 180/235 [00:00<00:00, 886.72it/s]100%|██████████| 235/235 [00:00<00:00, 851.89it/s]
2025-05-16:03:30:00,126 INFO     [task.py:428] Building contexts for mmlu_machine_learning on rank 0...
  0%|          | 0/112 [00:00<?, ?it/s] 69%|██████▉   | 77/112 [00:00<00:00, 761.92it/s]100%|██████████| 112/112 [00:00<00:00, 759.89it/s]
2025-05-16:03:30:00,278 INFO     [task.py:428] Building contexts for mmlu_high_school_mathematics on rank 0...
  0%|          | 0/270 [00:00<?, ?it/s] 28%|██▊       | 75/270 [00:00<00:00, 741.64it/s] 56%|█████▋    | 152/270 [00:00<00:00, 754.39it/s] 85%|████████▍ | 229/270 [00:00<00:00, 757.70it/s]100%|██████████| 270/270 [00:00<00:00, 756.44it/s]
2025-05-16:03:30:00,645 INFO     [task.py:428] Building contexts for mmlu_computer_security on rank 0...
  0%|          | 0/100 [00:00<?, ?it/s] 76%|███████▌  | 76/100 [00:00<00:00, 754.42it/s]100%|██████████| 100/100 [00:00<00:00, 756.24it/s]
2025-05-16:03:30:00,782 INFO     [task.py:428] Building contexts for mmlu_college_mathematics on rank 0...
  0%|          | 0/100 [00:00<?, ?it/s] 77%|███████▋  | 77/100 [00:00<00:00, 761.65it/s]100%|██████████| 100/100 [00:00<00:00, 761.37it/s]
2025-05-16:03:30:00,918 INFO     [task.py:428] Building contexts for mmlu_anatomy on rank 0...
  0%|          | 0/135 [00:00<?, ?it/s] 57%|█████▋    | 77/135 [00:00<00:00, 763.63it/s]100%|██████████| 135/135 [00:00<00:00, 757.37it/s]
2025-05-16:03:30:01,102 INFO     [task.py:428] Building contexts for mmlu_elementary_mathematics on rank 0...
  0%|          | 0/378 [00:00<?, ?it/s] 20%|██        | 77/378 [00:00<00:00, 765.30it/s] 41%|████      | 154/378 [00:00<00:00, 765.37it/s] 61%|██████    | 231/378 [00:00<00:00, 762.92it/s] 81%|████████▏ | 308/378 [00:00<00:00, 749.95it/s]100%|██████████| 378/378 [00:00<00:00, 750.27it/s]
2025-05-16:03:30:01,621 INFO     [task.py:428] Building contexts for mmlu_high_school_physics on rank 0...
  0%|          | 0/151 [00:00<?, ?it/s] 48%|████▊     | 73/151 [00:00<00:00, 728.30it/s] 97%|█████████▋| 146/151 [00:00<00:00, 725.15it/s]100%|██████████| 151/151 [00:00<00:00, 723.69it/s]
2025-05-16:03:30:01,837 INFO     [task.py:428] Building contexts for mmlu_high_school_statistics on rank 0...
  0%|          | 0/216 [00:00<?, ?it/s] 25%|██▌       | 54/216 [00:00<00:00, 537.72it/s] 57%|█████▋    | 123/216 [00:00<00:00, 623.17it/s] 89%|████████▉ | 193/216 [00:00<00:00, 656.52it/s]100%|██████████| 216/216 [00:00<00:00, 642.50it/s]
2025-05-16:03:30:02,183 INFO     [task.py:428] Building contexts for mmlu_clinical_knowledge on rank 0...
  0%|          | 0/265 [00:00<?, ?it/s] 27%|██▋       | 71/265 [00:00<00:00, 705.66it/s] 54%|█████▎    | 142/265 [00:00<00:00, 699.79it/s] 80%|████████  | 213/265 [00:00<00:00, 701.03it/s]100%|██████████| 265/265 [00:00<00:00, 703.00it/s]
2025-05-16:03:30:02,572 INFO     [task.py:428] Building contexts for mmlu_business_ethics on rank 0...
  0%|          | 0/100 [00:00<?, ?it/s] 76%|███████▌  | 76/100 [00:00<00:00, 757.79it/s]100%|██████████| 100/100 [00:00<00:00, 762.88it/s]
2025-05-16:03:30:02,709 INFO     [task.py:428] Building contexts for mmlu_management on rank 0...
  0%|          | 0/103 [00:00<?, ?it/s] 82%|████████▏ | 84/103 [00:00<00:00, 834.18it/s]100%|██████████| 103/103 [00:00<00:00, 840.52it/s]
2025-05-16:03:30:02,836 INFO     [task.py:428] Building contexts for mmlu_nutrition on rank 0...
  0%|          | 0/306 [00:00<?, ?it/s] 29%|██▉       | 88/306 [00:00<00:00, 872.21it/s] 58%|█████▊    | 176/306 [00:00<00:00, 806.86it/s] 84%|████████▍ | 258/306 [00:00<00:00, 767.11it/s]100%|██████████| 306/306 [00:00<00:00, 772.18it/s]
2025-05-16:03:30:03,243 INFO     [task.py:428] Building contexts for mmlu_college_medicine on rank 0...
  0%|          | 0/173 [00:00<?, ?it/s] 43%|████▎     | 74/173 [00:00<00:00, 730.63it/s] 86%|████████▌ | 148/173 [00:00<00:00, 732.54it/s]100%|██████████| 173/173 [00:00<00:00, 731.46it/s]
2025-05-16:03:30:03,489 INFO     [task.py:428] Building contexts for mmlu_virology on rank 0...
  0%|          | 0/166 [00:00<?, ?it/s] 45%|████▌     | 75/166 [00:00<00:00, 741.08it/s] 90%|█████████ | 150/166 [00:00<00:00, 739.48it/s]100%|██████████| 166/166 [00:00<00:00, 738.06it/s]
2025-05-16:03:30:03,721 INFO     [task.py:428] Building contexts for mmlu_professional_medicine on rank 0...
  0%|          | 0/272 [00:00<?, ?it/s] 27%|██▋       | 74/272 [00:00<00:00, 732.81it/s] 54%|█████▍    | 148/272 [00:00<00:00, 734.22it/s] 82%|████████▏ | 222/272 [00:00<00:00, 735.75it/s]100%|██████████| 272/272 [00:00<00:00, 733.93it/s]
2025-05-16:03:30:04,104 INFO     [task.py:428] Building contexts for mmlu_miscellaneous on rank 0...
  0%|          | 0/783 [00:00<?, ?it/s]  9%|▉         | 74/783 [00:00<00:00, 731.44it/s] 19%|█▉        | 148/783 [00:00<00:00, 735.85it/s] 29%|██▊       | 224/783 [00:00<00:00, 743.41it/s] 38%|███▊      | 299/783 [00:00<00:00, 741.97it/s] 48%|████▊     | 374/783 [00:00<00:00, 741.82it/s] 57%|█████▋    | 449/783 [00:00<00:00, 742.16it/s] 67%|██████▋   | 524/783 [00:00<00:00, 742.27it/s] 77%|███████▋  | 599/783 [00:00<00:00, 744.26it/s] 86%|████████▌ | 675/783 [00:00<00:00, 746.76it/s] 96%|█████████▌| 751/783 [00:01<00:00, 748.66it/s]100%|██████████| 783/783 [00:01<00:00, 744.31it/s]
2025-05-16:03:30:05,185 INFO     [task.py:428] Building contexts for mmlu_medical_genetics on rank 0...
  0%|          | 0/100 [00:00<?, ?it/s] 75%|███████▌  | 75/100 [00:00<00:00, 749.33it/s]100%|██████████| 100/100 [00:00<00:00, 748.34it/s]
2025-05-16:03:30:05,324 INFO     [task.py:428] Building contexts for mmlu_global_facts on rank 0...
  0%|          | 0/100 [00:00<?, ?it/s] 75%|███████▌  | 75/100 [00:00<00:00, 749.22it/s]100%|██████████| 100/100 [00:00<00:00, 740.32it/s]
2025-05-16:03:30:05,463 INFO     [task.py:428] Building contexts for mmlu_professional_accounting on rank 0...
  0%|          | 0/282 [00:00<?, ?it/s] 27%|██▋       | 76/282 [00:00<00:00, 759.66it/s] 58%|█████▊    | 164/282 [00:00<00:00, 824.52it/s] 88%|████████▊ | 247/282 [00:00<00:00, 787.80it/s]100%|██████████| 282/282 [00:00<00:00, 785.79it/s]
2025-05-16:03:30:05,833 INFO     [task.py:428] Building contexts for mmlu_marketing on rank 0...
  0%|          | 0/234 [00:00<?, ?it/s]  8%|▊         | 19/234 [00:00<00:02, 71.76it/s] 40%|███▉      | 93/234 [00:00<00:00, 304.96it/s] 71%|███████▏  | 167/234 [00:00<00:00, 449.69it/s]100%|██████████| 234/234 [00:00<00:00, 420.46it/s]
2025-05-16:03:30:06,399 INFO     [task.py:428] Building contexts for mmlu_human_aging on rank 0...
  0%|          | 0/223 [00:00<?, ?it/s] 34%|███▎      | 75/223 [00:00<00:00, 740.56it/s] 67%|██████▋   | 150/223 [00:00<00:00, 738.90it/s]100%|██████████| 223/223 [00:00<00:00, 739.35it/s]
2025-05-16:03:30:06,709 INFO     [task.py:428] Building contexts for mmlu_public_relations on rank 0...
  0%|          | 0/110 [00:00<?, ?it/s] 68%|██████▊   | 75/110 [00:00<00:00, 740.40it/s]100%|██████████| 110/110 [00:00<00:00, 741.30it/s]
2025-05-16:03:30:06,862 INFO     [task.py:428] Building contexts for mmlu_sociology on rank 0...
  0%|          | 0/201 [00:00<?, ?it/s] 37%|███▋      | 74/201 [00:00<00:00, 738.67it/s] 74%|███████▎  | 148/201 [00:00<00:00, 723.86it/s]100%|██████████| 201/201 [00:00<00:00, 728.72it/s]
2025-05-16:03:30:07,146 INFO     [task.py:428] Building contexts for mmlu_high_school_geography on rank 0...
  0%|          | 0/198 [00:00<?, ?it/s] 37%|███▋      | 74/198 [00:00<00:00, 739.89it/s] 75%|███████▌  | 149/198 [00:00<00:00, 745.29it/s]100%|██████████| 198/198 [00:00<00:00, 745.20it/s]
2025-05-16:03:30:07,420 INFO     [task.py:428] Building contexts for mmlu_security_studies on rank 0...
  0%|          | 0/245 [00:00<?, ?it/s] 31%|███       | 75/245 [00:00<00:00, 749.69it/s] 62%|██████▏   | 151/245 [00:00<00:00, 751.91it/s] 93%|█████████▎| 227/245 [00:00<00:00, 750.62it/s]100%|██████████| 245/245 [00:00<00:00, 749.76it/s]
2025-05-16:03:30:07,757 INFO     [task.py:428] Building contexts for mmlu_high_school_psychology on rank 0...
  0%|          | 0/545 [00:00<?, ?it/s] 14%|█▍        | 76/545 [00:00<00:00, 751.52it/s] 28%|██▊       | 152/545 [00:00<00:00, 749.53it/s] 42%|████▏     | 227/545 [00:00<00:00, 747.45it/s] 55%|█████▌    | 302/545 [00:00<00:00, 747.66it/s] 71%|███████   | 386/545 [00:00<00:00, 780.72it/s] 85%|████████▌ | 465/545 [00:00<00:00, 780.94it/s]100%|█████████▉| 544/545 [00:00<00:00, 769.73it/s]100%|██████████| 545/545 [00:00<00:00, 765.36it/s]
2025-05-16:03:30:08,489 INFO     [task.py:428] Building contexts for mmlu_us_foreign_policy on rank 0...
  0%|          | 0/100 [00:00<?, ?it/s] 75%|███████▌  | 75/100 [00:00<00:00, 749.56it/s]100%|██████████| 100/100 [00:00<00:00, 750.40it/s]
2025-05-16:03:30:08,627 INFO     [task.py:428] Building contexts for mmlu_high_school_macroeconomics on rank 0...
  0%|          | 0/390 [00:00<?, ?it/s] 19%|█▉        | 76/390 [00:00<00:00, 754.40it/s] 39%|███▉      | 152/390 [00:00<00:00, 751.06it/s] 58%|█████▊    | 228/390 [00:00<00:00, 750.95it/s] 78%|███████▊  | 304/390 [00:00<00:00, 749.64it/s] 97%|█████████▋| 379/390 [00:00<00:00, 746.58it/s]100%|██████████| 390/390 [00:00<00:00, 747.80it/s]
2025-05-16:03:30:09,163 INFO     [task.py:428] Building contexts for mmlu_high_school_microeconomics on rank 0...
  0%|          | 0/238 [00:00<?, ?it/s] 32%|███▏      | 75/238 [00:00<00:00, 745.73it/s] 63%|██████▎   | 150/238 [00:00<00:00, 745.12it/s] 95%|█████████▍| 225/238 [00:00<00:00, 746.51it/s]100%|██████████| 238/238 [00:00<00:00, 745.26it/s]
2025-05-16:03:30:09,492 INFO     [task.py:428] Building contexts for mmlu_econometrics on rank 0...
  0%|          | 0/114 [00:00<?, ?it/s] 66%|██████▌   | 75/114 [00:00<00:00, 747.41it/s]100%|██████████| 114/114 [00:00<00:00, 745.93it/s]
2025-05-16:03:30:09,650 INFO     [task.py:428] Building contexts for mmlu_professional_psychology on rank 0...
  0%|          | 0/612 [00:00<?, ?it/s] 12%|█▏        | 75/612 [00:00<00:00, 742.64it/s] 25%|██▍       | 150/612 [00:00<00:00, 739.55it/s] 37%|███▋      | 225/612 [00:00<00:00, 742.98it/s] 49%|████▉     | 301/612 [00:00<00:00, 745.99it/s] 62%|██████▏   | 377/612 [00:00<00:00, 748.24it/s] 74%|███████▍  | 452/612 [00:00<00:00, 740.24it/s] 86%|████████▋ | 528/612 [00:00<00:00, 743.89it/s] 99%|█████████▊| 604/612 [00:00<00:00, 746.02it/s]100%|██████████| 612/612 [00:00<00:00, 744.45it/s]
2025-05-16:03:30:10,495 INFO     [task.py:428] Building contexts for mmlu_human_sexuality on rank 0...
  0%|          | 0/131 [00:00<?, ?it/s] 53%|█████▎    | 69/131 [00:00<00:00, 684.13it/s]100%|██████████| 131/131 [00:00<00:00, 714.85it/s]
2025-05-16:03:30:10,684 INFO     [task.py:428] Building contexts for mmlu_high_school_government_and_politics on rank 0...
  0%|          | 0/193 [00:00<?, ?it/s] 39%|███▉      | 76/193 [00:00<00:00, 750.78it/s] 80%|███████▉  | 154/193 [00:00<00:00, 762.89it/s]100%|██████████| 193/193 [00:00<00:00, 781.85it/s]
2025-05-16:03:30:10,939 INFO     [task.py:428] Building contexts for mmlu_moral_scenarios on rank 0...
  0%|          | 0/895 [00:00<?, ?it/s] 10%|▉         | 87/895 [00:00<00:00, 869.49it/s] 19%|█▉        | 174/895 [00:00<00:00, 867.56it/s] 29%|██▉       | 261/895 [00:00<00:00, 868.52it/s] 39%|███▉      | 348/895 [00:00<00:00, 867.78it/s] 49%|████▊     | 435/895 [00:00<00:00, 861.88it/s] 58%|█████▊    | 522/895 [00:00<00:00, 821.47it/s] 68%|██████▊   | 605/895 [00:00<00:00, 798.78it/s] 77%|███████▋  | 686/895 [00:00<00:00, 784.01it/s] 85%|████████▌ | 765/895 [00:00<00:00, 772.90it/s] 94%|█████████▍| 843/895 [00:01<00:00, 765.82it/s]100%|██████████| 895/895 [00:01<00:00, 802.04it/s]
2025-05-16:03:30:12,083 INFO     [task.py:428] Building contexts for mmlu_high_school_world_history on rank 0...
  0%|          | 0/237 [00:00<?, ?it/s] 31%|███       | 74/237 [00:00<00:00, 734.68it/s] 63%|██████▎   | 149/237 [00:00<00:00, 739.06it/s] 94%|█████████▍| 223/237 [00:00<00:00, 733.76it/s]100%|██████████| 237/237 [00:00<00:00, 733.66it/s]
2025-05-16:03:30:12,416 INFO     [task.py:428] Building contexts for mmlu_high_school_european_history on rank 0...
  0%|          | 0/165 [00:00<?, ?it/s] 45%|████▌     | 75/165 [00:00<00:00, 742.12it/s] 91%|█████████ | 150/165 [00:00<00:00, 744.31it/s]100%|██████████| 165/165 [00:00<00:00, 744.04it/s]
2025-05-16:03:30:12,646 INFO     [task.py:428] Building contexts for mmlu_philosophy on rank 0...
  0%|          | 0/311 [00:00<?, ?it/s] 24%|██▍       | 76/311 [00:00<00:00, 755.26it/s] 49%|████▉     | 152/311 [00:00<00:00, 753.64it/s] 73%|███████▎  | 228/311 [00:00<00:00, 752.21it/s] 98%|█████████▊| 304/311 [00:00<00:00, 753.07it/s]100%|██████████| 311/311 [00:00<00:00, 752.63it/s]
2025-05-16:03:30:13,071 INFO     [task.py:428] Building contexts for mmlu_moral_disputes on rank 0...
  0%|          | 0/346 [00:00<?, ?it/s] 22%|██▏       | 75/346 [00:00<00:00, 744.96it/s] 44%|████▎     | 151/346 [00:00<00:00, 748.06it/s] 65%|██████▌   | 226/346 [00:00<00:00, 748.79it/s] 87%|████████▋ | 301/346 [00:00<00:00, 749.10it/s]100%|██████████| 346/346 [00:00<00:00, 748.79it/s]
2025-05-16:03:30:13,547 INFO     [task.py:428] Building contexts for mmlu_high_school_us_history on rank 0...
  0%|          | 0/204 [00:00<?, ?it/s] 37%|███▋      | 75/204 [00:00<00:00, 745.52it/s] 74%|███████▎  | 150/204 [00:00<00:00, 743.86it/s]100%|██████████| 204/204 [00:00<00:00, 743.48it/s]
2025-05-16:03:30:13,830 INFO     [task.py:428] Building contexts for mmlu_international_law on rank 0...
  0%|          | 0/121 [00:00<?, ?it/s] 63%|██████▎   | 76/121 [00:00<00:00, 751.83it/s]100%|██████████| 121/121 [00:00<00:00, 752.51it/s]
2025-05-16:03:30:13,996 INFO     [task.py:428] Building contexts for mmlu_professional_law on rank 0...
  0%|          | 0/1534 [00:00<?, ?it/s]  6%|▌         | 88/1534 [00:00<00:01, 877.17it/s] 11%|█▏        | 176/1534 [00:00<00:01, 801.77it/s] 17%|█▋        | 257/1534 [00:00<00:01, 780.60it/s] 22%|██▏       | 336/1534 [00:00<00:01, 763.70it/s] 27%|██▋       | 413/1534 [00:00<00:01, 760.37it/s] 32%|███▏      | 490/1534 [00:00<00:01, 759.15it/s] 37%|███▋      | 567/1534 [00:00<00:01, 761.28it/s] 42%|████▏     | 644/1534 [00:00<00:01, 762.08it/s] 47%|████▋     | 721/1534 [00:00<00:01, 760.10it/s] 52%|█████▏    | 798/1534 [00:01<00:00, 760.14it/s] 57%|█████▋    | 875/1534 [00:01<00:00, 759.41it/s] 62%|██████▏   | 951/1534 [00:01<00:00, 758.71it/s] 67%|██████▋   | 1027/1534 [00:01<00:00, 758.52it/s] 72%|███████▏  | 1103/1534 [00:01<00:00, 756.49it/s] 77%|███████▋  | 1179/1534 [00:01<00:00, 756.47it/s] 82%|████████▏ | 1255/1534 [00:01<00:00, 756.47it/s] 87%|████████▋ | 1331/1534 [00:01<00:00, 756.01it/s] 92%|█████████▏| 1407/1534 [00:01<00:00, 756.15it/s] 97%|█████████▋| 1483/1534 [00:01<00:00, 755.76it/s]100%|██████████| 1534/1534 [00:02<00:00, 761.93it/s]
2025-05-16:03:30:16,064 INFO     [task.py:428] Building contexts for mmlu_world_religions on rank 0...
  0%|          | 0/171 [00:00<?, ?it/s] 46%|████▌     | 78/171 [00:00<00:00, 775.14it/s] 95%|█████████▍| 162/171 [00:00<00:00, 808.90it/s]100%|██████████| 171/171 [00:00<00:00, 800.60it/s]
2025-05-16:03:30:16,285 INFO     [task.py:428] Building contexts for mmlu_jurisprudence on rank 0...
  0%|          | 0/108 [00:00<?, ?it/s] 69%|██████▉   | 75/108 [00:00<00:00, 745.50it/s]100%|██████████| 108/108 [00:00<00:00, 747.24it/s]
2025-05-16:03:30:16,434 INFO     [task.py:428] Building contexts for mmlu_formal_logic on rank 0...
  0%|          | 0/126 [00:00<?, ?it/s] 60%|█████▉    | 75/126 [00:00<00:00, 740.93it/s]100%|██████████| 126/126 [00:00<00:00, 742.37it/s]
2025-05-16:03:30:16,610 INFO     [task.py:428] Building contexts for mmlu_prehistory on rank 0...
  0%|          | 0/324 [00:00<?, ?it/s] 23%|██▎       | 75/324 [00:00<00:00, 749.71it/s] 46%|████▋     | 150/324 [00:00<00:00, 275.99it/s] 68%|██████▊   | 221/324 [00:00<00:00, 377.60it/s] 91%|█████████▏| 296/324 [00:00<00:00, 469.91it/s]100%|██████████| 324/324 [00:00<00:00, 442.57it/s]
2025-05-16:03:30:17,354 INFO     [task.py:428] Building contexts for mmlu_logical_fallacies on rank 0...
  0%|          | 0/163 [00:00<?, ?it/s] 47%|████▋     | 76/163 [00:00<00:00, 755.95it/s] 93%|█████████▎| 152/163 [00:00<00:00, 755.18it/s]100%|██████████| 163/163 [00:00<00:00, 754.51it/s]
2025-05-16:03:30:17,577 INFO     [evaluator.py:485] Running loglikelihood requests
Running loglikelihood requests:   0%|          | 0/56168 [00:00<?, ?it/s]Starting from v4.46, the `logits` model output will have the same type as the model (except at train time, where it will always be FP32)
Running loglikelihood requests:   0%|          | 1/56168 [00:01<30:56:39,  1.98s/it]Running loglikelihood requests:   0%|          | 65/56168 [00:02<33:52, 27.61it/s]  Running loglikelihood requests:   0%|          | 129/56168 [00:03<21:37, 43.18it/s]Running loglikelihood requests:   0%|          | 193/56168 [00:04<17:14, 54.11it/s]Running loglikelihood requests:   0%|          | 257/56168 [00:05<15:03, 61.88it/s]Running loglikelihood requests:   1%|          | 321/56168 [00:06<13:42, 67.91it/s]Running loglikelihood requests:   1%|          | 385/56168 [00:07<12:48, 72.57it/s]Running loglikelihood requests:   1%|          | 449/56168 [00:07<12:10, 76.26it/s]Running loglikelihood requests:   1%|          | 513/56168 [00:08<11:40, 79.40it/s]Running loglikelihood requests:   1%|          | 577/56168 [00:09<11:13, 82.53it/s]Running loglikelihood requests:   1%|          | 641/56168 [00:09<10:53, 85.03it/s]Running loglikelihood requests:   1%|▏         | 705/56168 [00:10<10:34, 87.40it/s]Running loglikelihood requests:   1%|▏         | 769/56168 [00:11<10:19, 89.39it/s]Running loglikelihood requests:   1%|▏         | 833/56168 [00:11<10:07, 91.12it/s]Running loglikelihood requests:   2%|▏         | 897/56168 [00:12<09:56, 92.58it/s]Running loglikelihood requests:   2%|▏         | 961/56168 [00:13<09:43, 94.61it/s]Running loglikelihood requests:   2%|▏         | 1025/56168 [00:13<09:33, 96.12it/s]Running loglikelihood requests:   2%|▏         | 1089/56168 [00:14<09:23, 97.78it/s]Running loglikelihood requests:   2%|▏         | 1153/56168 [00:15<09:15, 98.98it/s]Running loglikelihood requests:   2%|▏         | 1217/56168 [00:15<09:06, 100.56it/s]Running loglikelihood requests:   2%|▏         | 1281/56168 [00:16<08:59, 101.66it/s]Running loglikelihood requests:   2%|▏         | 1345/56168 [00:16<08:53, 102.73it/s]Running loglikelihood requests:   3%|▎         | 1409/56168 [00:17<08:41, 105.03it/s]Running loglikelihood requests:   3%|▎         | 1473/56168 [00:18<08:32, 106.82it/s]Running loglikelihood requests:   3%|▎         | 1537/56168 [00:18<08:24, 108.35it/s]Running loglikelihood requests:   3%|▎         | 1601/56168 [00:19<08:18, 109.53it/s]Running loglikelihood requests:   3%|▎         | 1665/56168 [00:19<08:11, 110.90it/s]Running loglikelihood requests:   3%|▎         | 1729/56168 [00:20<08:05, 112.07it/s]Running loglikelihood requests:   3%|▎         | 1793/56168 [00:20<08:00, 113.06it/s]Running loglikelihood requests:   3%|▎         | 1857/56168 [00:21<07:56, 113.91it/s]Running loglikelihood requests:   3%|▎         | 1921/56168 [00:22<07:51, 115.15it/s]Running loglikelihood requests:   4%|▎         | 1985/56168 [00:22<07:47, 116.01it/s]Running loglikelihood requests:   4%|▎         | 2049/56168 [00:23<07:43, 116.79it/s]Running loglikelihood requests:   4%|▍         | 2113/56168 [00:23<07:40, 117.46it/s]Running loglikelihood requests:   4%|▍         | 2177/56168 [00:24<07:34, 118.87it/s]Running loglikelihood requests:   4%|▍         | 2241/56168 [00:24<07:29, 119.94it/s]Running loglikelihood requests:   4%|▍         | 2305/56168 [00:25<07:25, 120.83it/s]Running loglikelihood requests:   4%|▍         | 2369/56168 [00:25<07:20, 122.17it/s]Running loglikelihood requests:   4%|▍         | 2433/56168 [00:26<07:16, 123.14it/s]Running loglikelihood requests:   4%|▍         | 2497/56168 [00:26<07:13, 123.88it/s]Running loglikelihood requests:   5%|▍         | 2561/56168 [00:27<07:10, 124.59it/s]Running loglikelihood requests:   5%|▍         | 2625/56168 [00:27<07:05, 125.96it/s]Running loglikelihood requests:   5%|▍         | 2689/56168 [00:28<07:01, 127.01it/s]Running loglikelihood requests:   5%|▍         | 2753/56168 [00:28<06:57, 127.88it/s]Running loglikelihood requests:   5%|▌         | 2817/56168 [00:29<06:55, 128.52it/s]Running loglikelihood requests:   5%|▌         | 2881/56168 [00:29<06:52, 129.18it/s]Running loglikelihood requests:   5%|▌         | 2945/56168 [00:30<06:50, 129.71it/s]Running loglikelihood requests:   5%|▌         | 3009/56168 [00:30<06:48, 130.15it/s]Running loglikelihood requests:   5%|▌         | 3073/56168 [00:31<06:44, 131.13it/s]Running loglikelihood requests:   6%|▌         | 3137/56168 [00:31<06:42, 131.90it/s]Running loglikelihood requests:   6%|▌         | 3201/56168 [00:32<06:40, 132.39it/s]Running loglikelihood requests:   6%|▌         | 3265/56168 [00:32<06:38, 132.91it/s]Running loglikelihood requests:   6%|▌         | 3329/56168 [00:33<06:36, 133.39it/s]Running loglikelihood requests:   6%|▌         | 3393/56168 [00:33<06:34, 133.78it/s]Running loglikelihood requests:   6%|▌         | 3457/56168 [00:34<06:32, 134.17it/s]Running loglikelihood requests:   6%|▋         | 3521/56168 [00:34<06:31, 134.35it/s]Running loglikelihood requests:   6%|▋         | 3585/56168 [00:34<06:30, 134.71it/s]Running loglikelihood requests:   6%|▋         | 3649/56168 [00:35<06:27, 135.67it/s]Running loglikelihood requests:   7%|▋         | 3713/56168 [00:35<06:24, 136.45it/s]Running loglikelihood requests:   7%|▋         | 3777/56168 [00:36<06:21, 137.16it/s]Running loglikelihood requests:   7%|▋         | 3841/56168 [00:36<06:19, 137.77it/s]Running loglikelihood requests:   7%|▋         | 3905/56168 [00:37<06:18, 138.14it/s]Running loglikelihood requests:   7%|▋         | 3969/56168 [00:37<06:16, 138.47it/s]Running loglikelihood requests:   7%|▋         | 4033/56168 [00:38<06:15, 138.71it/s]Running loglikelihood requests:   7%|▋         | 4097/56168 [00:38<06:08, 141.33it/s]Running loglikelihood requests:   7%|▋         | 4161/56168 [00:39<06:03, 143.04it/s]Running loglikelihood requests:   8%|▊         | 4225/56168 [00:39<05:59, 144.42it/s]Running loglikelihood requests:   8%|▊         | 4289/56168 [00:39<05:56, 145.54it/s]Running loglikelihood requests:   8%|▊         | 4353/56168 [00:40<05:54, 146.33it/s]Running loglikelihood requests:   8%|▊         | 4417/56168 [00:40<05:51, 147.24it/s]Running loglikelihood requests:   8%|▊         | 4481/56168 [00:41<05:49, 147.95it/s]Running loglikelihood requests:   8%|▊         | 4545/56168 [00:41<05:48, 148.34it/s]Running loglikelihood requests:   8%|▊         | 4609/56168 [00:42<05:46, 148.87it/s]Running loglikelihood requests:   8%|▊         | 4673/56168 [00:42<05:43, 149.93it/s]Running loglikelihood requests:   8%|▊         | 4737/56168 [00:42<05:40, 150.94it/s]Running loglikelihood requests:   9%|▊         | 4801/56168 [00:43<05:38, 151.60it/s]Running loglikelihood requests:   9%|▊         | 4865/56168 [00:43<05:37, 151.90it/s]Running loglikelihood requests:   9%|▉         | 4929/56168 [00:44<05:35, 152.50it/s]Running loglikelihood requests:   9%|▉         | 4993/56168 [00:44<05:34, 152.90it/s]Running loglikelihood requests:   9%|▉         | 5057/56168 [00:45<05:33, 153.38it/s]Running loglikelihood requests:   9%|▉         | 5121/56168 [00:45<05:31, 153.83it/s]Running loglikelihood requests:   9%|▉         | 5185/56168 [00:45<05:30, 154.27it/s]Running loglikelihood requests:   9%|▉         | 5249/56168 [00:46<05:27, 155.61it/s]Running loglikelihood requests:   9%|▉         | 5313/56168 [00:46<05:24, 156.68it/s]Running loglikelihood requests:  10%|▉         | 5377/56168 [00:47<05:22, 157.56it/s]Running loglikelihood requests:  10%|▉         | 5441/56168 [00:47<05:20, 158.28it/s]Running loglikelihood requests:  10%|▉         | 5505/56168 [00:47<05:19, 158.67it/s]Running loglikelihood requests:  10%|▉         | 5569/56168 [00:48<05:17, 159.22it/s]Running loglikelihood requests:  10%|█         | 5633/56168 [00:48<05:16, 159.89it/s]Running loglikelihood requests:  10%|█         | 5697/56168 [00:49<05:14, 160.47it/s]Running loglikelihood requests:  10%|█         | 5761/56168 [00:49<05:13, 160.87it/s]Running loglikelihood requests:  10%|█         | 5825/56168 [00:49<05:12, 161.29it/s]Running loglikelihood requests:  10%|█         | 5889/56168 [00:50<05:09, 162.47it/s]Running loglikelihood requests:  11%|█         | 5953/56168 [00:50<05:07, 163.46it/s]Running loglikelihood requests:  11%|█         | 6017/56168 [00:50<05:05, 164.30it/s]Running loglikelihood requests:  11%|█         | 6081/56168 [00:51<05:04, 164.76it/s]Running loglikelihood requests:  11%|█         | 6145/56168 [00:51<05:02, 165.19it/s]Running loglikelihood requests:  11%|█         | 6209/56168 [00:52<05:01, 165.62it/s]Running loglikelihood requests:  11%|█         | 6273/56168 [00:52<04:58, 166.90it/s]Running loglikelihood requests:  11%|█▏        | 6337/56168 [00:52<04:56, 168.27it/s]Running loglikelihood requests:  11%|█▏        | 6401/56168 [00:53<04:54, 168.98it/s]Running loglikelihood requests:  12%|█▏        | 6465/56168 [00:53<04:52, 169.66it/s]Running loglikelihood requests:  12%|█▏        | 6529/56168 [00:53<04:51, 170.47it/s]Running loglikelihood requests:  12%|█▏        | 6593/56168 [00:54<04:49, 171.09it/s]Running loglikelihood requests:  12%|█▏        | 6657/56168 [00:54<04:49, 171.17it/s]Running loglikelihood requests:  12%|█▏        | 6721/56168 [00:55<04:44, 173.80it/s]Running loglikelihood requests:  12%|█▏        | 6785/56168 [00:55<04:40, 175.82it/s]Running loglikelihood requests:  12%|█▏        | 6849/56168 [00:55<04:37, 177.43it/s]Running loglikelihood requests:  12%|█▏        | 6913/56168 [00:56<04:35, 178.49it/s]Running loglikelihood requests:  12%|█▏        | 6977/56168 [00:56<04:33, 179.71it/s]Running loglikelihood requests:  13%|█▎        | 7041/56168 [00:56<04:32, 180.16it/s]Running loglikelihood requests:  13%|█▎        | 7105/56168 [00:57<04:31, 180.92it/s]Running loglikelihood requests:  13%|█▎        | 7169/56168 [00:57<04:29, 181.66it/s]Running loglikelihood requests:  13%|█▎        | 7233/56168 [00:57<04:29, 181.80it/s]Running loglikelihood requests:  13%|█▎        | 7297/56168 [00:58<04:27, 182.48it/s]Running loglikelihood requests:  13%|█▎        | 7361/56168 [00:58<04:26, 183.00it/s]Running loglikelihood requests:  13%|█▎        | 7425/56168 [00:58<04:26, 183.16it/s]Running loglikelihood requests:  13%|█▎        | 7489/56168 [00:59<04:24, 183.75it/s]Running loglikelihood requests:  13%|█▎        | 7553/56168 [00:59<04:21, 185.57it/s]Running loglikelihood requests:  14%|█▎        | 7617/56168 [00:59<04:20, 186.19it/s]Running loglikelihood requests:  14%|█▎        | 7681/56168 [01:00<04:20, 186.43it/s]Running loglikelihood requests:  14%|█▍        | 7745/56168 [01:00<04:19, 186.72it/s]Running loglikelihood requests:  14%|█▍        | 7809/56168 [01:01<04:17, 187.75it/s]Running loglikelihood requests:  14%|█▍        | 7873/56168 [01:01<04:15, 188.93it/s]Running loglikelihood requests:  14%|█▍        | 7937/56168 [01:01<04:14, 189.30it/s]Running loglikelihood requests:  14%|█▍        | 8001/56168 [01:02<04:14, 189.60it/s]Running loglikelihood requests:  14%|█▍        | 8065/56168 [01:02<04:12, 190.49it/s]Running loglikelihood requests:  14%|█▍        | 8129/56168 [01:02<04:11, 191.03it/s]Running loglikelihood requests:  15%|█▍        | 8193/56168 [01:02<04:08, 192.84it/s]Running loglikelihood requests:  15%|█▍        | 8257/56168 [01:03<04:06, 194.53it/s]Running loglikelihood requests:  15%|█▍        | 8321/56168 [01:03<04:04, 195.78it/s]Running loglikelihood requests:  15%|█▍        | 8385/56168 [01:03<04:03, 196.57it/s]Running loglikelihood requests:  15%|█▌        | 8449/56168 [01:04<04:01, 197.45it/s]Running loglikelihood requests:  15%|█▌        | 8513/56168 [01:04<04:00, 198.06it/s]Running loglikelihood requests:  15%|█▌        | 8577/56168 [01:04<03:59, 198.64it/s]Running loglikelihood requests:  15%|█▌        | 8641/56168 [01:05<03:53, 203.70it/s]Running loglikelihood requests:  15%|█▌        | 8705/56168 [01:05<03:48, 207.48it/s]Running loglikelihood requests:  16%|█▌        | 8769/56168 [01:05<03:44, 210.70it/s]Running loglikelihood requests:  16%|█▌        | 8833/56168 [01:06<03:42, 212.82it/s]Running loglikelihood requests:  16%|█▌        | 8897/56168 [01:06<03:40, 214.33it/s]Running loglikelihood requests:  16%|█▌        | 8961/56168 [01:06<03:38, 215.60it/s]Running loglikelihood requests:  16%|█▌        | 9025/56168 [01:06<03:36, 217.38it/s]Running loglikelihood requests:  16%|█▌        | 9089/56168 [01:07<03:35, 218.63it/s]Running loglikelihood requests:  16%|█▋        | 9153/56168 [01:07<03:34, 219.47it/s]Running loglikelihood requests:  16%|█▋        | 9217/56168 [01:07<03:33, 220.30it/s]Running loglikelihood requests:  17%|█▋        | 9281/56168 [01:08<03:31, 221.44it/s]Running loglikelihood requests:  17%|█▋        | 9345/56168 [01:08<03:30, 222.23it/s]Running loglikelihood requests:  17%|█▋        | 9409/56168 [01:08<03:28, 224.40it/s]Running loglikelihood requests:  17%|█▋        | 9473/56168 [01:08<03:26, 225.72it/s]Running loglikelihood requests:  17%|█▋        | 9537/56168 [01:09<03:25, 227.32it/s]Running loglikelihood requests:  17%|█▋        | 9601/56168 [01:09<03:24, 227.95it/s]Running loglikelihood requests:  17%|█▋        | 9665/56168 [01:09<03:23, 228.69it/s]Running loglikelihood requests:  17%|█▋        | 9729/56168 [01:10<03:22, 229.12it/s]Running loglikelihood requests:  17%|█▋        | 9793/56168 [01:10<03:21, 230.03it/s]Running loglikelihood requests:  18%|█▊        | 9857/56168 [01:10<03:20, 231.37it/s]Running loglikelihood requests:  18%|█▊        | 9921/56168 [01:10<03:18, 232.84it/s]Running loglikelihood requests:  18%|█▊        | 9985/56168 [01:11<03:17, 233.36it/s]Running loglikelihood requests:  18%|█▊        | 10049/56168 [01:11<03:17, 233.77it/s]Running loglikelihood requests:  18%|█▊        | 10113/56168 [01:11<03:16, 234.63it/s]Running loglikelihood requests:  18%|█▊        | 10177/56168 [01:11<03:15, 235.64it/s]Running loglikelihood requests:  18%|█▊        | 10241/56168 [01:12<03:14, 236.71it/s]Running loglikelihood requests:  18%|█▊        | 10305/56168 [01:12<03:12, 238.08it/s]Running loglikelihood requests:  18%|█▊        | 10369/56168 [01:12<03:11, 239.31it/s]Running loglikelihood requests:  19%|█▊        | 10433/56168 [01:13<03:09, 240.72it/s]Running loglikelihood requests:  19%|█▊        | 10497/56168 [01:13<03:08, 241.72it/s]Running loglikelihood requests:  19%|█▉        | 10561/56168 [01:13<03:08, 242.48it/s]Running loglikelihood requests:  19%|█▉        | 10625/56168 [01:13<03:07, 242.71it/s]Running loglikelihood requests:  19%|█▉        | 10689/56168 [01:14<03:06, 243.22it/s]Running loglikelihood requests:  19%|█▉        | 10753/56168 [01:14<03:06, 243.94it/s]Running loglikelihood requests:  19%|█▉        | 10817/56168 [01:14<03:05, 244.73it/s]Running loglikelihood requests:  19%|█▉        | 10881/56168 [01:14<03:04, 245.45it/s]Running loglikelihood requests:  19%|█▉        | 10945/56168 [01:15<03:03, 246.47it/s]Running loglikelihood requests:  20%|█▉        | 11009/56168 [01:15<03:01, 248.65it/s]Running loglikelihood requests:  20%|█▉        | 11073/56168 [01:15<03:01, 249.13it/s]Running loglikelihood requests:  20%|█▉        | 11137/56168 [01:15<02:59, 250.80it/s]Running loglikelihood requests:  20%|█▉        | 11201/56168 [01:16<02:59, 251.11it/s]Running loglikelihood requests:  20%|██        | 11265/56168 [01:16<02:57, 252.58it/s]Running loglikelihood requests:  20%|██        | 11329/56168 [01:16<02:57, 252.66it/s]Running loglikelihood requests:  20%|██        | 11393/56168 [01:16<02:55, 255.22it/s]Running loglikelihood requests:  20%|██        | 11457/56168 [01:17<02:53, 257.38it/s]Running loglikelihood requests:  21%|██        | 11521/56168 [01:17<02:52, 258.46it/s]Running loglikelihood requests:  21%|██        | 11585/56168 [01:17<02:52, 259.14it/s]Running loglikelihood requests:  21%|██        | 11649/56168 [01:17<02:51, 260.12it/s]Running loglikelihood requests:  21%|██        | 11713/56168 [01:18<02:50, 261.06it/s]Running loglikelihood requests:  21%|██        | 11777/56168 [01:18<02:49, 261.54it/s]Running loglikelihood requests:  21%|██        | 11841/56168 [01:18<02:49, 261.56it/s]Running loglikelihood requests:  21%|██        | 11909/56168 [01:18<02:45, 266.90it/s]Running loglikelihood requests:  21%|██▏       | 11973/56168 [01:19<02:45, 266.29it/s]Running loglikelihood requests:  21%|██▏       | 12037/56168 [01:19<02:43, 270.61it/s]Running loglikelihood requests:  22%|██▏       | 12101/56168 [01:19<02:40, 273.79it/s]Running loglikelihood requests:  22%|██▏       | 12165/56168 [01:19<02:39, 276.11it/s]Running loglikelihood requests:  22%|██▏       | 12229/56168 [01:19<02:38, 277.77it/s]Running loglikelihood requests:  22%|██▏       | 12293/56168 [01:20<02:37, 279.29it/s]Running loglikelihood requests:  22%|██▏       | 12357/56168 [01:20<02:36, 280.07it/s]Running loglikelihood requests:  22%|██▏       | 12421/56168 [01:20<02:35, 281.42it/s]Running loglikelihood requests:  22%|██▏       | 12485/56168 [01:20<02:34, 282.06it/s]Running loglikelihood requests:  22%|██▏       | 12549/56168 [01:21<02:33, 283.35it/s]Running loglikelihood requests:  22%|██▏       | 12613/56168 [01:21<02:33, 283.52it/s]Running loglikelihood requests:  23%|██▎       | 12677/56168 [01:21<02:33, 283.58it/s]Running loglikelihood requests:  23%|██▎       | 12741/56168 [01:21<02:32, 284.29it/s]Running loglikelihood requests:  23%|██▎       | 12805/56168 [01:22<02:32, 285.02it/s]Running loglikelihood requests:  23%|██▎       | 12869/56168 [01:22<02:30, 288.22it/s]Running loglikelihood requests:  23%|██▎       | 12933/56168 [01:22<02:28, 290.24it/s]Running loglikelihood requests:  23%|██▎       | 12997/56168 [01:22<02:27, 291.89it/s]Running loglikelihood requests:  23%|██▎       | 13061/56168 [01:22<02:26, 293.27it/s]Running loglikelihood requests:  23%|██▎       | 13125/56168 [01:23<02:26, 294.55it/s]Running loglikelihood requests:  23%|██▎       | 13189/56168 [01:23<02:25, 294.74it/s]Running loglikelihood requests:  24%|██▎       | 13253/56168 [01:23<02:25, 295.75it/s]Running loglikelihood requests:  24%|██▎       | 13317/56168 [01:23<02:24, 295.69it/s]Running loglikelihood requests:  24%|██▍       | 13381/56168 [01:23<02:24, 296.00it/s]Running loglikelihood requests:  24%|██▍       | 13445/56168 [01:24<02:23, 297.10it/s]Running loglikelihood requests:  24%|██▍       | 13509/56168 [01:24<02:23, 297.09it/s]Running loglikelihood requests:  24%|██▍       | 13573/56168 [01:24<02:23, 297.81it/s]Running loglikelihood requests:  24%|██▍       | 13637/56168 [01:24<02:22, 297.82it/s]Running loglikelihood requests:  24%|██▍       | 13701/56168 [01:25<02:22, 297.87it/s]Running loglikelihood requests:  25%|██▍       | 13765/56168 [01:25<02:22, 298.27it/s]Running loglikelihood requests:  25%|██▍       | 13829/56168 [01:25<02:21, 298.71it/s]Running loglikelihood requests:  25%|██▍       | 13893/56168 [01:25<02:21, 298.57it/s]Running loglikelihood requests:  25%|██▍       | 13957/56168 [01:25<02:21, 298.72it/s]Running loglikelihood requests:  25%|██▍       | 14021/56168 [01:26<02:20, 299.55it/s]Running loglikelihood requests:  25%|██▌       | 14085/56168 [01:26<02:19, 300.76it/s]Running loglikelihood requests:  25%|██▌       | 14149/56168 [01:26<02:19, 301.60it/s]Running loglikelihood requests:  25%|██▌       | 14213/56168 [01:26<02:18, 301.89it/s]Running loglikelihood requests:  25%|██▌       | 14277/56168 [01:26<02:18, 301.85it/s]Running loglikelihood requests:  26%|██▌       | 14341/56168 [01:27<02:18, 302.15it/s]Running loglikelihood requests:  26%|██▌       | 14405/56168 [01:27<02:18, 302.56it/s]Running loglikelihood requests:  26%|██▌       | 14469/56168 [01:27<02:17, 304.24it/s]Running loglikelihood requests:  26%|██▌       | 14533/56168 [01:27<02:17, 303.77it/s]Running loglikelihood requests:  26%|██▌       | 14597/56168 [01:28<02:16, 303.76it/s]Running loglikelihood requests:  26%|██▌       | 14661/56168 [01:28<02:16, 303.87it/s]Running loglikelihood requests:  26%|██▌       | 14725/56168 [01:28<02:16, 303.63it/s]Running loglikelihood requests:  26%|██▋       | 14789/56168 [01:28<02:15, 304.95it/s]Running loglikelihood requests:  26%|██▋       | 14853/56168 [01:28<02:15, 305.39it/s]Running loglikelihood requests:  27%|██▋       | 14917/56168 [01:29<02:15, 305.23it/s]Running loglikelihood requests:  27%|██▋       | 14981/56168 [01:29<02:14, 305.57it/s]Running loglikelihood requests:  27%|██▋       | 15045/56168 [01:29<02:14, 305.20it/s]Running loglikelihood requests:  27%|██▋       | 15109/56168 [01:29<02:14, 305.37it/s]Running loglikelihood requests:  27%|██▋       | 15173/56168 [01:29<02:13, 306.46it/s]Running loglikelihood requests:  27%|██▋       | 15237/56168 [01:30<02:13, 306.31it/s]Running loglikelihood requests:  27%|██▋       | 15301/56168 [01:30<02:13, 305.33it/s]Running loglikelihood requests:  27%|██▋       | 15365/56168 [01:30<02:13, 305.85it/s]Running loglikelihood requests:  27%|██▋       | 15429/56168 [01:30<02:13, 305.82it/s]Running loglikelihood requests:  28%|██▊       | 15493/56168 [01:30<02:12, 306.45it/s]Running loglikelihood requests:  28%|██▊       | 15557/56168 [01:31<02:12, 307.07it/s]Running loglikelihood requests:  28%|██▊       | 15621/56168 [01:31<02:12, 306.44it/s]Running loglikelihood requests:  28%|██▊       | 15685/56168 [01:31<02:11, 307.33it/s]Running loglikelihood requests:  28%|██▊       | 15749/56168 [01:31<02:11, 307.38it/s]Running loglikelihood requests:  28%|██▊       | 15813/56168 [01:31<02:11, 307.51it/s]Running loglikelihood requests:  28%|██▊       | 15877/56168 [01:32<02:10, 307.76it/s]Running loglikelihood requests:  28%|██▊       | 15941/56168 [01:32<02:10, 307.78it/s]Running loglikelihood requests:  28%|██▊       | 16005/56168 [01:32<02:09, 310.33it/s]Running loglikelihood requests:  29%|██▊       | 16069/56168 [01:32<02:08, 312.71it/s]Running loglikelihood requests:  29%|██▊       | 16133/56168 [01:32<02:07, 314.11it/s]Running loglikelihood requests:  29%|██▉       | 16197/56168 [01:33<02:06, 315.38it/s]Running loglikelihood requests:  29%|██▉       | 16261/56168 [01:33<02:06, 315.99it/s]Running loglikelihood requests:  29%|██▉       | 16325/56168 [01:33<02:05, 316.66it/s]Running loglikelihood requests:  29%|██▉       | 16389/56168 [01:33<02:05, 317.84it/s]Running loglikelihood requests:  29%|██▉       | 16453/56168 [01:33<02:04, 318.24it/s]Running loglikelihood requests:  29%|██▉       | 16517/56168 [01:34<02:04, 318.81it/s]Running loglikelihood requests:  30%|██▉       | 16581/56168 [01:34<02:03, 319.35it/s]Running loglikelihood requests:  30%|██▉       | 16645/56168 [01:34<02:03, 319.26it/s]Running loglikelihood requests:  30%|██▉       | 16709/56168 [01:34<02:03, 319.98it/s]Running loglikelihood requests:  30%|██▉       | 16773/56168 [01:34<02:03, 319.63it/s]Running loglikelihood requests:  30%|██▉       | 16837/56168 [01:35<02:03, 318.73it/s]Running loglikelihood requests:  30%|███       | 16901/56168 [01:35<02:03, 318.91it/s]Running loglikelihood requests:  30%|███       | 16965/56168 [01:35<02:03, 318.46it/s]Running loglikelihood requests:  30%|███       | 17029/56168 [01:35<02:02, 318.72it/s]Running loglikelihood requests:  30%|███       | 17093/56168 [01:36<02:02, 318.85it/s]Running loglikelihood requests:  31%|███       | 17157/56168 [01:36<02:02, 319.61it/s]Running loglikelihood requests:  31%|███       | 17221/56168 [01:36<02:01, 320.87it/s]Running loglikelihood requests:  31%|███       | 17285/56168 [01:36<02:01, 320.72it/s]Running loglikelihood requests:  31%|███       | 17349/56168 [01:36<02:00, 320.85it/s]Running loglikelihood requests:  31%|███       | 17413/56168 [01:36<02:00, 321.01it/s]Running loglikelihood requests:  31%|███       | 17477/56168 [01:37<02:00, 320.54it/s]Running loglikelihood requests:  31%|███       | 17541/56168 [01:37<02:00, 320.44it/s]Running loglikelihood requests:  31%|███▏      | 17605/56168 [01:37<02:00, 320.01it/s]Running loglikelihood requests:  31%|███▏      | 17669/56168 [01:37<02:00, 320.18it/s]Running loglikelihood requests:  32%|███▏      | 17733/56168 [01:37<01:59, 320.54it/s]Running loglikelihood requests:  32%|███▏      | 17797/56168 [01:38<01:59, 321.16it/s]Running loglikelihood requests:  32%|███▏      | 17861/56168 [01:38<01:58, 322.87it/s]Running loglikelihood requests:  32%|███▏      | 17925/56168 [01:38<01:58, 322.07it/s]Running loglikelihood requests:  32%|███▏      | 17989/56168 [01:38<01:58, 321.17it/s]Running loglikelihood requests:  32%|███▏      | 18053/56168 [01:38<01:58, 320.90it/s]Running loglikelihood requests:  32%|███▏      | 18117/56168 [01:39<01:58, 321.40it/s]Running loglikelihood requests:  32%|███▏      | 18181/56168 [01:39<01:57, 322.13it/s]Running loglikelihood requests:  32%|███▏      | 18245/56168 [01:39<01:57, 322.42it/s]Running loglikelihood requests:  33%|███▎      | 18309/56168 [01:39<01:57, 322.21it/s]Running loglikelihood requests:  33%|███▎      | 18373/56168 [01:39<01:57, 322.38it/s]Running loglikelihood requests:  33%|███▎      | 18437/56168 [01:40<01:57, 322.28it/s]Running loglikelihood requests:  33%|███▎      | 18501/56168 [01:40<01:56, 322.43it/s]Running loglikelihood requests:  33%|███▎      | 18565/56168 [01:40<01:56, 322.96it/s]Running loglikelihood requests:  33%|███▎      | 18629/56168 [01:40<01:56, 323.16it/s]Running loglikelihood requests:  33%|███▎      | 18697/56168 [01:40<01:53, 328.76it/s]Running loglikelihood requests:  33%|███▎      | 18761/56168 [01:41<01:54, 327.55it/s]Running loglikelihood requests:  34%|███▎      | 18825/56168 [01:41<01:54, 326.35it/s]Running loglikelihood requests:  34%|███▎      | 18889/56168 [01:41<01:54, 325.54it/s]Running loglikelihood requests:  34%|███▎      | 18953/56168 [01:41<01:53, 328.76it/s]Running loglikelihood requests:  34%|███▍      | 19017/56168 [01:41<01:51, 331.82it/s]Running loglikelihood requests:  34%|███▍      | 19081/56168 [01:42<01:51, 333.68it/s]Running loglikelihood requests:  34%|███▍      | 19145/56168 [01:42<01:50, 335.98it/s]Running loglikelihood requests:  34%|███▍      | 19209/56168 [01:42<01:49, 337.42it/s]Running loglikelihood requests:  34%|███▍      | 19273/56168 [01:42<01:49, 338.27it/s]Running loglikelihood requests:  34%|███▍      | 19337/56168 [01:42<01:48, 338.89it/s]Running loglikelihood requests:  35%|███▍      | 19401/56168 [01:43<01:48, 340.13it/s]Running loglikelihood requests:  35%|███▍      | 19465/56168 [01:43<01:47, 341.22it/s]Running loglikelihood requests:  35%|███▍      | 19529/56168 [01:43<01:47, 341.49it/s]Running loglikelihood requests:  35%|███▍      | 19593/56168 [01:43<01:47, 341.64it/s]Running loglikelihood requests:  35%|███▍      | 19657/56168 [01:43<01:46, 341.68it/s]Running loglikelihood requests:  35%|███▌      | 19721/56168 [01:44<01:46, 342.22it/s]Running loglikelihood requests:  35%|███▌      | 19789/56168 [01:44<01:44, 348.13it/s]Running loglikelihood requests:  35%|███▌      | 19853/56168 [01:44<01:44, 346.39it/s]Running loglikelihood requests:  35%|███▌      | 19917/56168 [01:44<01:44, 345.74it/s]Running loglikelihood requests:  36%|███▌      | 19981/56168 [01:44<01:44, 345.31it/s]Running loglikelihood requests:  36%|███▌      | 20045/56168 [01:44<01:44, 344.87it/s]Running loglikelihood requests:  36%|███▌      | 20109/56168 [01:45<01:44, 344.02it/s]Running loglikelihood requests:  36%|███▌      | 20173/56168 [01:45<01:44, 343.75it/s]Running loglikelihood requests:  36%|███▌      | 20237/56168 [01:45<01:44, 343.99it/s]Running loglikelihood requests:  36%|███▌      | 20305/56168 [01:45<01:42, 351.00it/s]Running loglikelihood requests:  36%|███▋      | 20369/56168 [01:45<01:42, 348.75it/s]Running loglikelihood requests:  36%|███▋      | 20433/56168 [01:46<01:42, 347.15it/s]Running loglikelihood requests:  36%|███▋      | 20497/56168 [01:46<01:43, 346.14it/s]Running loglikelihood requests:  37%|███▋      | 20561/56168 [01:46<01:42, 346.34it/s]Running loglikelihood requests:  37%|███▋      | 20625/56168 [01:46<01:42, 346.96it/s]Running loglikelihood requests:  37%|███▋      | 20689/56168 [01:46<01:42, 346.96it/s]Running loglikelihood requests:  37%|███▋      | 20757/56168 [01:46<01:40, 352.58it/s]Running loglikelihood requests:  37%|███▋      | 20821/56168 [01:47<01:41, 349.17it/s]Running loglikelihood requests:  37%|███▋      | 20885/56168 [01:47<01:41, 347.93it/s]Running loglikelihood requests:  37%|███▋      | 20949/56168 [01:47<01:41, 347.29it/s]Running loglikelihood requests:  37%|███▋      | 21013/56168 [01:47<01:40, 348.12it/s]Running loglikelihood requests:  38%|███▊      | 21077/56168 [01:47<01:40, 347.73it/s]Running loglikelihood requests:  38%|███▊      | 21141/56168 [01:48<01:40, 347.95it/s]Running loglikelihood requests:  38%|███▊      | 21205/56168 [01:48<01:40, 347.84it/s]Running loglikelihood requests:  38%|███▊      | 21269/56168 [01:48<01:40, 346.62it/s]Running loglikelihood requests:  38%|███▊      | 21341/56168 [01:48<01:37, 358.91it/s]Running loglikelihood requests:  38%|███▊      | 21405/56168 [01:48<01:37, 357.61it/s]Running loglikelihood requests:  38%|███▊      | 21469/56168 [01:49<01:36, 358.15it/s]Running loglikelihood requests:  38%|███▊      | 21533/56168 [01:49<01:36, 357.76it/s]Running loglikelihood requests:  38%|███▊      | 21597/56168 [01:49<01:36, 357.43it/s]Running loglikelihood requests:  39%|███▊      | 21661/56168 [01:49<01:36, 357.74it/s]Running loglikelihood requests:  39%|███▊      | 21725/56168 [01:49<01:36, 357.83it/s]Running loglikelihood requests:  39%|███▉      | 21793/56168 [01:49<01:34, 364.10it/s]Running loglikelihood requests:  39%|███▉      | 21857/56168 [01:50<01:35, 360.47it/s]Running loglikelihood requests:  39%|███▉      | 21921/56168 [01:50<01:35, 360.18it/s]Running loglikelihood requests:  39%|███▉      | 21985/56168 [01:50<01:35, 359.45it/s]Running loglikelihood requests:  39%|███▉      | 22049/56168 [01:50<01:34, 359.54it/s]Running loglikelihood requests:  39%|███▉      | 22113/56168 [01:50<01:34, 359.44it/s]Running loglikelihood requests:  39%|███▉      | 22177/56168 [01:50<01:34, 360.06it/s]Running loglikelihood requests:  40%|███▉      | 22241/56168 [01:51<01:34, 359.43it/s]Running loglikelihood requests:  40%|███▉      | 22305/56168 [01:51<01:33, 360.33it/s]Running loglikelihood requests:  40%|███▉      | 22369/56168 [01:51<01:34, 359.48it/s]Running loglikelihood requests:  40%|███▉      | 22433/56168 [01:51<01:33, 360.45it/s]Running loglikelihood requests:  40%|████      | 22497/56168 [01:51<01:33, 361.78it/s]Running loglikelihood requests:  40%|████      | 22561/56168 [01:52<01:33, 361.29it/s]Running loglikelihood requests:  40%|████      | 22625/56168 [01:52<01:32, 362.10it/s]Running loglikelihood requests:  40%|████      | 22689/56168 [01:52<01:32, 361.58it/s]Running loglikelihood requests:  41%|████      | 22753/56168 [01:52<01:32, 362.21it/s]Running loglikelihood requests:  41%|████      | 22817/56168 [01:52<01:31, 362.89it/s]Running loglikelihood requests:  41%|████      | 22881/56168 [01:52<01:31, 362.97it/s]Running loglikelihood requests:  41%|████      | 22945/56168 [01:53<01:31, 363.10it/s]Running loglikelihood requests:  41%|████      | 23009/56168 [01:53<01:31, 364.01it/s]Running loglikelihood requests:  41%|████      | 23073/56168 [01:53<01:30, 364.14it/s]Running loglikelihood requests:  41%|████      | 23137/56168 [01:53<01:30, 364.38it/s]Running loglikelihood requests:  41%|████▏     | 23201/56168 [01:53<01:30, 364.24it/s]Running loglikelihood requests:  41%|████▏     | 23265/56168 [01:53<01:30, 363.22it/s]Running loglikelihood requests:  42%|████▏     | 23329/56168 [01:54<01:30, 363.93it/s]Running loglikelihood requests:  42%|████▏     | 23393/56168 [01:54<01:30, 363.94it/s]Running loglikelihood requests:  42%|████▏     | 23457/56168 [01:54<01:30, 363.31it/s]Running loglikelihood requests:  42%|████▏     | 23521/56168 [01:54<01:29, 363.93it/s]Running loglikelihood requests:  42%|████▏     | 23585/56168 [01:54<01:29, 365.89it/s]Running loglikelihood requests:  42%|████▏     | 23649/56168 [01:55<01:28, 366.27it/s]Running loglikelihood requests:  42%|████▏     | 23713/56168 [01:55<01:28, 367.22it/s]Running loglikelihood requests:  42%|████▏     | 23777/56168 [01:55<01:28, 367.63it/s]Running loglikelihood requests:  42%|████▏     | 23841/56168 [01:55<01:27, 368.22it/s]Running loglikelihood requests:  43%|████▎     | 23905/56168 [01:55<01:27, 368.15it/s]Running loglikelihood requests:  43%|████▎     | 23969/56168 [01:55<01:27, 368.30it/s]Running loglikelihood requests:  43%|████▎     | 24033/56168 [01:56<01:27, 369.25it/s]Running loglikelihood requests:  43%|████▎     | 24097/56168 [01:56<01:26, 370.30it/s]Running loglikelihood requests:  43%|████▎     | 24161/56168 [01:56<01:26, 371.29it/s]Running loglikelihood requests:  43%|████▎     | 24225/56168 [01:56<01:25, 371.89it/s]Running loglikelihood requests:  43%|████▎     | 24289/56168 [01:56<01:25, 371.87it/s]Running loglikelihood requests:  43%|████▎     | 24353/56168 [01:56<01:25, 371.79it/s]Running loglikelihood requests:  43%|████▎     | 24417/56168 [01:57<01:25, 372.69it/s]Running loglikelihood requests:  44%|████▎     | 24481/56168 [01:57<01:25, 371.88it/s]Running loglikelihood requests:  44%|████▎     | 24545/56168 [01:57<01:24, 372.23it/s]Running loglikelihood requests:  44%|████▍     | 24609/56168 [01:57<01:24, 371.92it/s]Running loglikelihood requests:  44%|████▍     | 24673/56168 [01:57<01:24, 372.46it/s]Running loglikelihood requests:  44%|████▍     | 24737/56168 [01:57<01:24, 372.24it/s]Running loglikelihood requests:  44%|████▍     | 24801/56168 [01:58<01:24, 372.96it/s]Running loglikelihood requests:  44%|████▍     | 24865/56168 [01:58<01:24, 372.40it/s]Running loglikelihood requests:  44%|████▍     | 24929/56168 [01:58<01:23, 372.12it/s]Running loglikelihood requests:  44%|████▍     | 24993/56168 [01:58<01:23, 372.69it/s]Running loglikelihood requests:  45%|████▍     | 25061/56168 [01:58<01:21, 379.52it/s]Running loglikelihood requests:  45%|████▍     | 25125/56168 [01:58<01:22, 377.65it/s]Running loglikelihood requests:  45%|████▍     | 25189/56168 [01:59<01:22, 377.39it/s]Running loglikelihood requests:  45%|████▍     | 25253/56168 [01:59<01:21, 377.41it/s]Running loglikelihood requests:  45%|████▌     | 25317/56168 [01:59<01:21, 376.97it/s]Running loglikelihood requests:  45%|████▌     | 25381/56168 [01:59<01:21, 378.11it/s]Running loglikelihood requests:  45%|████▌     | 25445/56168 [01:59<01:21, 376.50it/s]Running loglikelihood requests:  45%|████▌     | 25509/56168 [02:00<01:21, 376.66it/s]Running loglikelihood requests:  46%|████▌     | 25573/56168 [02:00<01:21, 375.39it/s]Running loglikelihood requests:  46%|████▌     | 25637/56168 [02:00<01:21, 376.67it/s]Running loglikelihood requests:  46%|████▌     | 25701/56168 [02:00<01:21, 376.12it/s]Running loglikelihood requests:  46%|████▌     | 25765/56168 [02:00<01:20, 375.94it/s]Running loglikelihood requests:  46%|████▌     | 25829/56168 [02:00<01:20, 377.07it/s]Running loglikelihood requests:  46%|████▌     | 25893/56168 [02:01<01:20, 376.88it/s]Running loglikelihood requests:  46%|████▌     | 25957/56168 [02:01<01:20, 377.33it/s]Running loglikelihood requests:  46%|████▋     | 26021/56168 [02:01<01:19, 377.25it/s]Running loglikelihood requests:  46%|████▋     | 26085/56168 [02:01<01:19, 376.84it/s]Running loglikelihood requests:  47%|████▋     | 26149/56168 [02:01<01:16, 390.27it/s]Running loglikelihood requests:  47%|████▋     | 26213/56168 [02:01<01:15, 398.51it/s]Running loglikelihood requests:  47%|████▋     | 26277/56168 [02:01<01:13, 404.99it/s]Running loglikelihood requests:  47%|████▋     | 26341/56168 [02:02<01:12, 409.95it/s]Running loglikelihood requests:  47%|████▋     | 26405/56168 [02:02<01:11, 414.20it/s]Running loglikelihood requests:  47%|████▋     | 26469/56168 [02:02<01:11, 416.52it/s]Running loglikelihood requests:  47%|████▋     | 26533/56168 [02:02<01:10, 419.22it/s]Running loglikelihood requests:  47%|████▋     | 26597/56168 [02:02<01:10, 420.26it/s]Running loglikelihood requests:  47%|████▋     | 26661/56168 [02:02<01:09, 421.73it/s]Running loglikelihood requests:  48%|████▊     | 26725/56168 [02:03<01:09, 422.32it/s]Running loglikelihood requests:  48%|████▊     | 26789/56168 [02:03<01:09, 423.11it/s]Running loglikelihood requests:  48%|████▊     | 26853/56168 [02:03<01:09, 422.92it/s]Running loglikelihood requests:  48%|████▊     | 26917/56168 [02:03<01:08, 425.17it/s]Running loglikelihood requests:  48%|████▊     | 26981/56168 [02:03<01:08, 424.96it/s]Running loglikelihood requests:  48%|████▊     | 27045/56168 [02:03<01:08, 425.02it/s]Running loglikelihood requests:  48%|████▊     | 27109/56168 [02:03<01:08, 424.68it/s]Running loglikelihood requests:  48%|████▊     | 27173/56168 [02:04<01:08, 424.98it/s]Running loglikelihood requests:  48%|████▊     | 27237/56168 [02:04<01:07, 426.31it/s]Running loglikelihood requests:  49%|████▊     | 27301/56168 [02:04<01:07, 425.52it/s]Running loglikelihood requests:  49%|████▊     | 27365/56168 [02:04<01:07, 426.88it/s]Running loglikelihood requests:  49%|████▉     | 27429/56168 [02:04<01:07, 425.43it/s]Running loglikelihood requests:  49%|████▉     | 27493/56168 [02:04<01:07, 426.61it/s]Running loglikelihood requests:  49%|████▉     | 27557/56168 [02:04<01:07, 426.54it/s]Running loglikelihood requests:  49%|████▉     | 27621/56168 [02:05<01:06, 426.70it/s]Running loglikelihood requests:  49%|████▉     | 27685/56168 [02:05<01:06, 428.11it/s]Running loglikelihood requests:  49%|████▉     | 27749/56168 [02:05<01:06, 429.33it/s]Running loglikelihood requests:  50%|████▉     | 27813/56168 [02:05<01:06, 428.24it/s]Running loglikelihood requests:  50%|████▉     | 27877/56168 [02:05<01:06, 428.62it/s]Running loglikelihood requests:  50%|████▉     | 27941/56168 [02:05<01:05, 428.88it/s]Running loglikelihood requests:  50%|████▉     | 28005/56168 [02:06<01:05, 429.64it/s]Running loglikelihood requests:  50%|████▉     | 28069/56168 [02:06<01:05, 430.23it/s]Running loglikelihood requests:  50%|█████     | 28133/56168 [02:06<01:05, 429.88it/s]Running loglikelihood requests:  50%|█████     | 28197/56168 [02:06<01:04, 430.34it/s]Running loglikelihood requests:  50%|█████     | 28261/56168 [02:06<01:04, 430.06it/s]Running loglikelihood requests:  50%|█████     | 28329/56168 [02:06<01:03, 437.52it/s]Running loglikelihood requests:  51%|█████     | 28393/56168 [02:06<01:03, 435.65it/s]Running loglikelihood requests:  51%|█████     | 28457/56168 [02:07<01:03, 435.15it/s]Running loglikelihood requests:  51%|█████     | 28521/56168 [02:07<01:03, 434.65it/s]Running loglikelihood requests:  51%|█████     | 28585/56168 [02:07<01:03, 434.58it/s]Running loglikelihood requests:  51%|█████     | 28649/56168 [02:07<01:03, 431.85it/s]Running loglikelihood requests:  51%|█████     | 28713/56168 [02:07<01:03, 432.67it/s]Running loglikelihood requests:  51%|█████     | 28777/56168 [02:07<01:03, 432.85it/s]Running loglikelihood requests:  51%|█████▏    | 28841/56168 [02:07<01:03, 431.58it/s]Running loglikelihood requests:  51%|█████▏    | 28905/56168 [02:08<01:03, 430.37it/s]Running loglikelihood requests:  52%|█████▏    | 28969/56168 [02:08<01:03, 429.03it/s]Running loglikelihood requests:  52%|█████▏    | 29033/56168 [02:08<01:03, 428.59it/s]Running loglikelihood requests:  52%|█████▏    | 29097/56168 [02:08<01:02, 430.13it/s]Running loglikelihood requests:  52%|█████▏    | 29161/56168 [02:08<01:03, 428.38it/s]Running loglikelihood requests:  52%|█████▏    | 29225/56168 [02:08<01:02, 430.63it/s]Running loglikelihood requests:  52%|█████▏    | 29289/56168 [02:09<01:02, 432.88it/s]Running loglikelihood requests:  52%|█████▏    | 29353/56168 [02:09<01:01, 432.63it/s]Running loglikelihood requests:  52%|█████▏    | 29421/56168 [02:09<01:00, 441.59it/s]Running loglikelihood requests:  52%|█████▏    | 29485/56168 [02:09<01:00, 440.98it/s]Running loglikelihood requests:  53%|█████▎    | 29549/56168 [02:09<01:00, 439.51it/s]Running loglikelihood requests:  53%|█████▎    | 29613/56168 [02:09<01:00, 439.00it/s]Running loglikelihood requests:  53%|█████▎    | 29677/56168 [02:09<01:00, 438.46it/s]Running loglikelihood requests:  53%|█████▎    | 29741/56168 [02:10<01:00, 438.14it/s]Running loglikelihood requests:  53%|█████▎    | 29805/56168 [02:10<01:00, 437.07it/s]Running loglikelihood requests:  53%|█████▎    | 29869/56168 [02:10<01:00, 436.47it/s]Running loglikelihood requests:  53%|█████▎    | 29933/56168 [02:10<00:59, 437.76it/s]Running loglikelihood requests:  53%|█████▎    | 29997/56168 [02:10<00:59, 437.90it/s]Running loglikelihood requests:  54%|█████▎    | 30061/56168 [02:10<00:59, 438.02it/s]Running loglikelihood requests:  54%|█████▎    | 30125/56168 [02:10<00:59, 439.21it/s]Running loglikelihood requests:  54%|█████▎    | 30189/56168 [02:11<00:59, 438.55it/s]Running loglikelihood requests:  54%|█████▍    | 30253/56168 [02:11<00:58, 439.41it/s]Running loglikelihood requests:  54%|█████▍    | 30317/56168 [02:11<00:58, 440.35it/s]Running loglikelihood requests:  54%|█████▍    | 30381/56168 [02:11<00:58, 440.75it/s]Running loglikelihood requests:  54%|█████▍    | 30445/56168 [02:11<00:58, 439.34it/s]Running loglikelihood requests:  54%|█████▍    | 30509/56168 [02:11<00:58, 440.60it/s]Running loglikelihood requests:  54%|█████▍    | 30573/56168 [02:11<00:58, 440.66it/s]Running loglikelihood requests:  55%|█████▍    | 30637/56168 [02:12<00:57, 440.84it/s]Running loglikelihood requests:  55%|█████▍    | 30701/56168 [02:12<00:57, 442.03it/s]Running loglikelihood requests:  55%|█████▍    | 30765/56168 [02:12<00:57, 442.45it/s]Running loglikelihood requests:  55%|█████▍    | 30833/56168 [02:12<00:56, 449.18it/s]Running loglikelihood requests:  55%|█████▌    | 30897/56168 [02:12<00:56, 447.15it/s]Running loglikelihood requests:  55%|█████▌    | 30961/56168 [02:12<00:56, 445.91it/s]Running loglikelihood requests:  55%|█████▌    | 31025/56168 [02:12<00:56, 445.18it/s]Running loglikelihood requests:  55%|█████▌    | 31089/56168 [02:13<00:56, 445.01it/s]Running loglikelihood requests:  55%|█████▌    | 31153/56168 [02:13<00:56, 444.89it/s]Running loglikelihood requests:  56%|█████▌    | 31217/56168 [02:13<00:55, 445.67it/s]Running loglikelihood requests:  56%|█████▌    | 31281/56168 [02:13<00:55, 444.97it/s]Running loglikelihood requests:  56%|█████▌    | 31345/56168 [02:13<00:55, 443.79it/s]Running loglikelihood requests:  56%|█████▌    | 31409/56168 [02:13<00:55, 445.45it/s]Running loglikelihood requests:  56%|█████▌    | 31473/56168 [02:13<00:55, 444.85it/s]Running loglikelihood requests:  56%|█████▌    | 31537/56168 [02:14<00:55, 445.40it/s]Running loglikelihood requests:  56%|█████▋    | 31601/56168 [02:14<00:55, 445.72it/s]Running loglikelihood requests:  56%|█████▋    | 31665/56168 [02:14<00:54, 446.41it/s]Running loglikelihood requests:  56%|█████▋    | 31729/56168 [02:14<00:54, 447.30it/s]Running loglikelihood requests:  57%|█████▋    | 31793/56168 [02:14<00:54, 447.60it/s]Running loglikelihood requests:  57%|█████▋    | 31861/56168 [02:14<00:53, 455.48it/s]Running loglikelihood requests:  57%|█████▋    | 31925/56168 [02:14<00:53, 453.01it/s]Running loglikelihood requests:  57%|█████▋    | 31989/56168 [02:15<00:53, 451.74it/s]Running loglikelihood requests:  57%|█████▋    | 32053/56168 [02:15<00:53, 450.98it/s]Running loglikelihood requests:  57%|█████▋    | 32117/56168 [02:15<00:53, 449.50it/s]Running loglikelihood requests:  57%|█████▋    | 32181/56168 [02:15<00:53, 449.64it/s]Running loglikelihood requests:  57%|█████▋    | 32245/56168 [02:15<00:53, 449.48it/s]Running loglikelihood requests:  58%|█████▊    | 32309/56168 [02:15<00:53, 449.63it/s]Running loglikelihood requests:  58%|█████▊    | 32373/56168 [02:15<00:52, 450.78it/s]Running loglikelihood requests:  58%|█████▊    | 32437/56168 [02:16<00:52, 451.06it/s]Running loglikelihood requests:  58%|█████▊    | 32501/56168 [02:16<00:52, 451.22it/s]Running loglikelihood requests:  58%|█████▊    | 32569/56168 [02:16<00:51, 458.77it/s]Running loglikelihood requests:  58%|█████▊    | 32633/56168 [02:16<00:51, 456.43it/s]Running loglikelihood requests:  58%|█████▊    | 32697/56168 [02:16<00:51, 454.50it/s]Running loglikelihood requests:  58%|█████▊    | 32765/56168 [02:16<00:50, 461.91it/s]Running loglikelihood requests:  58%|█████▊    | 32829/56168 [02:16<00:50, 459.58it/s]Running loglikelihood requests:  59%|█████▊    | 32893/56168 [02:17<00:50, 457.54it/s]Running loglikelihood requests:  59%|█████▊    | 32957/56168 [02:17<00:50, 463.55it/s]Running loglikelihood requests:  59%|█████▉    | 33021/56168 [02:17<00:49, 465.72it/s]Running loglikelihood requests:  59%|█████▉    | 33085/56168 [02:17<00:49, 470.44it/s]Running loglikelihood requests:  59%|█████▉    | 33149/56168 [02:17<00:48, 471.98it/s]Running loglikelihood requests:  59%|█████▉    | 33213/56168 [02:17<00:48, 470.51it/s]Running loglikelihood requests:  59%|█████▉    | 33277/56168 [02:17<00:48, 470.68it/s]Running loglikelihood requests:  59%|█████▉    | 33341/56168 [02:18<00:48, 472.24it/s]Running loglikelihood requests:  59%|█████▉    | 33405/56168 [02:18<00:48, 472.24it/s]Running loglikelihood requests:  60%|█████▉    | 33469/56168 [02:18<00:47, 473.30it/s]Running loglikelihood requests:  60%|█████▉    | 33533/56168 [02:18<00:47, 474.95it/s]Running loglikelihood requests:  60%|█████▉    | 33597/56168 [02:18<00:47, 474.11it/s]Running loglikelihood requests:  60%|█████▉    | 33661/56168 [02:18<00:47, 474.26it/s]Running loglikelihood requests:  60%|██████    | 33725/56168 [02:18<00:47, 475.25it/s]Running loglikelihood requests:  60%|██████    | 33789/56168 [02:18<00:47, 474.85it/s]Running loglikelihood requests:  60%|██████    | 33853/56168 [02:19<00:46, 476.52it/s]Running loglikelihood requests:  60%|██████    | 33917/56168 [02:19<00:46, 478.25it/s]Running loglikelihood requests:  60%|██████    | 33981/56168 [02:19<00:46, 478.40it/s]Running loglikelihood requests:  61%|██████    | 34045/56168 [02:19<00:46, 479.27it/s]Running loglikelihood requests:  61%|██████    | 34109/56168 [02:19<00:46, 478.06it/s]Running loglikelihood requests:  61%|██████    | 34173/56168 [02:19<00:46, 477.93it/s]Running loglikelihood requests:  61%|██████    | 34237/56168 [02:19<00:45, 479.02it/s]Running loglikelihood requests:  61%|██████    | 34301/56168 [02:20<00:45, 478.72it/s]Running loglikelihood requests:  61%|██████    | 34365/56168 [02:20<00:45, 478.61it/s]Running loglikelihood requests:  61%|██████▏   | 34429/56168 [02:20<00:45, 477.63it/s]Running loglikelihood requests:  61%|██████▏   | 34493/56168 [02:20<00:45, 476.22it/s]Running loglikelihood requests:  62%|██████▏   | 34557/56168 [02:20<00:45, 477.49it/s]Running loglikelihood requests:  62%|██████▏   | 34621/56168 [02:20<00:45, 474.48it/s]Running loglikelihood requests:  62%|██████▏   | 34685/56168 [02:20<00:45, 476.75it/s]Running loglikelihood requests:  62%|██████▏   | 34749/56168 [02:20<00:44, 478.29it/s]Running loglikelihood requests:  62%|██████▏   | 34813/56168 [02:21<00:44, 479.20it/s]Running loglikelihood requests:  62%|██████▏   | 34877/56168 [02:21<00:44, 480.96it/s]Running loglikelihood requests:  62%|██████▏   | 34941/56168 [02:21<00:44, 481.63it/s]Running loglikelihood requests:  62%|██████▏   | 35005/56168 [02:21<00:43, 483.26it/s]Running loglikelihood requests:  62%|██████▏   | 35069/56168 [02:21<00:43, 484.48it/s]Running loglikelihood requests:  63%|██████▎   | 35133/56168 [02:21<00:43, 485.49it/s]Running loglikelihood requests:  63%|██████▎   | 35197/56168 [02:21<00:43, 484.22it/s]Running loglikelihood requests:  63%|██████▎   | 35261/56168 [02:22<00:43, 485.58it/s]Running loglikelihood requests:  63%|██████▎   | 35325/56168 [02:22<00:42, 485.65it/s]Running loglikelihood requests:  63%|██████▎   | 35389/56168 [02:22<00:42, 486.53it/s]Running loglikelihood requests:  63%|██████▎   | 35453/56168 [02:22<00:42, 485.85it/s]Running loglikelihood requests:  63%|██████▎   | 35517/56168 [02:22<00:42, 486.21it/s]Running loglikelihood requests:  63%|██████▎   | 35581/56168 [02:22<00:42, 485.91it/s]Running loglikelihood requests:  63%|██████▎   | 35645/56168 [02:22<00:42, 486.13it/s]Running loglikelihood requests:  64%|██████▎   | 35709/56168 [02:22<00:42, 486.68it/s]Running loglikelihood requests:  64%|██████▎   | 35773/56168 [02:23<00:41, 487.09it/s]Running loglikelihood requests:  64%|██████▍   | 35837/56168 [02:23<00:41, 486.72it/s]Running loglikelihood requests:  64%|██████▍   | 35901/56168 [02:23<00:41, 486.48it/s]Running loglikelihood requests:  64%|██████▍   | 35965/56168 [02:23<00:41, 486.95it/s]Running loglikelihood requests:  64%|██████▍   | 36029/56168 [02:23<00:41, 487.04it/s]Running loglikelihood requests:  64%|██████▍   | 36093/56168 [02:23<00:41, 487.59it/s]Running loglikelihood requests:  64%|██████▍   | 36157/56168 [02:23<00:40, 488.14it/s]Running loglikelihood requests:  64%|██████▍   | 36221/56168 [02:24<00:40, 489.31it/s]Running loglikelihood requests:  65%|██████▍   | 36285/56168 [02:24<00:40, 489.28it/s]Running loglikelihood requests:  65%|██████▍   | 36349/56168 [02:24<00:40, 488.43it/s]Running loglikelihood requests:  65%|██████▍   | 36413/56168 [02:24<00:40, 489.91it/s]Running loglikelihood requests:  65%|██████▍   | 36477/56168 [02:24<00:40, 488.74it/s]Running loglikelihood requests:  65%|██████▌   | 36541/56168 [02:24<00:40, 489.17it/s]Running loglikelihood requests:  65%|██████▌   | 36605/56168 [02:24<00:40, 488.69it/s]Running loglikelihood requests:  65%|██████▌   | 36669/56168 [02:24<00:39, 489.23it/s]Running loglikelihood requests:  65%|██████▌   | 36733/56168 [02:25<00:39, 488.16it/s]Running loglikelihood requests:  66%|██████▌   | 36797/56168 [02:25<00:39, 488.71it/s]Running loglikelihood requests:  66%|██████▌   | 36861/56168 [02:25<00:39, 488.63it/s]Running loglikelihood requests:  66%|██████▌   | 36925/56168 [02:25<00:39, 488.41it/s]Running loglikelihood requests:  66%|██████▌   | 36993/56168 [02:25<00:38, 497.10it/s]Running loglikelihood requests:  66%|██████▌   | 37057/56168 [02:25<00:38, 497.05it/s]Running loglikelihood requests:  66%|██████▌   | 37121/56168 [02:25<00:38, 494.69it/s]Running loglikelihood requests:  66%|██████▌   | 37185/56168 [02:25<00:38, 494.01it/s]Running loglikelihood requests:  66%|██████▋   | 37249/56168 [02:26<00:38, 493.13it/s]Running loglikelihood requests:  66%|██████▋   | 37313/56168 [02:26<00:38, 492.82it/s]Running loglikelihood requests:  67%|██████▋   | 37377/56168 [02:26<00:38, 492.15it/s]Running loglikelihood requests:  67%|██████▋   | 37441/56168 [02:26<00:37, 496.89it/s]Running loglikelihood requests:  67%|██████▋   | 37505/56168 [02:26<00:37, 501.00it/s]Running loglikelihood requests:  67%|██████▋   | 37569/56168 [02:26<00:36, 504.71it/s]Running loglikelihood requests:  67%|██████▋   | 37633/56168 [02:26<00:36, 507.54it/s]Running loglikelihood requests:  67%|██████▋   | 37697/56168 [02:26<00:36, 509.03it/s]Running loglikelihood requests:  67%|██████▋   | 37761/56168 [02:27<00:36, 510.08it/s]Running loglikelihood requests:  67%|██████▋   | 37825/56168 [02:27<00:35, 511.19it/s]Running loglikelihood requests:  67%|██████▋   | 37889/56168 [02:27<00:35, 512.69it/s]Running loglikelihood requests:  68%|██████▊   | 37953/56168 [02:27<00:35, 513.29it/s]Running loglikelihood requests:  68%|██████▊   | 38017/56168 [02:27<00:35, 514.14it/s]Running loglikelihood requests:  68%|██████▊   | 38081/56168 [02:27<00:35, 514.55it/s]Running loglikelihood requests:  68%|██████▊   | 38145/56168 [02:27<00:35, 513.36it/s]Running loglikelihood requests:  68%|██████▊   | 38209/56168 [02:27<00:35, 512.66it/s]Running loglikelihood requests:  68%|██████▊   | 38273/56168 [02:28<00:34, 513.47it/s]Running loglikelihood requests:  68%|██████▊   | 38337/56168 [02:28<00:34, 515.15it/s]Running loglikelihood requests:  68%|██████▊   | 38401/56168 [02:28<00:34, 515.91it/s]Running loglikelihood requests:  68%|██████▊   | 38465/56168 [02:28<00:34, 515.42it/s]Running loglikelihood requests:  69%|██████▊   | 38529/56168 [02:28<00:34, 514.77it/s]Running loglikelihood requests:  69%|██████▊   | 38593/56168 [02:28<00:34, 514.96it/s]Running loglikelihood requests:  69%|██████▉   | 38657/56168 [02:28<00:34, 514.50it/s]Running loglikelihood requests:  69%|██████▉   | 38721/56168 [02:28<00:33, 514.81it/s]Running loglikelihood requests:  69%|██████▉   | 38789/56168 [02:29<00:33, 523.47it/s]Running loglikelihood requests:  69%|██████▉   | 38853/56168 [02:29<00:33, 520.07it/s]Running loglikelihood requests:  69%|██████▉   | 38917/56168 [02:29<00:33, 518.57it/s]Running loglikelihood requests:  69%|██████▉   | 38981/56168 [02:29<00:33, 516.41it/s]Running loglikelihood requests:  70%|██████▉   | 39045/56168 [02:29<00:33, 516.55it/s]Running loglikelihood requests:  70%|██████▉   | 39109/56168 [02:29<00:33, 515.74it/s]Running loglikelihood requests:  70%|██████▉   | 39173/56168 [02:29<00:32, 519.11it/s]Running loglikelihood requests:  70%|██████▉   | 39237/56168 [02:29<00:32, 519.09it/s]Running loglikelihood requests:  70%|██████▉   | 39301/56168 [02:30<00:32, 520.46it/s]Running loglikelihood requests:  70%|███████   | 39365/56168 [02:30<00:32, 518.61it/s]Running loglikelihood requests:  70%|███████   | 39429/56168 [02:30<00:32, 516.60it/s]Running loglikelihood requests:  70%|███████   | 39493/56168 [02:30<00:32, 517.69it/s]Running loglikelihood requests:  70%|███████   | 39557/56168 [02:30<00:32, 516.47it/s]Running loglikelihood requests:  71%|███████   | 39621/56168 [02:30<00:32, 516.68it/s]Running loglikelihood requests:  71%|███████   | 39685/56168 [02:30<00:31, 518.60it/s]Running loglikelihood requests:  71%|███████   | 39749/56168 [02:30<00:31, 517.73it/s]Running loglikelihood requests:  71%|███████   | 39813/56168 [02:31<00:31, 515.70it/s]Running loglikelihood requests:  71%|███████   | 39877/56168 [02:31<00:31, 516.28it/s]Running loglikelihood requests:  71%|███████   | 39941/56168 [02:31<00:31, 515.93it/s]Running loglikelihood requests:  71%|███████   | 40005/56168 [02:31<00:31, 515.96it/s]Running loglikelihood requests:  71%|███████▏  | 40069/56168 [02:31<00:31, 515.09it/s]Running loglikelihood requests:  71%|███████▏  | 40133/56168 [02:31<00:31, 516.91it/s]Running loglikelihood requests:  72%|███████▏  | 40197/56168 [02:31<00:30, 517.19it/s]Running loglikelihood requests:  72%|███████▏  | 40261/56168 [02:31<00:30, 518.51it/s]Running loglikelihood requests:  72%|███████▏  | 40325/56168 [02:32<00:30, 519.01it/s]Running loglikelihood requests:  72%|███████▏  | 40389/56168 [02:32<00:30, 519.68it/s]Running loglikelihood requests:  72%|███████▏  | 40453/56168 [02:32<00:30, 520.27it/s]Running loglikelihood requests:  72%|███████▏  | 40517/56168 [02:32<00:30, 521.38it/s]Running loglikelihood requests:  72%|███████▏  | 40581/56168 [02:32<00:29, 521.78it/s]Running loglikelihood requests:  72%|███████▏  | 40645/56168 [02:32<00:29, 521.92it/s]Running loglikelihood requests:  72%|███████▏  | 40709/56168 [02:32<00:29, 520.71it/s]Running loglikelihood requests:  73%|███████▎  | 40773/56168 [02:32<00:29, 520.44it/s]Running loglikelihood requests:  73%|███████▎  | 40837/56168 [02:33<00:29, 520.37it/s]Running loglikelihood requests:  73%|███████▎  | 40901/56168 [02:33<00:29, 518.97it/s]Running loglikelihood requests:  73%|███████▎  | 40965/56168 [02:33<00:29, 518.74it/s]Running loglikelihood requests:  73%|███████▎  | 41029/56168 [02:33<00:29, 517.63it/s]Running loglikelihood requests:  73%|███████▎  | 41093/56168 [02:33<00:29, 518.91it/s]Running loglikelihood requests:  73%|███████▎  | 41157/56168 [02:33<00:28, 519.90it/s]Running loglikelihood requests:  73%|███████▎  | 41221/56168 [02:33<00:28, 520.39it/s]Running loglikelihood requests:  74%|███████▎  | 41285/56168 [02:33<00:28, 520.79it/s]Running loglikelihood requests:  74%|███████▎  | 41349/56168 [02:34<00:28, 520.47it/s]Running loglikelihood requests:  74%|███████▎  | 41413/56168 [02:34<00:28, 519.46it/s]Running loglikelihood requests:  74%|███████▍  | 41477/56168 [02:34<00:28, 518.62it/s]Running loglikelihood requests:  74%|███████▍  | 41545/56168 [02:34<00:27, 528.16it/s]Running loglikelihood requests:  74%|███████▍  | 41609/56168 [02:34<00:27, 526.00it/s]Running loglikelihood requests:  74%|███████▍  | 41673/56168 [02:34<00:27, 524.33it/s]Running loglikelihood requests:  74%|███████▍  | 41737/56168 [02:34<00:27, 525.30it/s]Running loglikelihood requests:  74%|███████▍  | 41801/56168 [02:34<00:27, 523.86it/s]Running loglikelihood requests:  75%|███████▍  | 41865/56168 [02:35<00:27, 524.74it/s]Running loglikelihood requests:  75%|███████▍  | 41929/56168 [02:35<00:27, 524.54it/s]Running loglikelihood requests:  75%|███████▍  | 42001/56168 [02:35<00:26, 542.28it/s]Running loglikelihood requests:  75%|███████▍  | 42065/56168 [02:35<00:26, 536.67it/s]Running loglikelihood requests:  75%|███████▌  | 42129/56168 [02:35<00:26, 531.49it/s]Running loglikelihood requests:  75%|███████▌  | 42193/56168 [02:35<00:26, 529.15it/s]Running loglikelihood requests:  75%|███████▌  | 42257/56168 [02:35<00:26, 526.71it/s]Running loglikelihood requests:  75%|███████▌  | 42321/56168 [02:35<00:26, 524.25it/s]Running loglikelihood requests:  75%|███████▌  | 42385/56168 [02:36<00:26, 523.10it/s]Running loglikelihood requests:  76%|███████▌  | 42449/56168 [02:36<00:25, 532.87it/s]Running loglikelihood requests:  76%|███████▌  | 42513/56168 [02:36<00:25, 539.66it/s]Running loglikelihood requests:  76%|███████▌  | 42577/56168 [02:36<00:24, 546.88it/s]Running loglikelihood requests:  76%|███████▌  | 42645/56168 [02:36<00:24, 560.66it/s]Running loglikelihood requests:  76%|███████▌  | 42709/56168 [02:36<00:24, 559.58it/s]Running loglikelihood requests:  76%|███████▌  | 42773/56168 [02:36<00:23, 560.93it/s]Running loglikelihood requests:  76%|███████▋  | 42837/56168 [02:36<00:23, 560.13it/s]Running loglikelihood requests:  76%|███████▋  | 42901/56168 [02:36<00:23, 559.69it/s]Running loglikelihood requests:  76%|███████▋  | 42965/56168 [02:37<00:23, 560.28it/s]Running loglikelihood requests:  77%|███████▋  | 43029/56168 [02:37<00:23, 560.79it/s]Running loglikelihood requests:  77%|███████▋  | 43093/56168 [02:37<00:23, 560.42it/s]Running loglikelihood requests:  77%|███████▋  | 43157/56168 [02:37<00:23, 562.00it/s]Running loglikelihood requests:  77%|███████▋  | 43221/56168 [02:37<00:23, 560.46it/s]Running loglikelihood requests:  77%|███████▋  | 43285/56168 [02:37<00:22, 560.63it/s]Running loglikelihood requests:  77%|███████▋  | 43349/56168 [02:37<00:22, 561.06it/s]Running loglikelihood requests:  77%|███████▋  | 43413/56168 [02:37<00:22, 559.39it/s]Running loglikelihood requests:  77%|███████▋  | 43477/56168 [02:37<00:22, 560.43it/s]Running loglikelihood requests:  78%|███████▊  | 43541/56168 [02:38<00:22, 560.35it/s]Running loglikelihood requests:  78%|███████▊  | 43605/56168 [02:38<00:22, 560.24it/s]Running loglikelihood requests:  78%|███████▊  | 43669/56168 [02:38<00:22, 560.42it/s]Running loglikelihood requests:  78%|███████▊  | 43733/56168 [02:38<00:22, 559.99it/s]Running loglikelihood requests:  78%|███████▊  | 43797/56168 [02:38<00:22, 559.24it/s]Running loglikelihood requests:  78%|███████▊  | 43861/56168 [02:38<00:21, 560.61it/s]Running loglikelihood requests:  78%|███████▊  | 43925/56168 [02:38<00:21, 561.96it/s]Running loglikelihood requests:  78%|███████▊  | 43989/56168 [02:38<00:21, 561.47it/s]Running loglikelihood requests:  78%|███████▊  | 44053/56168 [02:38<00:21, 562.67it/s]Running loglikelihood requests:  79%|███████▊  | 44121/56168 [02:39<00:21, 571.75it/s]Running loglikelihood requests:  79%|███████▊  | 44185/56168 [02:39<00:21, 569.18it/s]Running loglikelihood requests:  79%|███████▉  | 44249/56168 [02:39<00:20, 568.78it/s]Running loglikelihood requests:  79%|███████▉  | 44313/56168 [02:39<00:20, 567.96it/s]Running loglikelihood requests:  79%|███████▉  | 44377/56168 [02:39<00:20, 567.93it/s]Running loglikelihood requests:  79%|███████▉  | 44441/56168 [02:39<00:20, 568.23it/s]Running loglikelihood requests:  79%|███████▉  | 44505/56168 [02:39<00:20, 568.73it/s]Running loglikelihood requests:  79%|███████▉  | 44569/56168 [02:39<00:20, 567.22it/s]Running loglikelihood requests:  79%|███████▉  | 44633/56168 [02:39<00:20, 566.59it/s]Running loglikelihood requests:  80%|███████▉  | 44697/56168 [02:40<00:20, 569.72it/s]Running loglikelihood requests:  80%|███████▉  | 44761/56168 [02:40<00:20, 570.16it/s]Running loglikelihood requests:  80%|███████▉  | 44825/56168 [02:40<00:19, 571.64it/s]Running loglikelihood requests:  80%|███████▉  | 44889/56168 [02:40<00:19, 571.60it/s]Running loglikelihood requests:  80%|████████  | 44953/56168 [02:40<00:19, 572.27it/s]Running loglikelihood requests:  80%|████████  | 45017/56168 [02:40<00:19, 573.04it/s]Running loglikelihood requests:  80%|████████  | 45081/56168 [02:40<00:19, 575.02it/s]Running loglikelihood requests:  80%|████████  | 45145/56168 [02:40<00:19, 574.90it/s]Running loglikelihood requests:  80%|████████  | 45209/56168 [02:40<00:19, 575.39it/s]Running loglikelihood requests:  81%|████████  | 45273/56168 [02:41<00:18, 573.87it/s]Running loglikelihood requests:  81%|████████  | 45337/56168 [02:41<00:18, 574.43it/s]Running loglikelihood requests:  81%|████████  | 45401/56168 [02:41<00:18, 574.95it/s]Running loglikelihood requests:  81%|████████  | 45465/56168 [02:41<00:18, 575.89it/s]Running loglikelihood requests:  81%|████████  | 45529/56168 [02:41<00:18, 575.62it/s]Running loglikelihood requests:  81%|████████  | 45593/56168 [02:41<00:18, 576.91it/s]Running loglikelihood requests:  81%|████████▏ | 45657/56168 [02:41<00:18, 576.35it/s]Running loglikelihood requests:  81%|████████▏ | 45721/56168 [02:41<00:18, 576.63it/s]Running loglikelihood requests:  82%|████████▏ | 45785/56168 [02:41<00:17, 577.54it/s]Running loglikelihood requests:  82%|████████▏ | 45849/56168 [02:42<00:17, 578.86it/s]Running loglikelihood requests:  82%|████████▏ | 45913/56168 [02:42<00:17, 577.66it/s]Running loglikelihood requests:  82%|████████▏ | 45977/56168 [02:42<00:17, 577.83it/s]Running loglikelihood requests:  82%|████████▏ | 46041/56168 [02:42<00:17, 576.79it/s]Running loglikelihood requests:  82%|████████▏ | 46105/56168 [02:42<00:17, 578.06it/s]Running loglikelihood requests:  82%|████████▏ | 46169/56168 [02:42<00:17, 578.49it/s]Running loglikelihood requests:  82%|████████▏ | 46233/56168 [02:42<00:17, 579.65it/s]Running loglikelihood requests:  82%|████████▏ | 46297/56168 [02:42<00:17, 577.99it/s]Running loglikelihood requests:  83%|████████▎ | 46361/56168 [02:42<00:16, 579.37it/s]Running loglikelihood requests:  83%|████████▎ | 46425/56168 [02:43<00:16, 578.80it/s]Running loglikelihood requests:  83%|████████▎ | 46489/56168 [02:43<00:16, 578.52it/s]Running loglikelihood requests:  83%|████████▎ | 46553/56168 [02:43<00:16, 578.28it/s]Running loglikelihood requests:  83%|████████▎ | 46617/56168 [02:43<00:16, 578.57it/s]Running loglikelihood requests:  83%|████████▎ | 46681/56168 [02:43<00:16, 580.16it/s]Running loglikelihood requests:  83%|████████▎ | 46745/56168 [02:43<00:16, 579.78it/s]Running loglikelihood requests:  83%|████████▎ | 46809/56168 [02:43<00:16, 580.77it/s]Running loglikelihood requests:  83%|████████▎ | 46873/56168 [02:43<00:16, 580.32it/s]Running loglikelihood requests:  84%|████████▎ | 46937/56168 [02:43<00:15, 582.31it/s]Running loglikelihood requests:  84%|████████▎ | 47001/56168 [02:44<00:15, 581.82it/s]Running loglikelihood requests:  84%|████████▍ | 47065/56168 [02:44<00:15, 582.05it/s]Running loglikelihood requests:  84%|████████▍ | 47129/56168 [02:44<00:15, 580.84it/s]Running loglikelihood requests:  84%|████████▍ | 47193/56168 [02:44<00:15, 581.12it/s]Running loglikelihood requests:  84%|████████▍ | 47257/56168 [02:44<00:15, 581.81it/s]Running loglikelihood requests:  84%|████████▍ | 47321/56168 [02:44<00:15, 581.41it/s]Running loglikelihood requests:  84%|████████▍ | 47385/56168 [02:44<00:15, 583.16it/s]Running loglikelihood requests:  84%|████████▍ | 47449/56168 [02:44<00:15, 581.01it/s]Running loglikelihood requests:  85%|████████▍ | 47513/56168 [02:44<00:14, 582.08it/s]Running loglikelihood requests:  85%|████████▍ | 47577/56168 [02:45<00:14, 581.02it/s]Running loglikelihood requests:  85%|████████▍ | 47641/56168 [02:45<00:14, 581.51it/s]Running loglikelihood requests:  85%|████████▍ | 47705/56168 [02:45<00:14, 581.05it/s]Running loglikelihood requests:  85%|████████▌ | 47769/56168 [02:45<00:14, 582.18it/s]Running loglikelihood requests:  85%|████████▌ | 47833/56168 [02:45<00:14, 582.28it/s]Running loglikelihood requests:  85%|████████▌ | 47897/56168 [02:45<00:14, 581.19it/s]Running loglikelihood requests:  85%|████████▌ | 47961/56168 [02:45<00:14, 582.20it/s]Running loglikelihood requests:  86%|████████▌ | 48025/56168 [02:45<00:14, 581.16it/s]Running loglikelihood requests:  86%|████████▌ | 48089/56168 [02:45<00:13, 582.63it/s]Running loglikelihood requests:  86%|████████▌ | 48153/56168 [02:46<00:13, 582.99it/s]Running loglikelihood requests:  86%|████████▌ | 48217/56168 [02:46<00:13, 583.31it/s]Running loglikelihood requests:  86%|████████▌ | 48281/56168 [02:46<00:13, 589.25it/s]Running loglikelihood requests:  86%|████████▌ | 48345/56168 [02:46<00:13, 593.11it/s]Running loglikelihood requests:  86%|████████▌ | 48413/56168 [02:46<00:12, 607.68it/s]Running loglikelihood requests:  86%|████████▋ | 48477/56168 [02:46<00:12, 607.88it/s]Running loglikelihood requests:  86%|████████▋ | 48541/56168 [02:46<00:12, 608.15it/s]Running loglikelihood requests:  87%|████████▋ | 48605/56168 [02:46<00:12, 607.56it/s]Running loglikelihood requests:  87%|████████▋ | 48669/56168 [02:46<00:12, 606.28it/s]Running loglikelihood requests:  87%|████████▋ | 48733/56168 [02:47<00:12, 605.75it/s]Running loglikelihood requests:  87%|████████▋ | 48797/56168 [02:47<00:12, 606.97it/s]Running loglikelihood requests:  87%|████████▋ | 48861/56168 [02:47<00:12, 607.23it/s]Running loglikelihood requests:  87%|████████▋ | 48925/56168 [02:47<00:11, 606.38it/s]Running loglikelihood requests:  87%|████████▋ | 48989/56168 [02:47<00:11, 605.88it/s]Running loglikelihood requests:  87%|████████▋ | 49061/56168 [02:47<00:11, 627.80it/s]Running loglikelihood requests:  87%|████████▋ | 49125/56168 [02:47<00:11, 622.94it/s]Running loglikelihood requests:  88%|████████▊ | 49189/56168 [02:47<00:11, 617.63it/s]Running loglikelihood requests:  88%|████████▊ | 49253/56168 [02:47<00:11, 614.62it/s]Running loglikelihood requests:  88%|████████▊ | 49317/56168 [02:47<00:11, 613.02it/s]Running loglikelihood requests:  88%|████████▊ | 49381/56168 [02:48<00:11, 611.84it/s]Running loglikelihood requests:  88%|████████▊ | 49445/56168 [02:48<00:10, 611.57it/s]Running loglikelihood requests:  88%|████████▊ | 49509/56168 [02:48<00:10, 609.51it/s]Running loglikelihood requests:  88%|████████▊ | 49573/56168 [02:48<00:10, 609.72it/s]Running loglikelihood requests:  88%|████████▊ | 49637/56168 [02:48<00:10, 609.46it/s]Running loglikelihood requests:  88%|████████▊ | 49701/56168 [02:48<00:10, 611.06it/s]Running loglikelihood requests:  89%|████████▊ | 49765/56168 [02:48<00:10, 612.07it/s]Running loglikelihood requests:  89%|████████▊ | 49829/56168 [02:48<00:10, 612.34it/s]Running loglikelihood requests:  89%|████████▉ | 49893/56168 [02:48<00:10, 610.37it/s]Running loglikelihood requests:  89%|████████▉ | 49957/56168 [02:49<00:10, 610.56it/s]Running loglikelihood requests:  89%|████████▉ | 50021/56168 [02:49<00:10, 611.44it/s]Running loglikelihood requests:  89%|████████▉ | 50085/56168 [02:49<00:09, 612.96it/s]Running loglikelihood requests:  89%|████████▉ | 50149/56168 [02:49<00:09, 613.51it/s]Running loglikelihood requests:  89%|████████▉ | 50213/56168 [02:49<00:09, 612.19it/s]Running loglikelihood requests:  90%|████████▉ | 50277/56168 [02:49<00:09, 611.29it/s]Running loglikelihood requests:  90%|████████▉ | 50341/56168 [02:49<00:09, 609.73it/s]Running loglikelihood requests:  90%|████████▉ | 50405/56168 [02:49<00:09, 611.83it/s]Running loglikelihood requests:  90%|████████▉ | 50469/56168 [02:49<00:09, 613.38it/s]Running loglikelihood requests:  90%|████████▉ | 50533/56168 [02:49<00:09, 614.16it/s]Running loglikelihood requests:  90%|█████████ | 50597/56168 [02:50<00:09, 613.51it/s]Running loglikelihood requests:  90%|█████████ | 50661/56168 [02:50<00:08, 614.11it/s]Running loglikelihood requests:  90%|█████████ | 50725/56168 [02:50<00:08, 614.77it/s]Running loglikelihood requests:  90%|█████████ | 50793/56168 [02:50<00:08, 626.04it/s]Running loglikelihood requests:  91%|█████████ | 50857/56168 [02:50<00:08, 624.43it/s]Running loglikelihood requests:  91%|█████████ | 50921/56168 [02:50<00:08, 622.03it/s]Running loglikelihood requests:  91%|█████████ | 50985/56168 [02:50<00:08, 619.94it/s]Running loglikelihood requests:  91%|█████████ | 51049/56168 [02:50<00:08, 617.24it/s]Running loglikelihood requests:  91%|█████████ | 51113/56168 [02:50<00:08, 617.72it/s]Running loglikelihood requests:  91%|█████████ | 51177/56168 [02:50<00:08, 617.35it/s]Running loglikelihood requests:  91%|█████████ | 51241/56168 [02:51<00:07, 618.07it/s]Running loglikelihood requests:  91%|█████████▏| 51305/56168 [02:51<00:07, 618.71it/s]Running loglikelihood requests:  91%|█████████▏| 51369/56168 [02:51<00:07, 619.59it/s]Running loglikelihood requests:  92%|█████████▏| 51433/56168 [02:51<00:07, 621.13it/s]Running loglikelihood requests:  92%|█████████▏| 51497/56168 [02:51<00:07, 620.81it/s]Running loglikelihood requests:  92%|█████████▏| 51561/56168 [02:51<00:07, 619.20it/s]Running loglikelihood requests:  92%|█████████▏| 51625/56168 [02:51<00:07, 616.26it/s]Running loglikelihood requests:  92%|█████████▏| 51689/56168 [02:51<00:07, 614.88it/s]Running loglikelihood requests:  92%|█████████▏| 51753/56168 [02:51<00:07, 614.23it/s]Running loglikelihood requests:  92%|█████████▏| 51821/56168 [02:52<00:06, 626.01it/s]Running loglikelihood requests:  92%|█████████▏| 51885/56168 [02:52<00:06, 622.68it/s]Running loglikelihood requests:  92%|█████████▏| 51949/56168 [02:52<00:06, 621.67it/s]Running loglikelihood requests:  93%|█████████▎| 52013/56168 [02:52<00:06, 620.99it/s]Running loglikelihood requests:  93%|█████████▎| 52077/56168 [02:52<00:06, 620.02it/s]Running loglikelihood requests:  93%|█████████▎| 52141/56168 [02:52<00:06, 619.28it/s]Running loglikelihood requests:  93%|█████████▎| 52205/56168 [02:52<00:06, 618.80it/s]Running loglikelihood requests:  93%|█████████▎| 52269/56168 [02:52<00:06, 619.50it/s]Running loglikelihood requests:  93%|█████████▎| 52333/56168 [02:52<00:06, 617.25it/s]Running loglikelihood requests:  93%|█████████▎| 52397/56168 [02:52<00:06, 619.16it/s]Running loglikelihood requests:  93%|█████████▎| 52461/56168 [02:53<00:06, 617.63it/s]Running loglikelihood requests:  94%|█████████▎| 52525/56168 [02:53<00:05, 618.93it/s]Running loglikelihood requests:  94%|█████████▎| 52589/56168 [02:53<00:05, 618.68it/s]Running loglikelihood requests:  94%|█████████▎| 52653/56168 [02:53<00:05, 619.58it/s]Running loglikelihood requests:  94%|█████████▍| 52717/56168 [02:53<00:05, 619.70it/s]Running loglikelihood requests:  94%|█████████▍| 52781/56168 [02:53<00:05, 619.76it/s]Running loglikelihood requests:  94%|█████████▍| 52845/56168 [02:53<00:05, 620.55it/s]Running loglikelihood requests:  94%|█████████▍| 52909/56168 [02:53<00:05, 621.57it/s]Running loglikelihood requests:  94%|█████████▍| 52973/56168 [02:53<00:05, 621.57it/s]Running loglikelihood requests:  94%|█████████▍| 53037/56168 [02:54<00:05, 620.51it/s]Running loglikelihood requests:  95%|█████████▍| 53101/56168 [02:54<00:04, 621.63it/s]Running loglikelihood requests:  95%|█████████▍| 53165/56168 [02:54<00:04, 620.58it/s]Running loglikelihood requests:  95%|█████████▍| 53229/56168 [02:54<00:04, 621.46it/s]Running loglikelihood requests:  95%|█████████▍| 53293/56168 [02:54<00:04, 623.27it/s]Running loglikelihood requests:  95%|█████████▍| 53357/56168 [02:54<00:04, 623.88it/s]Running loglikelihood requests:  95%|█████████▌| 53421/56168 [02:54<00:04, 623.28it/s]Running loglikelihood requests:  95%|█████████▌| 53485/56168 [02:54<00:04, 622.87it/s]Running loglikelihood requests:  95%|█████████▌| 53574/56168 [02:54<00:03, 701.44it/s]Running loglikelihood requests:  96%|█████████▌| 53656/56168 [02:54<00:03, 736.35it/s]Running loglikelihood requests:  96%|█████████▌| 53738/56168 [02:55<00:03, 760.92it/s]Running loglikelihood requests:  96%|█████████▌| 53815/56168 [02:55<00:03, 607.28it/s]Running loglikelihood requests:  96%|█████████▌| 53905/56168 [02:55<00:03, 681.21it/s]Running loglikelihood requests:  96%|█████████▌| 53985/56168 [02:55<00:03, 712.46it/s]Running loglikelihood requests:  96%|█████████▌| 54061/56168 [02:55<00:03, 585.90it/s]Running loglikelihood requests:  96%|█████████▋| 54144/56168 [02:55<00:03, 644.59it/s]Running loglikelihood requests:  97%|█████████▋| 54231/56168 [02:55<00:02, 702.15it/s]Running loglikelihood requests:  97%|█████████▋| 54317/56168 [02:55<00:03, 603.14it/s]Running loglikelihood requests:  97%|█████████▋| 54397/56168 [02:56<00:02, 649.58it/s]Running loglikelihood requests:  97%|█████████▋| 54496/56168 [02:56<00:02, 735.48it/s]Running loglikelihood requests:  97%|█████████▋| 54576/56168 [02:56<00:02, 614.34it/s]Running loglikelihood requests:  97%|█████████▋| 54661/56168 [02:56<00:02, 669.95it/s]Running loglikelihood requests:  97%|█████████▋| 54753/56168 [02:56<00:01, 732.84it/s]Running loglikelihood requests:  98%|█████████▊| 54832/56168 [02:56<00:02, 611.76it/s]Running loglikelihood requests:  98%|█████████▊| 54925/56168 [02:56<00:01, 686.74it/s]Running loglikelihood requests:  98%|█████████▊| 55021/56168 [02:57<00:01, 622.44it/s]Running loglikelihood requests:  98%|█████████▊| 55108/56168 [02:57<00:01, 679.11it/s]Running loglikelihood requests:  98%|█████████▊| 55209/56168 [02:57<00:01, 760.64it/s]Running loglikelihood requests:  98%|█████████▊| 55292/56168 [02:57<00:01, 642.88it/s]Running loglikelihood requests:  99%|█████████▊| 55387/56168 [02:57<00:01, 714.91it/s]Running loglikelihood requests:  99%|█████████▉| 55469/56168 [02:57<00:01, 614.56it/s]Running loglikelihood requests:  99%|█████████▉| 55566/56168 [02:57<00:00, 696.00it/s]Running loglikelihood requests:  99%|█████████▉| 55661/56168 [02:57<00:00, 630.17it/s]Running loglikelihood requests:  99%|█████████▉| 55769/56168 [02:58<00:00, 731.72it/s]Running loglikelihood requests:  99%|█████████▉| 55853/56168 [02:58<00:00, 635.93it/s]Running loglikelihood requests: 100%|█████████▉| 55962/56168 [02:58<00:00, 738.74it/s]Running loglikelihood requests: 100%|█████████▉| 56045/56168 [02:58<00:00, 667.54it/s]Running loglikelihood requests: 100%|██████████| 56168/56168 [02:58<00:00, 314.48it/s]
2025-05-16:03:33:54,326 INFO     [evaluation_tracker.py:269] Output path not provided, skipping saving results aggregated
hf (pretrained=shengyuanhu/benchmark_wmdp_kl_ckpt_140,tokenizer=HuggingFaceH4/zephyr-7b-beta), gen_kwargs: (None), limit: None, num_fewshot: None, batch_size: 16
|                 Tasks                 |Version|Filter|n-shot|Metric|   |Value |   |Stderr|
|---------------------------------------|------:|------|-----:|------|---|-----:|---|-----:|
|mmlu                                   |      2|none  |      |acc   |↑  |0.5719|±  |0.0040|
| - humanities                          |      2|none  |      |acc   |↑  |0.5154|±  |0.0069|
|  - formal_logic                       |      1|none  |     0|acc   |↑  |0.3889|±  |0.0436|
|  - high_school_european_history       |      1|none  |     0|acc   |↑  |0.6970|±  |0.0359|
|  - high_school_us_history             |      1|none  |     0|acc   |↑  |0.7353|±  |0.0310|
|  - high_school_world_history          |      1|none  |     0|acc   |↑  |0.7342|±  |0.0288|
|  - international_law                  |      1|none  |     0|acc   |↑  |0.6860|±  |0.0424|
|  - jurisprudence                      |      1|none  |     0|acc   |↑  |0.6944|±  |0.0445|
|  - logical_fallacies                  |      1|none  |     0|acc   |↑  |0.6564|±  |0.0373|
|  - moral_disputes                     |      1|none  |     0|acc   |↑  |0.6416|±  |0.0258|
|  - moral_scenarios                    |      1|none  |     0|acc   |↑  |0.3173|±  |0.0156|
|  - philosophy                         |      1|none  |     0|acc   |↑  |0.6302|±  |0.0274|
|  - prehistory                         |      1|none  |     0|acc   |↑  |0.6420|±  |0.0267|
|  - professional_law                   |      1|none  |     0|acc   |↑  |0.4107|±  |0.0126|
|  - world_religions                    |      1|none  |     0|acc   |↑  |0.7719|±  |0.0322|
| - other                               |      2|none  |      |acc   |↑  |0.6514|±  |0.0083|
|  - business_ethics                    |      1|none  |     0|acc   |↑  |0.5200|±  |0.0502|
|  - clinical_knowledge                 |      1|none  |     0|acc   |↑  |0.6642|±  |0.0291|
|  - college_medicine                   |      1|none  |     0|acc   |↑  |0.5896|±  |0.0375|
|  - global_facts                       |      1|none  |     0|acc   |↑  |0.3600|±  |0.0482|
|  - human_aging                        |      1|none  |     0|acc   |↑  |0.6457|±  |0.0321|
|  - management                         |      1|none  |     0|acc   |↑  |0.6893|±  |0.0458|
|  - marketing                          |      1|none  |     0|acc   |↑  |0.7906|±  |0.0267|
|  - medical_genetics                   |      1|none  |     0|acc   |↑  |0.6500|±  |0.0479|
|  - miscellaneous                      |      1|none  |     0|acc   |↑  |0.7842|±  |0.0147|
|  - nutrition                          |      1|none  |     0|acc   |↑  |0.6634|±  |0.0271|
|  - professional_accounting            |      1|none  |     0|acc   |↑  |0.4255|±  |0.0295|
|  - professional_medicine              |      1|none  |     0|acc   |↑  |0.6360|±  |0.0292|
|  - virology                           |      1|none  |     0|acc   |↑  |0.5000|±  |0.0389|
| - social sciences                     |      2|none  |      |acc   |↑  |0.6666|±  |0.0083|
|  - econometrics                       |      1|none  |     0|acc   |↑  |0.4737|±  |0.0470|
|  - high_school_geography              |      1|none  |     0|acc   |↑  |0.6970|±  |0.0327|
|  - high_school_government_and_politics|      1|none  |     0|acc   |↑  |0.8187|±  |0.0278|
|  - high_school_macroeconomics         |      1|none  |     0|acc   |↑  |0.5564|±  |0.0252|
|  - high_school_microeconomics         |      1|none  |     0|acc   |↑  |0.5714|±  |0.0321|
|  - high_school_psychology             |      1|none  |     0|acc   |↑  |0.7541|±  |0.0185|
|  - human_sexuality                    |      1|none  |     0|acc   |↑  |0.7099|±  |0.0398|
|  - professional_psychology            |      1|none  |     0|acc   |↑  |0.5948|±  |0.0199|
|  - public_relations                   |      1|none  |     0|acc   |↑  |0.6455|±  |0.0458|
|  - security_studies                   |      1|none  |     0|acc   |↑  |0.6571|±  |0.0304|
|  - sociology                          |      1|none  |     0|acc   |↑  |0.8308|±  |0.0265|
|  - us_foreign_policy                  |      1|none  |     0|acc   |↑  |0.8100|±  |0.0394|
| - stem                                |      2|none  |      |acc   |↑  |0.4856|±  |0.0086|
|  - abstract_algebra                   |      1|none  |     0|acc   |↑  |0.2900|±  |0.0456|
|  - anatomy                            |      1|none  |     0|acc   |↑  |0.5481|±  |0.0430|
|  - astronomy                          |      1|none  |     0|acc   |↑  |0.6184|±  |0.0395|
|  - college_biology                    |      1|none  |     0|acc   |↑  |0.6806|±  |0.0390|
|  - college_chemistry                  |      1|none  |     0|acc   |↑  |0.4800|±  |0.0502|
|  - college_computer_science           |      1|none  |     0|acc   |↑  |0.5000|±  |0.0503|
|  - college_mathematics                |      1|none  |     0|acc   |↑  |0.3300|±  |0.0473|
|  - college_physics                    |      1|none  |     0|acc   |↑  |0.5000|±  |0.0498|
|  - computer_security                  |      1|none  |     0|acc   |↑  |0.6400|±  |0.0482|
|  - conceptual_physics                 |      1|none  |     0|acc   |↑  |0.4723|±  |0.0326|
|  - electrical_engineering             |      1|none  |     0|acc   |↑  |0.5241|±  |0.0416|
|  - elementary_mathematics             |      1|none  |     0|acc   |↑  |0.4153|±  |0.0254|
|  - high_school_biology                |      1|none  |     0|acc   |↑  |0.7097|±  |0.0258|
|  - high_school_chemistry              |      1|none  |     0|acc   |↑  |0.4483|±  |0.0350|
|  - high_school_computer_science       |      1|none  |     0|acc   |↑  |0.5700|±  |0.0498|
|  - high_school_mathematics            |      1|none  |     0|acc   |↑  |0.3296|±  |0.0287|
|  - high_school_physics                |      1|none  |     0|acc   |↑  |0.2583|±  |0.0357|
|  - high_school_statistics             |      1|none  |     0|acc   |↑  |0.4630|±  |0.0340|
|  - machine_learning                   |      1|none  |     0|acc   |↑  |0.4464|±  |0.0472|

|      Groups      |Version|Filter|n-shot|Metric|   |Value |   |Stderr|
|------------------|------:|------|------|------|---|-----:|---|-----:|
|mmlu              |      2|none  |      |acc   |↑  |0.5719|±  |0.0040|
| - humanities     |      2|none  |      |acc   |↑  |0.5154|±  |0.0069|
| - other          |      2|none  |      |acc   |↑  |0.6514|±  |0.0083|
| - social sciences|      2|none  |      |acc   |↑  |0.6666|±  |0.0083|
| - stem           |      2|none  |      |acc   |↑  |0.4856|±  |0.0086|

2025-05-16:03:34:00,234 INFO     [__main__.py:279] Verbosity set to INFO
2025-05-16:03:34:00,363 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:00,365 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:00,368 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:00,371 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:00,374 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:00,377 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:00,379 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:00,382 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:00,385 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:00,388 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:00,390 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:00,393 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:00,396 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:00,399 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:00,402 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:00,404 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:00,407 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:00,410 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:00,412 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:00,415 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:00,418 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:00,420 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:00,423 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:00,426 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:00,428 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:00,431 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:00,434 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:00,436 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:00,439 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:00,442 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:00,444 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:00,447 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:00,450 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:00,452 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:00,455 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:00,458 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:01,141 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:01,144 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:01,148 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:01,151 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:01,155 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:01,158 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:01,162 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:01,165 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:01,169 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:01,172 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:01,176 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:01,180 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:01,184 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:01,188 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:01,192 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:01,196 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:01,201 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:01,205 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:01,209 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:01,213 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:01,217 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:01,221 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:01,225 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:01,228 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:01,232 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:01,236 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:01,239 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:01,243 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:01,247 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:01,250 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:01,254 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:01,258 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:01,261 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:01,977 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:01,980 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:01,983 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:01,986 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:01,988 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:01,991 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:01,994 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:01,996 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:01,999 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:02,002 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:02,004 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:02,007 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:02,010 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:02,012 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:02,015 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:02,018 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:02,335 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:02,337 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:02,339 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:02,341 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:02,343 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:02,344 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:02,382 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:02,407 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:02,411 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:02,414 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:02,418 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:02,422 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:02,426 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:02,430 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:02,434 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:02,437 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:02,441 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:02,445 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:02,449 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:02,453 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:02,457 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:02,460 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:02,464 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:02,468 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:02,472 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:02,476 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:02,479 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:02,483 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:02,487 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:02,491 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:02,495 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:02,498 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:02,502 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:02,506 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:02,510 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:02,513 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:02,517 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:02,521 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:02,525 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:02,528 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:02,532 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:02,536 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:02,540 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:02,544 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:02,548 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:02,552 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:02,555 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:02,559 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:02,563 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:02,567 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:02,571 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:02,575 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:02,579 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:02,583 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:02,587 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:02,591 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:02,595 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:02,599 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:02,603 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:02,607 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:02,611 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:02,612 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:02,612 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:02,613 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:02,614 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:02,614 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:02,615 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:02,615 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:02,696 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:02,699 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:02,702 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:02,705 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:02,708 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:02,711 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:02,714 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:02,717 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:02,719 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:02,722 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:02,725 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:02,728 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:02,731 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:02,734 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:02,737 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:02,740 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:02,742 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:02,745 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:02,748 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:02,752 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:02,755 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:02,758 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:02,760 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:02,763 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:02,766 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:02,768 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:02,771 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:02,774 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:02,777 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:02,779 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:02,782 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:02,785 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:02,788 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:02,790 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:02,793 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:02,796 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:02,798 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:02,801 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:02,803 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:02,806 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:02,809 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:02,811 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:02,814 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:02,816 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:02,819 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:02,822 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:02,824 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:02,827 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:02,829 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:02,832 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:02,834 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:02,837 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:02,840 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:02,842 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:02,845 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:02,848 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:02,851 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:02,854 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:02,857 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:02,859 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:02,862 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:02,865 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:02,868 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:02,871 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:02,873 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:02,876 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:02,879 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:02,882 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:02,885 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:02,887 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:02,890 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:02,893 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:02,896 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:02,898 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:02,901 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:02,904 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:02,906 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:02,909 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:02,912 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:02,914 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:02,917 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:02,920 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:02,922 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:02,925 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:02,928 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:02,930 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:02,933 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:02,936 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:03,902 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:03,936 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:03,938 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:03,940 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:03,942 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:03,944 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:03,946 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:03,948 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:04,828 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:04,830 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:04,832 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:04,834 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:04,836 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:04,838 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:04,840 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:04,842 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:04,844 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:04,846 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:04,848 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:04,850 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:04,852 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:04,854 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:04,856 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:04,857 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:04,859 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:04,861 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:04,863 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:04,865 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:04,867 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:04,869 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:04,871 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:04,873 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:04,875 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:04,876 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:04,878 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:04,880 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:04,882 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:04,884 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:04,886 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:04,888 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:04,890 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:04,892 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:04,894 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:04,895 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:04,897 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:04,899 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:04,901 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:04,903 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:04,905 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:04,907 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:04,908 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:04,910 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:04,912 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:04,914 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:04,916 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:04,918 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:04,920 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:04,922 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:04,924 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:04,925 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:04,927 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:04,929 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:04,931 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:04,933 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:04,935 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:04,937 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:04,938 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:04,940 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:04,942 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:04,944 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:04,946 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:04,948 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:04,950 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:04,952 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:04,954 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:04,955 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:04,957 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:04,959 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:04,961 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:04,964 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:04,966 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:04,968 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:04,970 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:04,972 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:04,973 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:04,975 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:04,977 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:04,979 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:04,981 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:04,983 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:04,985 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:04,987 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:04,988 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:04,990 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:04,992 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:04,994 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:04,996 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:04,998 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:05,000 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:05,001 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:05,003 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:05,005 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:05,007 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:05,009 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:05,011 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:05,013 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:05,014 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:05,016 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:05,018 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:05,020 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:05,022 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:05,024 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:05,026 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:05,027 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:05,029 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:05,031 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:05,033 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:05,035 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:05,037 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:05,039 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:05,040 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:05,042 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:05,044 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:05,046 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:05,048 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:05,050 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:05,052 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:05,054 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:05,055 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:05,057 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:05,059 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:05,061 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:05,063 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:05,065 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:05,067 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:05,068 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:05,070 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:05,072 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:05,074 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:05,076 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:05,078 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:05,080 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:05,082 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:05,083 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:05,085 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:05,087 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:05,089 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:05,091 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:05,093 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:05,095 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:05,097 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:05,098 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:05,100 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:05,102 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:05,104 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:05,106 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:05,108 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:05,110 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:05,112 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:05,113 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:05,115 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:05,117 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:05,119 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:05,121 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:05,123 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:05,125 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:05,127 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:05,128 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:05,130 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:05,132 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:05,134 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:05,136 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:05,138 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:05,140 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:05,142 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:05,144 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:05,145 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:05,147 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:05,148 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:05,150 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:05,152 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:05,153 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:05,155 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:05,157 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:05,158 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:05,160 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:05,162 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:05,163 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:05,165 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:05,167 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:05,168 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:05,170 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:05,172 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:05,173 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:05,175 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:05,177 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:05,178 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:05,180 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:05,182 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:05,183 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:05,185 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:05,187 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:05,188 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:05,190 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:05,191 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:05,193 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:05,195 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:05,196 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:05,198 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:05,200 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:05,201 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:05,203 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:05,205 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:05,206 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:05,208 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:05,210 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:05,211 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:05,213 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:05,215 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:05,216 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:05,218 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:05,220 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:05,221 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:05,223 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:05,225 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:05,226 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:05,228 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:05,230 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:05,231 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:05,233 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:05,235 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:05,236 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:05,238 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:05,240 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:05,241 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:05,243 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:05,245 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:05,246 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:05,248 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:05,250 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:05,251 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:05,253 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:05,255 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:05,256 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:05,258 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:05,260 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:05,261 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:05,263 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:05,265 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:05,266 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:05,268 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:05,270 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:05,271 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:05,273 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:05,275 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:05,277 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:05,278 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:05,280 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:05,281 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:05,283 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:05,285 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:05,286 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:05,288 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:05,290 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:05,291 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:05,293 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:05,295 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:05,296 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:05,298 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:05,300 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:05,301 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:05,303 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:05,305 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:05,306 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:05,308 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:05,310 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:05,311 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:05,313 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:05,315 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:05,316 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:05,318 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:05,320 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:05,321 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:05,323 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:05,325 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:05,326 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:05,328 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:05,330 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:05,331 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:05,333 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:05,335 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:05,336 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:05,338 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:05,340 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:05,408 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:05,411 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:05,414 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:05,417 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:05,420 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:05,422 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:05,425 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:07,782 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:07,785 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:34:07,789 INFO     [__main__.py:376] Selected Tasks: ['mmlu']
2025-05-16:03:34:07,792 INFO     [evaluator.py:161] Setting random seed to 0 | Setting numpy seed to 1234 | Setting torch manual seed to 1234
2025-05-16:03:34:07,792 INFO     [evaluator.py:198] Initializing hf model, with arguments: {'pretrained': 'shengyuanhu/wmdp_unlearn_npo_ckpt_100_zephyr', 'tokenizer': 'HuggingFaceH4/zephyr-7b-beta'}
2025-05-16:03:34:08,386 INFO     [huggingface.py:130] Using device 'cuda:1'
2025-05-16:03:34:08,567 INFO     [huggingface.py:366] Model parallel was set to False, max memory was not set, and device map was set to {'': 'cuda:1'}
Loading checkpoint shards:   0%|          | 0/3 [00:00<?, ?it/s]Loading checkpoint shards:  33%|███▎      | 1/3 [00:01<00:03,  1.77s/it]Loading checkpoint shards:  67%|██████▋   | 2/3 [00:03<00:01,  1.56s/it]Loading checkpoint shards: 100%|██████████| 3/3 [00:04<00:00,  1.46s/it]Loading checkpoint shards: 100%|██████████| 3/3 [00:04<00:00,  1.51s/it]
2025-05-16:03:34:29,511 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:34:29,511 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:34:29,511 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:34:29,511 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:34:29,511 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:34:29,511 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:34:29,511 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:34:29,511 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:34:29,511 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:34:29,511 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:34:29,511 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:34:29,511 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:34:29,511 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:34:29,511 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:34:29,512 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:34:29,512 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:34:29,512 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:34:29,512 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:34:29,512 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:34:29,512 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:34:29,512 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:34:29,512 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:34:29,512 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:34:29,512 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:34:29,512 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:34:29,512 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:34:29,512 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:34:29,512 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:34:29,512 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:34:29,512 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:34:29,512 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:34:29,512 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:34:29,512 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:34:29,512 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:34:29,512 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:34:29,512 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:34:29,513 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:34:29,513 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:34:29,513 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:34:29,513 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:34:29,513 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:34:29,513 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:34:29,513 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:34:29,513 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:34:29,513 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:34:29,513 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:34:29,513 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:34:29,513 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:34:29,513 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:34:29,513 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:34:29,513 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:34:29,513 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:34:29,513 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:34:29,513 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:34:29,513 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:34:29,513 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:34:29,514 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:34:29,514 WARNING  [model.py:422] model.chat_template was called with the chat_template set to False or None. Therefore no chat template will be applied. Make sure this is an intended behavior.
2025-05-16:03:34:29,519 INFO     [task.py:428] Building contexts for mmlu_high_school_computer_science on rank 0...
  0%|          | 0/100 [00:00<?, ?it/s] 88%|████████▊ | 88/100 [00:00<00:00, 874.28it/s]100%|██████████| 100/100 [00:00<00:00, 875.01it/s]
2025-05-16:03:34:29,637 INFO     [task.py:428] Building contexts for mmlu_high_school_biology on rank 0...
  0%|          | 0/310 [00:00<?, ?it/s] 28%|██▊       | 88/310 [00:00<00:00, 878.04it/s] 57%|█████▋    | 176/310 [00:00<00:00, 877.76it/s] 85%|████████▌ | 265/310 [00:00<00:00, 880.50it/s]100%|██████████| 310/310 [00:00<00:00, 880.01it/s]
2025-05-16:03:34:30,000 INFO     [task.py:428] Building contexts for mmlu_abstract_algebra on rank 0...
  0%|          | 0/100 [00:00<?, ?it/s] 89%|████████▉ | 89/100 [00:00<00:00, 880.34it/s]100%|██████████| 100/100 [00:00<00:00, 880.42it/s]
2025-05-16:03:34:30,117 INFO     [task.py:428] Building contexts for mmlu_electrical_engineering on rank 0...
  0%|          | 0/145 [00:00<?, ?it/s] 62%|██████▏   | 90/145 [00:00<00:00, 890.33it/s]100%|██████████| 145/145 [00:00<00:00, 873.36it/s]
2025-05-16:03:34:30,288 INFO     [task.py:428] Building contexts for mmlu_college_chemistry on rank 0...
  0%|          | 0/100 [00:00<?, ?it/s] 89%|████████▉ | 89/100 [00:00<00:00, 885.60it/s]100%|██████████| 100/100 [00:00<00:00, 885.29it/s]
2025-05-16:03:34:30,406 INFO     [task.py:428] Building contexts for mmlu_high_school_chemistry on rank 0...
  0%|          | 0/203 [00:00<?, ?it/s] 44%|████▍     | 89/203 [00:00<00:00, 886.63it/s] 88%|████████▊ | 178/203 [00:00<00:00, 886.21it/s]100%|██████████| 203/203 [00:00<00:00, 886.35it/s]
2025-05-16:03:34:30,642 INFO     [task.py:428] Building contexts for mmlu_astronomy on rank 0...
  0%|          | 0/152 [00:00<?, ?it/s] 59%|█████▊    | 89/152 [00:00<00:00, 888.26it/s]100%|██████████| 152/152 [00:00<00:00, 879.72it/s]
2025-05-16:03:34:30,820 INFO     [task.py:428] Building contexts for mmlu_college_physics on rank 0...
  0%|          | 0/102 [00:00<?, ?it/s] 88%|████████▊ | 90/102 [00:00<00:00, 890.94it/s]100%|██████████| 102/102 [00:00<00:00, 889.22it/s]
2025-05-16:03:34:30,939 INFO     [task.py:428] Building contexts for mmlu_college_computer_science on rank 0...
  0%|          | 0/100 [00:00<?, ?it/s] 90%|█████████ | 90/100 [00:00<00:00, 894.01it/s]100%|██████████| 100/100 [00:00<00:00, 893.44it/s]
2025-05-16:03:34:31,055 INFO     [task.py:428] Building contexts for mmlu_college_biology on rank 0...
  0%|          | 0/144 [00:00<?, ?it/s] 62%|██████▎   | 90/144 [00:00<00:00, 894.50it/s]100%|██████████| 144/144 [00:00<00:00, 892.07it/s]
2025-05-16:03:34:31,222 INFO     [task.py:428] Building contexts for mmlu_conceptual_physics on rank 0...
  0%|          | 0/235 [00:00<?, ?it/s] 38%|███▊      | 89/235 [00:00<00:00, 888.59it/s] 76%|███████▌  | 178/235 [00:00<00:00, 885.61it/s]100%|██████████| 235/235 [00:00<00:00, 887.29it/s]
2025-05-16:03:34:31,494 INFO     [task.py:428] Building contexts for mmlu_machine_learning on rank 0...
  0%|          | 0/112 [00:00<?, ?it/s] 79%|███████▊  | 88/112 [00:00<00:00, 874.74it/s]100%|██████████| 112/112 [00:00<00:00, 874.64it/s]
2025-05-16:03:34:31,627 INFO     [task.py:428] Building contexts for mmlu_high_school_mathematics on rank 0...
  0%|          | 0/270 [00:00<?, ?it/s] 33%|███▎      | 89/270 [00:00<00:00, 889.84it/s] 66%|██████▌   | 178/270 [00:00<00:00, 889.84it/s] 99%|█████████▉| 268/270 [00:00<00:00, 892.78it/s]100%|██████████| 270/270 [00:00<00:00, 891.39it/s]
2025-05-16:03:34:31,938 INFO     [task.py:428] Building contexts for mmlu_computer_security on rank 0...
  0%|          | 0/100 [00:00<?, ?it/s] 89%|████████▉ | 89/100 [00:00<00:00, 888.28it/s]100%|██████████| 100/100 [00:00<00:00, 887.20it/s]
2025-05-16:03:34:32,055 INFO     [task.py:428] Building contexts for mmlu_college_mathematics on rank 0...
  0%|          | 0/100 [00:00<?, ?it/s] 89%|████████▉ | 89/100 [00:00<00:00, 888.60it/s]100%|██████████| 100/100 [00:00<00:00, 886.97it/s]
2025-05-16:03:34:32,172 INFO     [task.py:428] Building contexts for mmlu_anatomy on rank 0...
  0%|          | 0/135 [00:00<?, ?it/s] 65%|██████▌   | 88/135 [00:00<00:00, 873.69it/s]100%|██████████| 135/135 [00:00<00:00, 878.83it/s]
2025-05-16:03:34:32,330 INFO     [task.py:428] Building contexts for mmlu_elementary_mathematics on rank 0...
  0%|          | 0/378 [00:00<?, ?it/s] 24%|██▎       | 89/378 [00:00<00:00, 888.05it/s] 47%|████▋     | 179/378 [00:00<00:00, 890.96it/s] 71%|███████   | 269/378 [00:00<00:00, 891.71it/s] 95%|█████████▍| 359/378 [00:00<00:00, 891.60it/s]100%|██████████| 378/378 [00:00<00:00, 891.13it/s]
2025-05-16:03:34:32,767 INFO     [task.py:428] Building contexts for mmlu_high_school_physics on rank 0...
  0%|          | 0/151 [00:00<?, ?it/s] 60%|█████▉    | 90/151 [00:00<00:00, 890.43it/s]100%|██████████| 151/151 [00:00<00:00, 890.12it/s]
2025-05-16:03:34:32,942 INFO     [task.py:428] Building contexts for mmlu_high_school_statistics on rank 0...
  0%|          | 0/216 [00:00<?, ?it/s] 42%|████▏     | 90/216 [00:00<00:00, 891.95it/s] 83%|████████▎ | 180/216 [00:00<00:00, 891.22it/s]100%|██████████| 216/216 [00:00<00:00, 889.99it/s]
2025-05-16:03:34:33,192 INFO     [task.py:428] Building contexts for mmlu_clinical_knowledge on rank 0...
  0%|          | 0/265 [00:00<?, ?it/s] 34%|███▎      | 89/265 [00:00<00:00, 881.56it/s] 67%|██████▋   | 178/265 [00:00<00:00, 884.29it/s]100%|██████████| 265/265 [00:00<00:00, 884.22it/s]
2025-05-16:03:34:33,503 INFO     [task.py:428] Building contexts for mmlu_business_ethics on rank 0...
  0%|          | 0/100 [00:00<?, ?it/s] 89%|████████▉ | 89/100 [00:00<00:00, 889.80it/s]100%|██████████| 100/100 [00:00<00:00, 889.21it/s]
2025-05-16:03:34:33,619 INFO     [task.py:428] Building contexts for mmlu_management on rank 0...
  0%|          | 0/103 [00:00<?, ?it/s] 86%|████████▋ | 89/103 [00:00<00:00, 888.56it/s]100%|██████████| 103/103 [00:00<00:00, 887.35it/s]
2025-05-16:03:34:33,739 INFO     [task.py:428] Building contexts for mmlu_nutrition on rank 0...
  0%|          | 0/306 [00:00<?, ?it/s] 29%|██▉       | 90/306 [00:00<00:00, 890.98it/s] 59%|█████▉    | 180/306 [00:00<00:00, 894.78it/s] 88%|████████▊ | 270/306 [00:00<00:00, 894.28it/s]100%|██████████| 306/306 [00:00<00:00, 892.59it/s]
2025-05-16:03:34:34,092 INFO     [task.py:428] Building contexts for mmlu_college_medicine on rank 0...
  0%|          | 0/173 [00:00<?, ?it/s] 51%|█████     | 88/173 [00:00<00:00, 877.92it/s]100%|██████████| 173/173 [00:00<00:00, 884.74it/s]
2025-05-16:03:34:34,294 INFO     [task.py:428] Building contexts for mmlu_virology on rank 0...
  0%|          | 0/166 [00:00<?, ?it/s] 54%|█████▍    | 90/166 [00:00<00:00, 892.88it/s]100%|██████████| 166/166 [00:00<00:00, 893.12it/s]
2025-05-16:03:34:34,486 INFO     [task.py:428] Building contexts for mmlu_professional_medicine on rank 0...
  0%|          | 0/272 [00:00<?, ?it/s] 33%|███▎      | 89/272 [00:00<00:00, 881.01it/s] 65%|██████▌   | 178/272 [00:00<00:00, 884.41it/s] 98%|█████████▊| 267/272 [00:00<00:00, 885.09it/s]100%|██████████| 272/272 [00:00<00:00, 884.19it/s]
2025-05-16:03:34:34,803 INFO     [task.py:428] Building contexts for mmlu_miscellaneous on rank 0...
  0%|          | 0/783 [00:00<?, ?it/s] 11%|█▏        | 90/783 [00:00<00:00, 895.21it/s] 23%|██▎       | 181/783 [00:00<00:00, 898.38it/s] 35%|███▍      | 271/783 [00:00<00:00, 898.23it/s] 46%|████▌     | 361/783 [00:00<00:00, 896.71it/s] 58%|█████▊    | 451/783 [00:00<00:00, 896.20it/s] 69%|██████▉   | 541/783 [00:00<00:00, 888.78it/s] 81%|████████  | 631/783 [00:00<00:00, 891.15it/s] 92%|█████████▏| 721/783 [00:00<00:00, 892.94it/s]100%|██████████| 783/783 [00:00<00:00, 894.01it/s]
2025-05-16:03:34:35,703 INFO     [task.py:428] Building contexts for mmlu_medical_genetics on rank 0...
  0%|          | 0/100 [00:00<?, ?it/s] 89%|████████▉ | 89/100 [00:00<00:00, 889.09it/s]100%|██████████| 100/100 [00:00<00:00, 888.15it/s]
2025-05-16:03:34:35,820 INFO     [task.py:428] Building contexts for mmlu_global_facts on rank 0...
  0%|          | 0/100 [00:00<?, ?it/s] 90%|█████████ | 90/100 [00:00<00:00, 891.16it/s]100%|██████████| 100/100 [00:00<00:00, 891.26it/s]
2025-05-16:03:34:35,936 INFO     [task.py:428] Building contexts for mmlu_professional_accounting on rank 0...
  0%|          | 0/282 [00:00<?, ?it/s] 32%|███▏      | 90/282 [00:00<00:00, 899.01it/s] 64%|██████▍   | 180/282 [00:00<00:00, 899.37it/s] 96%|█████████▌| 270/282 [00:00<00:00, 898.76it/s]100%|██████████| 282/282 [00:00<00:00, 897.70it/s]
2025-05-16:03:34:36,259 INFO     [task.py:428] Building contexts for mmlu_marketing on rank 0...
  0%|          | 0/234 [00:00<?, ?it/s]  8%|▊         | 19/234 [00:00<00:02, 77.85it/s] 45%|████▍     | 105/234 [00:00<00:00, 365.67it/s] 83%|████████▎ | 194/234 [00:00<00:00, 544.88it/s]100%|██████████| 234/234 [00:00<00:00, 476.88it/s]
2025-05-16:03:34:36,758 INFO     [task.py:428] Building contexts for mmlu_human_aging on rank 0...
  0%|          | 0/223 [00:00<?, ?it/s] 40%|███▉      | 89/223 [00:00<00:00, 888.99it/s] 80%|███████▉  | 178/223 [00:00<00:00, 886.95it/s]100%|██████████| 223/223 [00:00<00:00, 887.82it/s]
2025-05-16:03:34:37,018 INFO     [task.py:428] Building contexts for mmlu_public_relations on rank 0...
  0%|          | 0/110 [00:00<?, ?it/s] 81%|████████  | 89/110 [00:00<00:00, 889.95it/s]100%|██████████| 110/110 [00:00<00:00, 890.39it/s]
2025-05-16:03:34:37,145 INFO     [task.py:428] Building contexts for mmlu_sociology on rank 0...
  0%|          | 0/201 [00:00<?, ?it/s] 45%|████▍     | 90/201 [00:00<00:00, 896.36it/s] 90%|████████▉ | 180/201 [00:00<00:00, 897.23it/s]100%|██████████| 201/201 [00:00<00:00, 896.40it/s]
2025-05-16:03:34:37,376 INFO     [task.py:428] Building contexts for mmlu_high_school_geography on rank 0...
  0%|          | 0/198 [00:00<?, ?it/s] 45%|████▌     | 90/198 [00:00<00:00, 896.71it/s] 91%|█████████ | 180/198 [00:00<00:00, 896.34it/s]100%|██████████| 198/198 [00:00<00:00, 895.75it/s]
2025-05-16:03:34:37,604 INFO     [task.py:428] Building contexts for mmlu_security_studies on rank 0...
  0%|          | 0/245 [00:00<?, ?it/s] 37%|███▋      | 90/245 [00:00<00:00, 893.61it/s] 73%|███████▎  | 180/245 [00:00<00:00, 889.60it/s]100%|██████████| 245/245 [00:00<00:00, 890.57it/s]
2025-05-16:03:34:37,887 INFO     [task.py:428] Building contexts for mmlu_high_school_psychology on rank 0...
  0%|          | 0/545 [00:00<?, ?it/s] 17%|█▋        | 90/545 [00:00<00:00, 898.11it/s] 33%|███▎      | 180/545 [00:00<00:00, 898.46it/s] 50%|████▉     | 270/545 [00:00<00:00, 882.81it/s] 66%|██████▌   | 359/545 [00:00<00:00, 884.22it/s] 82%|████████▏ | 448/545 [00:00<00:00, 885.82it/s] 99%|█████████▊| 538/545 [00:00<00:00, 888.52it/s]100%|██████████| 545/545 [00:00<00:00, 888.13it/s]
2025-05-16:03:34:38,519 INFO     [task.py:428] Building contexts for mmlu_us_foreign_policy on rank 0...
  0%|          | 0/100 [00:00<?, ?it/s] 90%|█████████ | 90/100 [00:00<00:00, 896.29it/s]100%|██████████| 100/100 [00:00<00:00, 891.63it/s]
2025-05-16:03:34:38,635 INFO     [task.py:428] Building contexts for mmlu_high_school_macroeconomics on rank 0...
  0%|          | 0/390 [00:00<?, ?it/s] 23%|██▎       | 90/390 [00:00<00:00, 898.67it/s] 46%|████▌     | 180/390 [00:00<00:00, 893.13it/s] 69%|██████▉   | 270/390 [00:00<00:00, 892.74it/s] 92%|█████████▏| 360/390 [00:00<00:00, 892.05it/s]100%|██████████| 390/390 [00:00<00:00, 891.96it/s]
2025-05-16:03:34:39,085 INFO     [task.py:428] Building contexts for mmlu_high_school_microeconomics on rank 0...
  0%|          | 0/238 [00:00<?, ?it/s] 38%|███▊      | 90/238 [00:00<00:00, 893.62it/s] 76%|███████▌  | 180/238 [00:00<00:00, 896.87it/s]100%|██████████| 238/238 [00:00<00:00, 897.41it/s]
2025-05-16:03:34:39,358 INFO     [task.py:428] Building contexts for mmlu_econometrics on rank 0...
  0%|          | 0/114 [00:00<?, ?it/s] 79%|███████▉  | 90/114 [00:00<00:00, 898.75it/s]100%|██████████| 114/114 [00:00<00:00, 896.10it/s]
2025-05-16:03:34:39,490 INFO     [task.py:428] Building contexts for mmlu_professional_psychology on rank 0...
  0%|          | 0/612 [00:00<?, ?it/s] 15%|█▍        | 90/612 [00:00<00:00, 893.37it/s] 29%|██▉       | 180/612 [00:00<00:00, 789.63it/s] 42%|████▏     | 260/612 [00:00<00:00, 752.94it/s] 55%|█████▍    | 336/612 [00:00<00:00, 735.91it/s] 67%|██████▋   | 410/612 [00:00<00:00, 725.22it/s] 79%|███████▉  | 483/612 [00:00<00:00, 721.56it/s] 91%|█████████ | 556/612 [00:00<00:00, 719.78it/s]100%|██████████| 612/612 [00:00<00:00, 735.90it/s]
2025-05-16:03:34:40,341 INFO     [task.py:428] Building contexts for mmlu_human_sexuality on rank 0...
  0%|          | 0/131 [00:00<?, ?it/s] 50%|████▉     | 65/131 [00:00<00:00, 648.74it/s]100%|██████████| 131/131 [00:00<00:00, 683.70it/s]
2025-05-16:03:34:40,540 INFO     [task.py:428] Building contexts for mmlu_high_school_government_and_politics on rank 0...
  0%|          | 0/193 [00:00<?, ?it/s] 38%|███▊      | 73/193 [00:00<00:00, 726.53it/s] 76%|███████▌  | 147/193 [00:00<00:00, 729.55it/s]100%|██████████| 193/193 [00:00<00:00, 729.07it/s]
2025-05-16:03:34:40,814 INFO     [task.py:428] Building contexts for mmlu_moral_scenarios on rank 0...
  0%|          | 0/895 [00:00<?, ?it/s]  8%|▊         | 73/895 [00:00<00:01, 725.97it/s] 16%|█▋        | 146/895 [00:00<00:01, 727.35it/s] 25%|██▍       | 220/895 [00:00<00:00, 730.91it/s] 33%|███▎      | 295/895 [00:00<00:00, 734.97it/s] 41%|████      | 369/895 [00:00<00:00, 732.98it/s] 49%|████▉     | 443/895 [00:00<00:00, 734.72it/s] 58%|█████▊    | 518/895 [00:00<00:00, 736.90it/s] 66%|██████▌   | 592/895 [00:00<00:00, 736.05it/s] 74%|███████▍  | 666/895 [00:00<00:00, 735.44it/s] 83%|████████▎ | 741/895 [00:01<00:00, 738.72it/s] 92%|█████████▏| 823/895 [00:01<00:00, 761.92it/s]100%|██████████| 895/895 [00:01<00:00, 750.97it/s]
2025-05-16:03:34:42,040 INFO     [task.py:428] Building contexts for mmlu_high_school_world_history on rank 0...
  0%|          | 0/237 [00:00<?, ?it/s] 32%|███▏      | 75/237 [00:00<00:00, 741.13it/s] 63%|██████▎   | 150/237 [00:00<00:00, 744.23it/s] 95%|█████████▌| 226/237 [00:00<00:00, 748.41it/s]100%|██████████| 237/237 [00:00<00:00, 745.45it/s]
2025-05-16:03:34:42,368 INFO     [task.py:428] Building contexts for mmlu_high_school_european_history on rank 0...
  0%|          | 0/165 [00:00<?, ?it/s] 46%|████▌     | 76/165 [00:00<00:00, 752.39it/s] 92%|█████████▏| 152/165 [00:00<00:00, 753.93it/s]100%|██████████| 165/165 [00:00<00:00, 752.52it/s]
2025-05-16:03:34:42,595 INFO     [task.py:428] Building contexts for mmlu_philosophy on rank 0...
  0%|          | 0/311 [00:00<?, ?it/s] 24%|██▍       | 76/311 [00:00<00:00, 755.81it/s] 49%|████▉     | 152/311 [00:00<00:00, 750.81it/s] 73%|███████▎  | 228/311 [00:00<00:00, 725.34it/s] 97%|█████████▋| 301/311 [00:00<00:00, 706.68it/s]100%|██████████| 311/311 [00:00<00:00, 717.95it/s]
2025-05-16:03:34:43,042 INFO     [task.py:428] Building contexts for mmlu_moral_disputes on rank 0...
  0%|          | 0/346 [00:00<?, ?it/s] 21%|██        | 73/346 [00:00<00:00, 728.35it/s] 43%|████▎     | 148/346 [00:00<00:00, 739.32it/s] 64%|██████▍   | 223/346 [00:00<00:00, 741.26it/s] 86%|████████▌ | 298/346 [00:00<00:00, 743.84it/s]100%|██████████| 346/346 [00:00<00:00, 741.48it/s]
2025-05-16:03:34:43,523 INFO     [task.py:428] Building contexts for mmlu_high_school_us_history on rank 0...
  0%|          | 0/204 [00:00<?, ?it/s] 37%|███▋      | 76/204 [00:00<00:00, 755.59it/s] 75%|███████▍  | 152/204 [00:00<00:00, 753.60it/s]100%|██████████| 204/204 [00:00<00:00, 752.74it/s]
2025-05-16:03:34:43,803 INFO     [task.py:428] Building contexts for mmlu_international_law on rank 0...
  0%|          | 0/121 [00:00<?, ?it/s] 63%|██████▎   | 76/121 [00:00<00:00, 754.28it/s]100%|██████████| 121/121 [00:00<00:00, 754.24it/s]
2025-05-16:03:34:43,969 INFO     [task.py:428] Building contexts for mmlu_professional_law on rank 0...
  0%|          | 0/1534 [00:00<?, ?it/s]  5%|▍         | 74/1534 [00:00<00:01, 732.13it/s] 10%|▉         | 149/1534 [00:00<00:01, 737.92it/s] 15%|█▍        | 224/1534 [00:00<00:01, 741.33it/s] 19%|█▉        | 299/1534 [00:00<00:01, 741.92it/s] 24%|██▍       | 374/1534 [00:00<00:01, 742.37it/s] 29%|██▉       | 449/1534 [00:00<00:01, 742.84it/s] 34%|███▍      | 524/1534 [00:00<00:01, 744.30it/s] 39%|███▉      | 599/1534 [00:00<00:01, 743.85it/s] 44%|████▍     | 674/1534 [00:00<00:01, 745.49it/s] 49%|████▉     | 749/1534 [00:01<00:01, 743.87it/s] 54%|█████▎    | 824/1534 [00:01<00:00, 737.44it/s] 59%|█████▊    | 898/1534 [00:01<00:00, 736.85it/s] 63%|██████▎   | 973/1534 [00:01<00:00, 739.01it/s] 68%|██████▊   | 1049/1534 [00:01<00:00, 744.12it/s] 74%|███████▍  | 1134/1534 [00:01<00:00, 774.32it/s] 79%|███████▉  | 1214/1534 [00:01<00:00, 780.42it/s] 84%|████████▍ | 1293/1534 [00:01<00:00, 769.46it/s] 89%|████████▉ | 1370/1534 [00:01<00:00, 762.28it/s] 94%|█████████▍| 1447/1534 [00:01<00:00, 761.37it/s] 99%|█████████▉| 1524/1534 [00:02<00:00, 756.93it/s]100%|██████████| 1534/1534 [00:02<00:00, 750.90it/s]
2025-05-16:03:34:46,071 INFO     [task.py:428] Building contexts for mmlu_world_religions on rank 0...
  0%|          | 0/171 [00:00<?, ?it/s] 44%|████▍     | 76/171 [00:00<00:00, 751.05it/s] 89%|████████▉ | 152/171 [00:00<00:00, 735.23it/s]100%|██████████| 171/171 [00:00<00:00, 731.87it/s]
2025-05-16:03:34:46,313 INFO     [task.py:428] Building contexts for mmlu_jurisprudence on rank 0...
  0%|          | 0/108 [00:00<?, ?it/s] 69%|██████▊   | 74/108 [00:00<00:00, 734.50it/s]100%|██████████| 108/108 [00:00<00:00, 733.70it/s]
2025-05-16:03:34:46,467 INFO     [task.py:428] Building contexts for mmlu_formal_logic on rank 0...
  0%|          | 0/126 [00:00<?, ?it/s] 59%|█████▊    | 74/126 [00:00<00:00, 735.79it/s]100%|██████████| 126/126 [00:00<00:00, 737.21it/s]
2025-05-16:03:34:46,645 INFO     [task.py:428] Building contexts for mmlu_prehistory on rank 0...
  0%|          | 0/324 [00:00<?, ?it/s] 23%|██▎       | 75/324 [00:00<00:00, 742.42it/s] 46%|████▋     | 150/324 [00:00<00:00, 268.79it/s] 68%|██████▊   | 220/324 [00:00<00:00, 368.23it/s] 91%|█████████ | 295/324 [00:00<00:00, 462.29it/s]100%|██████████| 324/324 [00:00<00:00, 435.07it/s]
2025-05-16:03:34:47,403 INFO     [task.py:428] Building contexts for mmlu_logical_fallacies on rank 0...
  0%|          | 0/163 [00:00<?, ?it/s] 45%|████▌     | 74/163 [00:00<00:00, 738.20it/s] 91%|█████████ | 148/163 [00:00<00:00, 734.11it/s]100%|██████████| 163/163 [00:00<00:00, 728.57it/s]
2025-05-16:03:34:47,636 INFO     [evaluator.py:485] Running loglikelihood requests
Running loglikelihood requests:   0%|          | 0/56168 [00:00<?, ?it/s]Starting from v4.46, the `logits` model output will have the same type as the model (except at train time, where it will always be FP32)
Running loglikelihood requests:   0%|          | 1/56168 [00:02<31:33:16,  2.02s/it]Running loglikelihood requests:   0%|          | 65/56168 [00:02<34:17, 27.26it/s]  Running loglikelihood requests:   0%|          | 129/56168 [00:03<21:49, 42.80it/s]Running loglikelihood requests:   0%|          | 193/56168 [00:04<17:21, 53.77it/s]Running loglikelihood requests:   0%|          | 257/56168 [00:05<15:08, 61.53it/s]Running loglikelihood requests:   1%|          | 321/56168 [00:06<13:46, 67.59it/s]Running loglikelihood requests:   1%|          | 385/56168 [00:07<12:51, 72.35it/s]Running loglikelihood requests:   1%|          | 449/56168 [00:07<12:11, 76.22it/s]Running loglikelihood requests:   1%|          | 513/56168 [00:08<11:41, 79.39it/s]Running loglikelihood requests:   1%|          | 577/56168 [00:09<11:12, 82.61it/s]Running loglikelihood requests:   1%|          | 641/56168 [00:09<10:52, 85.12it/s]Running loglikelihood requests:   1%|▏         | 705/56168 [00:10<10:32, 87.64it/s]Running loglikelihood requests:   1%|▏         | 769/56168 [00:11<10:19, 89.38it/s]Running loglikelihood requests:   1%|▏         | 833/56168 [00:11<10:05, 91.34it/s]Running loglikelihood requests:   2%|▏         | 897/56168 [00:12<09:55, 92.77it/s]Running loglikelihood requests:   2%|▏         | 961/56168 [00:13<09:42, 94.71it/s]Running loglikelihood requests:   2%|▏         | 1025/56168 [00:13<09:33, 96.18it/s]Running loglikelihood requests:   2%|▏         | 1089/56168 [00:14<09:23, 97.80it/s]Running loglikelihood requests:   2%|▏         | 1153/56168 [00:15<09:15, 99.02it/s]Running loglikelihood requests:   2%|▏         | 1217/56168 [00:15<09:06, 100.54it/s]Running loglikelihood requests:   2%|▏         | 1281/56168 [00:16<08:59, 101.78it/s]Running loglikelihood requests:   2%|▏         | 1345/56168 [00:17<08:53, 102.83it/s]Running loglikelihood requests:   3%|▎         | 1409/56168 [00:17<08:40, 105.20it/s]Running loglikelihood requests:   3%|▎         | 1473/56168 [00:18<08:31, 106.95it/s]Running loglikelihood requests:   3%|▎         | 1537/56168 [00:18<08:23, 108.46it/s]Running loglikelihood requests:   3%|▎         | 1601/56168 [00:19<08:17, 109.59it/s]Running loglikelihood requests:   3%|▎         | 1665/56168 [00:19<08:10, 111.05it/s]Running loglikelihood requests:   3%|▎         | 1729/56168 [00:20<08:05, 112.12it/s]Running loglikelihood requests:   3%|▎         | 1793/56168 [00:20<08:00, 113.17it/s]Running loglikelihood requests:   3%|▎         | 1857/56168 [00:21<07:56, 113.93it/s]Running loglikelihood requests:   3%|▎         | 1921/56168 [00:22<07:51, 115.09it/s]Running loglikelihood requests:   4%|▎         | 1985/56168 [00:22<07:47, 115.82it/s]Running loglikelihood requests:   4%|▎         | 2049/56168 [00:23<07:43, 116.67it/s]Running loglikelihood requests:   4%|▍         | 2113/56168 [00:23<07:40, 117.34it/s]Running loglikelihood requests:   4%|▍         | 2177/56168 [00:24<07:34, 118.80it/s]Running loglikelihood requests:   4%|▍         | 2241/56168 [00:24<07:29, 119.91it/s]Running loglikelihood requests:   4%|▍         | 2305/56168 [00:25<07:26, 120.74it/s]Running loglikelihood requests:   4%|▍         | 2369/56168 [00:25<07:20, 122.12it/s]Running loglikelihood requests:   4%|▍         | 2433/56168 [00:26<07:16, 123.15it/s]Running loglikelihood requests:   4%|▍         | 2497/56168 [00:26<07:13, 123.85it/s]Running loglikelihood requests:   5%|▍         | 2561/56168 [00:27<07:10, 124.56it/s]Running loglikelihood requests:   5%|▍         | 2625/56168 [00:27<07:04, 126.00it/s]Running loglikelihood requests:   5%|▍         | 2689/56168 [00:28<07:01, 127.00it/s]Running loglikelihood requests:   5%|▍         | 2753/56168 [00:28<06:57, 127.93it/s]Running loglikelihood requests:   5%|▌         | 2817/56168 [00:29<06:55, 128.54it/s]Running loglikelihood requests:   5%|▌         | 2881/56168 [00:29<06:52, 129.20it/s]Running loglikelihood requests:   5%|▌         | 2945/56168 [00:30<06:50, 129.69it/s]Running loglikelihood requests:   5%|▌         | 3009/56168 [00:30<06:48, 130.21it/s]Running loglikelihood requests:   5%|▌         | 3073/56168 [00:31<06:44, 131.16it/s]Running loglikelihood requests:   6%|▌         | 3137/56168 [00:31<06:41, 132.03it/s]Running loglikelihood requests:   6%|▌         | 3201/56168 [00:32<06:39, 132.54it/s]Running loglikelihood requests:   6%|▌         | 3265/56168 [00:32<06:37, 133.03it/s]Running loglikelihood requests:   6%|▌         | 3329/56168 [00:33<06:35, 133.46it/s]Running loglikelihood requests:   6%|▌         | 3393/56168 [00:33<06:34, 133.68it/s]Running loglikelihood requests:   6%|▌         | 3457/56168 [00:34<06:33, 134.05it/s]Running loglikelihood requests:   6%|▋         | 3521/56168 [00:34<06:31, 134.44it/s]Running loglikelihood requests:   6%|▋         | 3585/56168 [00:35<06:30, 134.66it/s]Running loglikelihood requests:   6%|▋         | 3649/56168 [00:35<06:26, 135.77it/s]Running loglikelihood requests:   7%|▋         | 3713/56168 [00:35<06:23, 136.62it/s]Running loglikelihood requests:   7%|▋         | 3777/56168 [00:36<06:21, 137.24it/s]Running loglikelihood requests:   7%|▋         | 3841/56168 [00:36<06:19, 137.72it/s]Running loglikelihood requests:   7%|▋         | 3905/56168 [00:37<06:18, 138.25it/s]Running loglikelihood requests:   7%|▋         | 3969/56168 [00:37<06:16, 138.79it/s]Running loglikelihood requests:   7%|▋         | 4033/56168 [00:38<06:14, 139.20it/s]Running loglikelihood requests:   7%|▋         | 4097/56168 [00:38<06:07, 141.59it/s]Running loglikelihood requests:   7%|▋         | 4161/56168 [00:39<06:02, 143.42it/s]Running loglikelihood requests:   8%|▊         | 4225/56168 [00:39<05:58, 144.90it/s]Running loglikelihood requests:   8%|▊         | 4289/56168 [00:39<05:55, 145.88it/s]Running loglikelihood requests:   8%|▊         | 4353/56168 [00:40<05:53, 146.75it/s]Running loglikelihood requests:   8%|▊         | 4417/56168 [00:40<05:50, 147.55it/s]Running loglikelihood requests:   8%|▊         | 4481/56168 [00:41<05:48, 148.26it/s]Running loglikelihood requests:   8%|▊         | 4545/56168 [00:41<05:47, 148.77it/s]Running loglikelihood requests:   8%|▊         | 4609/56168 [00:42<05:45, 149.19it/s]Running loglikelihood requests:   8%|▊         | 4673/56168 [00:42<05:42, 150.36it/s]Running loglikelihood requests:   8%|▊         | 4737/56168 [00:42<05:40, 151.17it/s]Running loglikelihood requests:   9%|▊         | 4801/56168 [00:43<05:37, 152.01it/s]Running loglikelihood requests:   9%|▊         | 4865/56168 [00:43<05:36, 152.51it/s]Running loglikelihood requests:   9%|▉         | 4929/56168 [00:44<05:34, 153.05it/s]Running loglikelihood requests:   9%|▉         | 4993/56168 [00:44<05:33, 153.48it/s]Running loglikelihood requests:   9%|▉         | 5057/56168 [00:45<05:32, 153.83it/s]Running loglikelihood requests:   9%|▉         | 5121/56168 [00:45<05:30, 154.36it/s]Running loglikelihood requests:   9%|▉         | 5185/56168 [00:45<05:30, 154.46it/s]Running loglikelihood requests:   9%|▉         | 5249/56168 [00:46<05:26, 155.82it/s]Running loglikelihood requests:   9%|▉         | 5313/56168 [00:46<05:24, 156.92it/s]Running loglikelihood requests:  10%|▉         | 5377/56168 [00:47<05:22, 157.62it/s]Running loglikelihood requests:  10%|▉         | 5441/56168 [00:47<05:20, 158.25it/s]Running loglikelihood requests:  10%|▉         | 5505/56168 [00:47<05:18, 158.92it/s]Running loglikelihood requests:  10%|▉         | 5569/56168 [00:48<05:17, 159.37it/s]Running loglikelihood requests:  10%|█         | 5633/56168 [00:48<05:16, 159.70it/s]Running loglikelihood requests:  10%|█         | 5697/56168 [00:49<05:15, 159.89it/s]Running loglikelihood requests:  10%|█         | 5761/56168 [00:49<05:14, 160.31it/s]Running loglikelihood requests:  10%|█         | 5825/56168 [00:49<05:12, 160.99it/s]Running loglikelihood requests:  10%|█         | 5889/56168 [00:50<05:09, 162.20it/s]Running loglikelihood requests:  11%|█         | 5953/56168 [00:50<05:08, 162.84it/s]Running loglikelihood requests:  11%|█         | 6017/56168 [00:50<05:06, 163.72it/s]Running loglikelihood requests:  11%|█         | 6081/56168 [00:51<05:04, 164.52it/s]Running loglikelihood requests:  11%|█         | 6145/56168 [00:51<05:03, 164.89it/s]Running loglikelihood requests:  11%|█         | 6209/56168 [00:52<05:02, 165.31it/s]Running loglikelihood requests:  11%|█         | 6273/56168 [00:52<04:58, 167.00it/s]Running loglikelihood requests:  11%|█▏        | 6337/56168 [00:52<04:56, 168.27it/s]Running loglikelihood requests:  11%|█▏        | 6401/56168 [00:53<04:53, 169.29it/s]Running loglikelihood requests:  12%|█▏        | 6465/56168 [00:53<04:52, 169.98it/s]Running loglikelihood requests:  12%|█▏        | 6529/56168 [00:54<04:50, 170.65it/s]Running loglikelihood requests:  12%|█▏        | 6593/56168 [00:54<04:49, 171.01it/s]Running loglikelihood requests:  12%|█▏        | 6657/56168 [00:54<04:48, 171.54it/s]Running loglikelihood requests:  12%|█▏        | 6721/56168 [00:55<04:43, 174.12it/s]Running loglikelihood requests:  12%|█▏        | 6785/56168 [00:55<04:40, 176.18it/s]Running loglikelihood requests:  12%|█▏        | 6849/56168 [00:55<04:37, 177.64it/s]Running loglikelihood requests:  12%|█▏        | 6913/56168 [00:56<04:35, 178.86it/s]Running loglikelihood requests:  12%|█▏        | 6977/56168 [00:56<04:33, 179.85it/s]Running loglikelihood requests:  13%|█▎        | 7041/56168 [00:56<04:32, 180.60it/s]Running loglikelihood requests:  13%|█▎        | 7105/56168 [00:57<04:30, 181.50it/s]Running loglikelihood requests:  13%|█▎        | 7169/56168 [00:57<04:29, 181.75it/s]Running loglikelihood requests:  13%|█▎        | 7233/56168 [00:57<04:28, 182.16it/s]Running loglikelihood requests:  13%|█▎        | 7297/56168 [00:58<04:27, 182.77it/s]Running loglikelihood requests:  13%|█▎        | 7361/56168 [00:58<04:26, 183.23it/s]Running loglikelihood requests:  13%|█▎        | 7425/56168 [00:58<04:26, 183.08it/s]Running loglikelihood requests:  13%|█▎        | 7489/56168 [00:59<04:24, 183.84it/s]Running loglikelihood requests:  13%|█▎        | 7553/56168 [00:59<04:22, 185.29it/s]Running loglikelihood requests:  14%|█▎        | 7617/56168 [00:59<04:21, 185.54it/s]Running loglikelihood requests:  14%|█▎        | 7681/56168 [01:00<04:20, 186.17it/s]Running loglikelihood requests:  14%|█▍        | 7745/56168 [01:00<04:20, 186.20it/s]Running loglikelihood requests:  14%|█▍        | 7809/56168 [01:01<04:19, 186.55it/s]Running loglikelihood requests:  14%|█▍        | 7873/56168 [01:01<04:17, 187.81it/s]Running loglikelihood requests:  14%|█▍        | 7937/56168 [01:01<04:15, 188.67it/s]Running loglikelihood requests:  14%|█▍        | 8001/56168 [01:02<04:14, 189.08it/s]Running loglikelihood requests:  14%|█▍        | 8065/56168 [01:02<04:13, 189.84it/s]Running loglikelihood requests:  14%|█▍        | 8129/56168 [01:02<04:12, 190.41it/s]Running loglikelihood requests:  15%|█▍        | 8193/56168 [01:03<04:09, 192.52it/s]Running loglikelihood requests:  15%|█▍        | 8257/56168 [01:03<04:07, 193.71it/s]Running loglikelihood requests:  15%|█▍        | 8321/56168 [01:03<04:05, 194.69it/s]Running loglikelihood requests:  15%|█▍        | 8385/56168 [01:03<04:04, 195.67it/s]Running loglikelihood requests:  15%|█▌        | 8449/56168 [01:04<04:02, 196.42it/s]Running loglikelihood requests:  15%|█▌        | 8513/56168 [01:04<04:01, 196.94it/s]Running loglikelihood requests:  15%|█▌        | 8577/56168 [01:04<04:00, 197.81it/s]Running loglikelihood requests:  15%|█▌        | 8641/56168 [01:05<03:54, 202.76it/s]Running loglikelihood requests:  15%|█▌        | 8705/56168 [01:05<03:49, 206.61it/s]Running loglikelihood requests:  16%|█▌        | 8769/56168 [01:05<03:45, 209.75it/s]Running loglikelihood requests:  16%|█▌        | 8833/56168 [01:06<03:43, 212.04it/s]Running loglikelihood requests:  16%|█▌        | 8897/56168 [01:06<03:41, 213.71it/s]Running loglikelihood requests:  16%|█▌        | 8961/56168 [01:06<03:39, 214.82it/s]Running loglikelihood requests:  16%|█▌        | 9025/56168 [01:07<03:37, 216.69it/s]Running loglikelihood requests:  16%|█▌        | 9089/56168 [01:07<03:35, 218.10it/s]Running loglikelihood requests:  16%|█▋        | 9153/56168 [01:07<03:34, 219.54it/s]Running loglikelihood requests:  16%|█▋        | 9217/56168 [01:07<03:32, 221.00it/s]Running loglikelihood requests:  17%|█▋        | 9281/56168 [01:08<03:31, 221.74it/s]Running loglikelihood requests:  17%|█▋        | 9345/56168 [01:08<03:30, 222.43it/s]Running loglikelihood requests:  17%|█▋        | 9409/56168 [01:08<03:28, 224.30it/s]Running loglikelihood requests:  17%|█▋        | 9473/56168 [01:09<03:26, 225.73it/s]Running loglikelihood requests:  17%|█▋        | 9537/56168 [01:09<03:25, 227.32it/s]Running loglikelihood requests:  17%|█▋        | 9601/56168 [01:09<03:23, 228.43it/s]Running loglikelihood requests:  17%|█▋        | 9665/56168 [01:09<03:23, 229.05it/s]Running loglikelihood requests:  17%|█▋        | 9729/56168 [01:10<03:22, 229.55it/s]Running loglikelihood requests:  17%|█▋        | 9793/56168 [01:10<03:21, 230.55it/s]Running loglikelihood requests:  18%|█▊        | 9857/56168 [01:10<03:19, 231.96it/s]Running loglikelihood requests:  18%|█▊        | 9921/56168 [01:10<03:18, 233.45it/s]Running loglikelihood requests:  18%|█▊        | 9985/56168 [01:11<03:17, 234.10it/s]Running loglikelihood requests:  18%|█▊        | 10049/56168 [01:11<03:16, 235.17it/s]Running loglikelihood requests:  18%|█▊        | 10113/56168 [01:11<03:15, 235.87it/s]Running loglikelihood requests:  18%|█▊        | 10177/56168 [01:12<03:14, 236.85it/s]Running loglikelihood requests:  18%|█▊        | 10241/56168 [01:12<03:13, 237.22it/s]Running loglikelihood requests:  18%|█▊        | 10305/56168 [01:12<03:11, 238.89it/s]Running loglikelihood requests:  18%|█▊        | 10369/56168 [01:12<03:10, 240.24it/s]Running loglikelihood requests:  19%|█▊        | 10433/56168 [01:13<03:09, 241.52it/s]Running loglikelihood requests:  19%|█▊        | 10497/56168 [01:13<03:08, 242.87it/s]Running loglikelihood requests:  19%|█▉        | 10561/56168 [01:13<03:07, 243.24it/s]Running loglikelihood requests:  19%|█▉        | 10625/56168 [01:13<03:06, 244.20it/s]Running loglikelihood requests:  19%|█▉        | 10689/56168 [01:14<03:05, 244.86it/s]Running loglikelihood requests:  19%|█▉        | 10753/56168 [01:14<03:05, 245.04it/s]Running loglikelihood requests:  19%|█▉        | 10817/56168 [01:14<03:04, 245.72it/s]Running loglikelihood requests:  19%|█▉        | 10881/56168 [01:14<03:03, 246.83it/s]Running loglikelihood requests:  19%|█▉        | 10945/56168 [01:15<03:02, 248.13it/s]Running loglikelihood requests:  20%|█▉        | 11009/56168 [01:15<03:00, 249.83it/s]Running loglikelihood requests:  20%|█▉        | 11073/56168 [01:15<02:59, 250.60it/s]Running loglikelihood requests:  20%|█▉        | 11137/56168 [01:15<02:59, 251.37it/s]Running loglikelihood requests:  20%|█▉        | 11201/56168 [01:16<02:57, 252.84it/s]Running loglikelihood requests:  20%|██        | 11265/56168 [01:16<02:57, 253.28it/s]Running loglikelihood requests:  20%|██        | 11329/56168 [01:16<02:56, 253.47it/s]Running loglikelihood requests:  20%|██        | 11393/56168 [01:16<02:55, 255.22it/s]Running loglikelihood requests:  20%|██        | 11457/56168 [01:17<02:53, 257.72it/s]Running loglikelihood requests:  21%|██        | 11521/56168 [01:17<02:52, 258.94it/s]Running loglikelihood requests:  21%|██        | 11585/56168 [01:17<02:51, 259.53it/s]Running loglikelihood requests:  21%|██        | 11649/56168 [01:17<02:50, 260.57it/s]Running loglikelihood requests:  21%|██        | 11713/56168 [01:18<02:49, 261.68it/s]Running loglikelihood requests:  21%|██        | 11777/56168 [01:18<02:49, 262.40it/s]Running loglikelihood requests:  21%|██        | 11841/56168 [01:18<02:48, 262.64it/s]Running loglikelihood requests:  21%|██        | 11909/56168 [01:18<02:44, 268.42it/s]Running loglikelihood requests:  21%|██▏       | 11973/56168 [01:19<02:45, 267.07it/s]Running loglikelihood requests:  21%|██▏       | 12037/56168 [01:19<02:42, 271.79it/s]Running loglikelihood requests:  22%|██▏       | 12101/56168 [01:19<02:40, 274.19it/s]Running loglikelihood requests:  22%|██▏       | 12165/56168 [01:19<02:39, 275.72it/s]Running loglikelihood requests:  22%|██▏       | 12229/56168 [01:19<02:38, 277.07it/s]Running loglikelihood requests:  22%|██▏       | 12293/56168 [01:20<02:37, 279.28it/s]Running loglikelihood requests:  22%|██▏       | 12357/56168 [01:20<02:36, 280.61it/s]Running loglikelihood requests:  22%|██▏       | 12421/56168 [01:20<02:35, 281.37it/s]Running loglikelihood requests:  22%|██▏       | 12485/56168 [01:20<02:35, 281.25it/s]Running loglikelihood requests:  22%|██▏       | 12549/56168 [01:21<02:34, 281.76it/s]Running loglikelihood requests:  22%|██▏       | 12613/56168 [01:21<02:33, 283.19it/s]Running loglikelihood requests:  23%|██▎       | 12677/56168 [01:21<02:33, 284.14it/s]Running loglikelihood requests:  23%|██▎       | 12741/56168 [01:21<02:32, 284.65it/s]Running loglikelihood requests:  23%|██▎       | 12805/56168 [01:22<02:32, 284.62it/s]Running loglikelihood requests:  23%|██▎       | 12869/56168 [01:22<02:30, 287.57it/s]Running loglikelihood requests:  23%|██▎       | 12933/56168 [01:22<02:29, 289.98it/s]Running loglikelihood requests:  23%|██▎       | 12997/56168 [01:22<02:28, 291.56it/s]Running loglikelihood requests:  23%|██▎       | 13061/56168 [01:22<02:27, 292.58it/s]Running loglikelihood requests:  23%|██▎       | 13125/56168 [01:23<02:26, 293.38it/s]Running loglikelihood requests:  23%|██▎       | 13189/56168 [01:23<02:25, 294.63it/s]Running loglikelihood requests:  24%|██▎       | 13253/56168 [01:23<02:25, 295.40it/s]Running loglikelihood requests:  24%|██▎       | 13317/56168 [01:23<02:25, 295.47it/s]Running loglikelihood requests:  24%|██▍       | 13381/56168 [01:23<02:24, 296.26it/s]Running loglikelihood requests:  24%|██▍       | 13445/56168 [01:24<02:24, 296.23it/s]Running loglikelihood requests:  24%|██▍       | 13509/56168 [01:24<02:23, 296.57it/s]Running loglikelihood requests:  24%|██▍       | 13573/56168 [01:24<02:23, 296.80it/s]Running loglikelihood requests:  24%|██▍       | 13637/56168 [01:24<02:23, 297.32it/s]Running loglikelihood requests:  24%|██▍       | 13701/56168 [01:25<02:22, 297.63it/s]Running loglikelihood requests:  25%|██▍       | 13765/56168 [01:25<02:22, 298.02it/s]Running loglikelihood requests:  25%|██▍       | 13829/56168 [01:25<02:21, 298.32it/s]Running loglikelihood requests:  25%|██▍       | 13893/56168 [01:25<02:21, 298.86it/s]Running loglikelihood requests:  25%|██▍       | 13957/56168 [01:25<02:21, 298.79it/s]Running loglikelihood requests:  25%|██▍       | 14021/56168 [01:26<02:20, 300.22it/s]Running loglikelihood requests:  25%|██▌       | 14085/56168 [01:26<02:19, 300.86it/s]Running loglikelihood requests:  25%|██▌       | 14149/56168 [01:26<02:19, 301.26it/s]Running loglikelihood requests:  25%|██▌       | 14213/56168 [01:26<02:19, 301.59it/s]Running loglikelihood requests:  25%|██▌       | 14277/56168 [01:26<02:18, 302.31it/s]Running loglikelihood requests:  26%|██▌       | 14341/56168 [01:27<02:18, 302.79it/s]Running loglikelihood requests:  26%|██▌       | 14405/56168 [01:27<02:17, 303.30it/s]Running loglikelihood requests:  26%|██▌       | 14469/56168 [01:27<02:17, 303.44it/s]Running loglikelihood requests:  26%|██▌       | 14533/56168 [01:27<02:16, 304.00it/s]Running loglikelihood requests:  26%|██▌       | 14597/56168 [01:28<02:16, 303.70it/s]Running loglikelihood requests:  26%|██▌       | 14661/56168 [01:28<02:16, 304.04it/s]Running loglikelihood requests:  26%|██▌       | 14725/56168 [01:28<02:16, 304.69it/s]Running loglikelihood requests:  26%|██▋       | 14789/56168 [01:28<02:15, 304.73it/s]Running loglikelihood requests:  26%|██▋       | 14853/56168 [01:28<02:15, 305.74it/s]Running loglikelihood requests:  27%|██▋       | 14917/56168 [01:29<02:15, 305.21it/s]Running loglikelihood requests:  27%|██▋       | 14981/56168 [01:29<02:15, 304.58it/s]Running loglikelihood requests:  27%|██▋       | 15045/56168 [01:29<02:14, 305.16it/s]Running loglikelihood requests:  27%|██▋       | 15109/56168 [01:29<02:14, 305.34it/s]Running loglikelihood requests:  27%|██▋       | 15173/56168 [01:29<02:14, 305.51it/s]Running loglikelihood requests:  27%|██▋       | 15237/56168 [01:30<02:13, 306.68it/s]Running loglikelihood requests:  27%|██▋       | 15301/56168 [01:30<02:13, 306.48it/s]Running loglikelihood requests:  27%|██▋       | 15365/56168 [01:30<02:12, 307.07it/s]Running loglikelihood requests:  27%|██▋       | 15429/56168 [01:30<02:12, 307.92it/s]Running loglikelihood requests:  28%|██▊       | 15493/56168 [01:30<02:11, 308.46it/s]Running loglikelihood requests:  28%|██▊       | 15557/56168 [01:31<02:11, 308.27it/s]Running loglikelihood requests:  28%|██▊       | 15621/56168 [01:31<02:11, 308.41it/s]Running loglikelihood requests:  28%|██▊       | 15685/56168 [01:31<02:11, 308.89it/s]Running loglikelihood requests:  28%|██▊       | 15749/56168 [01:31<02:10, 309.22it/s]Running loglikelihood requests:  28%|██▊       | 15813/56168 [01:31<02:10, 309.54it/s]Running loglikelihood requests:  28%|██▊       | 15877/56168 [01:32<02:10, 309.48it/s]Running loglikelihood requests:  28%|██▊       | 15941/56168 [01:32<02:09, 309.78it/s]Running loglikelihood requests:  28%|██▊       | 16005/56168 [01:32<02:08, 312.67it/s]Running loglikelihood requests:  29%|██▊       | 16069/56168 [01:32<02:07, 315.72it/s]Running loglikelihood requests:  29%|██▊       | 16133/56168 [01:32<02:06, 317.60it/s]Running loglikelihood requests:  29%|██▉       | 16197/56168 [01:33<02:05, 318.08it/s]Running loglikelihood requests:  29%|██▉       | 16261/56168 [01:33<02:05, 318.59it/s]Running loglikelihood requests:  29%|██▉       | 16325/56168 [01:33<02:05, 318.52it/s]Running loglikelihood requests:  29%|██▉       | 16389/56168 [01:33<02:04, 319.35it/s]Running loglikelihood requests:  29%|██▉       | 16453/56168 [01:33<02:04, 319.88it/s]Running loglikelihood requests:  29%|██▉       | 16517/56168 [01:34<02:03, 320.50it/s]Running loglikelihood requests:  30%|██▉       | 16581/56168 [01:34<02:03, 320.94it/s]Running loglikelihood requests:  30%|██▉       | 16645/56168 [01:34<02:03, 320.83it/s]Running loglikelihood requests:  30%|██▉       | 16709/56168 [01:34<02:02, 321.17it/s]Running loglikelihood requests:  30%|██▉       | 16773/56168 [01:34<02:02, 320.74it/s]Running loglikelihood requests:  30%|██▉       | 16837/56168 [01:35<02:02, 320.79it/s]Running loglikelihood requests:  30%|███       | 16901/56168 [01:35<02:02, 320.90it/s]Running loglikelihood requests:  30%|███       | 16965/56168 [01:35<02:02, 320.98it/s]Running loglikelihood requests:  30%|███       | 17029/56168 [01:35<02:01, 321.58it/s]Running loglikelihood requests:  30%|███       | 17093/56168 [01:35<02:01, 321.89it/s]Running loglikelihood requests:  31%|███       | 17157/56168 [01:36<02:01, 322.14it/s]Running loglikelihood requests:  31%|███       | 17221/56168 [01:36<02:00, 322.19it/s]Running loglikelihood requests:  31%|███       | 17285/56168 [01:36<02:00, 322.34it/s]Running loglikelihood requests:  31%|███       | 17349/56168 [01:36<02:00, 322.03it/s]Running loglikelihood requests:  31%|███       | 17413/56168 [01:36<01:59, 323.16it/s]Running loglikelihood requests:  31%|███       | 17477/56168 [01:37<01:59, 322.93it/s]Running loglikelihood requests:  31%|███       | 17541/56168 [01:37<01:59, 323.47it/s]Running loglikelihood requests:  31%|███▏      | 17605/56168 [01:37<01:59, 323.50it/s]Running loglikelihood requests:  31%|███▏      | 17669/56168 [01:37<01:59, 323.40it/s]Running loglikelihood requests:  32%|███▏      | 17733/56168 [01:37<01:59, 322.64it/s]Running loglikelihood requests:  32%|███▏      | 17797/56168 [01:38<01:58, 322.82it/s]Running loglikelihood requests:  32%|███▏      | 17861/56168 [01:38<01:58, 322.84it/s]Running loglikelihood requests:  32%|███▏      | 17925/56168 [01:38<01:58, 321.48it/s]Running loglikelihood requests:  32%|███▏      | 17989/56168 [01:38<01:58, 322.32it/s]Running loglikelihood requests:  32%|███▏      | 18053/56168 [01:38<01:57, 323.06it/s]Running loglikelihood requests:  32%|███▏      | 18117/56168 [01:39<01:57, 323.63it/s]Running loglikelihood requests:  32%|███▏      | 18181/56168 [01:39<01:57, 323.36it/s]Running loglikelihood requests:  32%|███▏      | 18245/56168 [01:39<01:57, 322.94it/s]Running loglikelihood requests:  33%|███▎      | 18309/56168 [01:39<01:57, 323.11it/s]Running loglikelihood requests:  33%|███▎      | 18373/56168 [01:39<01:56, 323.20it/s]Running loglikelihood requests:  33%|███▎      | 18437/56168 [01:40<01:56, 323.44it/s]Running loglikelihood requests:  33%|███▎      | 18501/56168 [01:40<01:56, 323.46it/s]Running loglikelihood requests:  33%|███▎      | 18565/56168 [01:40<01:56, 323.15it/s]Running loglikelihood requests:  33%|███▎      | 18629/56168 [01:40<01:56, 323.17it/s]Running loglikelihood requests:  33%|███▎      | 18697/56168 [01:40<01:53, 329.97it/s]Running loglikelihood requests:  33%|███▎      | 18761/56168 [01:41<01:53, 328.38it/s]Running loglikelihood requests:  34%|███▎      | 18825/56168 [01:41<01:54, 326.82it/s]Running loglikelihood requests:  34%|███▎      | 18889/56168 [01:41<01:54, 325.70it/s]Running loglikelihood requests:  34%|███▎      | 18953/56168 [01:41<01:52, 329.37it/s]Running loglikelihood requests:  34%|███▍      | 19017/56168 [01:41<01:51, 332.49it/s]Running loglikelihood requests:  34%|███▍      | 19081/56168 [01:42<01:50, 334.46it/s]Running loglikelihood requests:  34%|███▍      | 19145/56168 [01:42<01:50, 335.65it/s]Running loglikelihood requests:  34%|███▍      | 19209/56168 [01:42<01:49, 336.06it/s]Running loglikelihood requests:  34%|███▍      | 19273/56168 [01:42<01:49, 337.19it/s]Running loglikelihood requests:  34%|███▍      | 19337/56168 [01:42<01:48, 337.91it/s]Running loglikelihood requests:  35%|███▍      | 19401/56168 [01:43<01:48, 338.43it/s]Running loglikelihood requests:  35%|███▍      | 19465/56168 [01:43<01:48, 339.29it/s]Running loglikelihood requests:  35%|███▍      | 19529/56168 [01:43<01:47, 339.80it/s]Running loglikelihood requests:  35%|███▍      | 19593/56168 [01:43<01:47, 339.13it/s]Running loglikelihood requests:  35%|███▍      | 19657/56168 [01:43<01:47, 340.22it/s]Running loglikelihood requests:  35%|███▌      | 19721/56168 [01:43<01:47, 339.47it/s]Running loglikelihood requests:  35%|███▌      | 19789/56168 [01:44<01:45, 345.28it/s]Running loglikelihood requests:  35%|███▌      | 19853/56168 [01:44<01:45, 343.60it/s]Running loglikelihood requests:  35%|███▌      | 19917/56168 [01:44<01:45, 342.73it/s]Running loglikelihood requests:  36%|███▌      | 19981/56168 [01:44<01:45, 342.09it/s]Running loglikelihood requests:  36%|███▌      | 20045/56168 [01:44<01:45, 342.48it/s]Running loglikelihood requests:  36%|███▌      | 20109/56168 [01:45<01:45, 341.90it/s]Running loglikelihood requests:  36%|███▌      | 20173/56168 [01:45<01:45, 341.23it/s]Running loglikelihood requests:  36%|███▌      | 20237/56168 [01:45<01:45, 340.48it/s]Running loglikelihood requests:  36%|███▌      | 20305/56168 [01:45<01:42, 348.65it/s]Running loglikelihood requests:  36%|███▋      | 20369/56168 [01:45<01:43, 347.47it/s]Running loglikelihood requests:  36%|███▋      | 20433/56168 [01:46<01:42, 347.09it/s]Running loglikelihood requests:  36%|███▋      | 20497/56168 [01:46<01:43, 346.26it/s]Running loglikelihood requests:  37%|███▋      | 20561/56168 [01:46<01:43, 345.69it/s]Running loglikelihood requests:  37%|███▋      | 20625/56168 [01:46<01:43, 344.84it/s]Running loglikelihood requests:  37%|███▋      | 20689/56168 [01:46<01:42, 345.51it/s]Running loglikelihood requests:  37%|███▋      | 20757/56168 [01:46<01:40, 352.28it/s]Running loglikelihood requests:  37%|███▋      | 20821/56168 [01:47<01:40, 350.11it/s]Running loglikelihood requests:  37%|███▋      | 20885/56168 [01:47<01:40, 349.37it/s]Running loglikelihood requests:  37%|███▋      | 20949/56168 [01:47<01:41, 348.17it/s]Running loglikelihood requests:  37%|███▋      | 21013/56168 [01:47<01:41, 347.42it/s]Running loglikelihood requests:  38%|███▊      | 21077/56168 [01:47<01:41, 346.26it/s]Running loglikelihood requests:  38%|███▊      | 21141/56168 [01:48<01:41, 345.93it/s]Running loglikelihood requests:  38%|███▊      | 21205/56168 [01:48<01:40, 347.14it/s]Running loglikelihood requests:  38%|███▊      | 21269/56168 [01:48<01:40, 347.24it/s]Running loglikelihood requests:  38%|███▊      | 21341/56168 [01:48<01:36, 360.04it/s]Running loglikelihood requests:  38%|███▊      | 21405/56168 [01:48<01:36, 359.63it/s]Running loglikelihood requests:  38%|███▊      | 21469/56168 [01:48<01:36, 359.21it/s]Running loglikelihood requests:  38%|███▊      | 21533/56168 [01:49<01:36, 357.91it/s]Running loglikelihood requests:  38%|███▊      | 21597/56168 [01:49<01:36, 356.50it/s]Running loglikelihood requests:  39%|███▊      | 21661/56168 [01:49<01:36, 355.93it/s]Running loglikelihood requests:  39%|███▊      | 21725/56168 [01:49<01:36, 355.89it/s]Running loglikelihood requests:  39%|███▉      | 21793/56168 [01:49<01:34, 362.97it/s]Running loglikelihood requests:  39%|███▉      | 21857/56168 [01:50<01:34, 362.44it/s]Running loglikelihood requests:  39%|███▉      | 21921/56168 [01:50<01:34, 361.10it/s]Running loglikelihood requests:  39%|███▉      | 21985/56168 [01:50<01:34, 359.92it/s]Running loglikelihood requests:  39%|███▉      | 22049/56168 [01:50<01:35, 358.88it/s]Running loglikelihood requests:  39%|███▉      | 22113/56168 [01:50<01:35, 357.85it/s]Running loglikelihood requests:  39%|███▉      | 22177/56168 [01:50<01:34, 358.36it/s]Running loglikelihood requests:  40%|███▉      | 22241/56168 [01:51<01:34, 358.90it/s]Running loglikelihood requests:  40%|███▉      | 22305/56168 [01:51<01:34, 358.93it/s]Running loglikelihood requests:  40%|███▉      | 22369/56168 [01:51<01:34, 358.62it/s]Running loglikelihood requests:  40%|███▉      | 22433/56168 [01:51<01:33, 359.07it/s]Running loglikelihood requests:  40%|████      | 22497/56168 [01:51<01:33, 359.92it/s]Running loglikelihood requests:  40%|████      | 22561/56168 [01:52<01:33, 360.80it/s]Running loglikelihood requests:  40%|████      | 22625/56168 [01:52<01:33, 360.62it/s]Running loglikelihood requests:  40%|████      | 22689/56168 [01:52<01:32, 360.76it/s]Running loglikelihood requests:  41%|████      | 22753/56168 [01:52<01:32, 362.48it/s]Running loglikelihood requests:  41%|████      | 22817/56168 [01:52<01:31, 362.71it/s]Running loglikelihood requests:  41%|████      | 22881/56168 [01:52<01:31, 362.38it/s]Running loglikelihood requests:  41%|████      | 22945/56168 [01:53<01:31, 362.63it/s]Running loglikelihood requests:  41%|████      | 23009/56168 [01:53<01:31, 362.65it/s]Running loglikelihood requests:  41%|████      | 23073/56168 [01:53<01:31, 362.52it/s]Running loglikelihood requests:  41%|████      | 23137/56168 [01:53<01:31, 362.51it/s]Running loglikelihood requests:  41%|████▏     | 23201/56168 [01:53<01:30, 362.55it/s]Running loglikelihood requests:  41%|████▏     | 23265/56168 [01:53<01:30, 363.30it/s]Running loglikelihood requests:  42%|████▏     | 23329/56168 [01:54<01:30, 362.53it/s]Running loglikelihood requests:  42%|████▏     | 23393/56168 [01:54<01:30, 362.96it/s]Running loglikelihood requests:  42%|████▏     | 23457/56168 [01:54<01:29, 363.83it/s]Running loglikelihood requests:  42%|████▏     | 23521/56168 [01:54<01:30, 361.92it/s]Running loglikelihood requests:  42%|████▏     | 23585/56168 [01:54<01:29, 364.04it/s]Running loglikelihood requests:  42%|████▏     | 23649/56168 [01:55<01:28, 365.65it/s]Running loglikelihood requests:  42%|████▏     | 23713/56168 [01:55<01:28, 367.16it/s]Running loglikelihood requests:  42%|████▏     | 23777/56168 [01:55<01:27, 368.86it/s]Running loglikelihood requests:  42%|████▏     | 23841/56168 [01:55<01:27, 368.78it/s]Running loglikelihood requests:  43%|████▎     | 23905/56168 [01:55<01:27, 369.30it/s]Running loglikelihood requests:  43%|████▎     | 23969/56168 [01:55<01:27, 368.87it/s]Running loglikelihood requests:  43%|████▎     | 24033/56168 [01:56<01:27, 368.12it/s]Running loglikelihood requests:  43%|████▎     | 24097/56168 [01:56<01:26, 368.64it/s]Running loglikelihood requests:  43%|████▎     | 24161/56168 [01:56<01:26, 368.35it/s]Running loglikelihood requests:  43%|████▎     | 24225/56168 [01:56<01:26, 368.42it/s]Running loglikelihood requests:  43%|████▎     | 24289/56168 [01:56<01:26, 369.32it/s]Running loglikelihood requests:  43%|████▎     | 24353/56168 [01:56<01:26, 369.78it/s]Running loglikelihood requests:  43%|████▎     | 24417/56168 [01:57<01:25, 370.70it/s]Running loglikelihood requests:  44%|████▎     | 24481/56168 [01:57<01:25, 371.41it/s]Running loglikelihood requests:  44%|████▎     | 24545/56168 [01:57<01:25, 371.23it/s]Running loglikelihood requests:  44%|████▍     | 24609/56168 [01:57<01:25, 370.56it/s]Running loglikelihood requests:  44%|████▍     | 24673/56168 [01:57<01:25, 370.19it/s]Running loglikelihood requests:  44%|████▍     | 24737/56168 [01:57<01:24, 370.53it/s]Running loglikelihood requests:  44%|████▍     | 24801/56168 [01:58<01:24, 372.06it/s]Running loglikelihood requests:  44%|████▍     | 24865/56168 [01:58<01:24, 372.44it/s]Running loglikelihood requests:  44%|████▍     | 24929/56168 [01:58<01:23, 372.53it/s]Running loglikelihood requests:  44%|████▍     | 24993/56168 [01:58<01:23, 372.81it/s]Running loglikelihood requests:  45%|████▍     | 25061/56168 [01:58<01:21, 379.48it/s]Running loglikelihood requests:  45%|████▍     | 25125/56168 [01:58<01:22, 377.99it/s]Running loglikelihood requests:  45%|████▍     | 25189/56168 [01:59<01:22, 377.05it/s]Running loglikelihood requests:  45%|████▍     | 25253/56168 [01:59<01:22, 374.85it/s]Running loglikelihood requests:  45%|████▌     | 25317/56168 [01:59<01:22, 374.49it/s]Running loglikelihood requests:  45%|████▌     | 25381/56168 [01:59<01:22, 374.40it/s]Running loglikelihood requests:  45%|████▌     | 25445/56168 [01:59<01:22, 374.23it/s]Running loglikelihood requests:  45%|████▌     | 25509/56168 [02:00<01:22, 373.69it/s]Running loglikelihood requests:  46%|████▌     | 25573/56168 [02:00<01:21, 374.12it/s]Running loglikelihood requests:  46%|████▌     | 25637/56168 [02:00<01:21, 373.98it/s]Running loglikelihood requests:  46%|████▌     | 25701/56168 [02:00<01:21, 375.26it/s]Running loglikelihood requests:  46%|████▌     | 25765/56168 [02:00<01:21, 375.33it/s]Running loglikelihood requests:  46%|████▌     | 25829/56168 [02:00<01:20, 376.32it/s]Running loglikelihood requests:  46%|████▌     | 25893/56168 [02:01<01:20, 376.24it/s]Running loglikelihood requests:  46%|████▌     | 25957/56168 [02:01<01:20, 376.26it/s]Running loglikelihood requests:  46%|████▋     | 26021/56168 [02:01<01:19, 377.62it/s]Running loglikelihood requests:  46%|████▋     | 26085/56168 [02:01<01:19, 377.74it/s]Running loglikelihood requests:  47%|████▋     | 26149/56168 [02:01<01:16, 390.48it/s]Running loglikelihood requests:  47%|████▋     | 26213/56168 [02:01<01:14, 400.85it/s]Running loglikelihood requests:  47%|████▋     | 26277/56168 [02:01<01:13, 407.14it/s]Running loglikelihood requests:  47%|████▋     | 26341/56168 [02:02<01:12, 411.32it/s]Running loglikelihood requests:  47%|████▋     | 26405/56168 [02:02<01:11, 414.48it/s]Running loglikelihood requests:  47%|████▋     | 26469/56168 [02:02<01:11, 417.48it/s]Running loglikelihood requests:  47%|████▋     | 26533/56168 [02:02<01:10, 419.64it/s]Running loglikelihood requests:  47%|████▋     | 26597/56168 [02:02<01:10, 421.80it/s]Running loglikelihood requests:  47%|████▋     | 26661/56168 [02:02<01:09, 422.07it/s]Running loglikelihood requests:  48%|████▊     | 26725/56168 [02:03<01:09, 423.84it/s]Running loglikelihood requests:  48%|████▊     | 26789/56168 [02:03<01:09, 423.99it/s]Running loglikelihood requests:  48%|████▊     | 26853/56168 [02:03<01:09, 424.81it/s]Running loglikelihood requests:  48%|████▊     | 26917/56168 [02:03<01:08, 424.94it/s]Running loglikelihood requests:  48%|████▊     | 26981/56168 [02:03<01:08, 424.77it/s]Running loglikelihood requests:  48%|████▊     | 27045/56168 [02:03<01:08, 425.87it/s]Running loglikelihood requests:  48%|████▊     | 27109/56168 [02:03<01:08, 425.52it/s]Running loglikelihood requests:  48%|████▊     | 27173/56168 [02:04<01:07, 427.43it/s]Running loglikelihood requests:  48%|████▊     | 27237/56168 [02:04<01:07, 426.21it/s]Running loglikelihood requests:  49%|████▊     | 27301/56168 [02:04<01:07, 426.84it/s]Running loglikelihood requests:  49%|████▊     | 27365/56168 [02:04<01:07, 426.94it/s]Running loglikelihood requests:  49%|████▉     | 27429/56168 [02:04<01:07, 426.28it/s]Running loglikelihood requests:  49%|████▉     | 27493/56168 [02:04<01:07, 427.13it/s]Running loglikelihood requests:  49%|████▉     | 27557/56168 [02:04<01:07, 426.56it/s]Running loglikelihood requests:  49%|████▉     | 27621/56168 [02:05<01:06, 427.26it/s]Running loglikelihood requests:  49%|████▉     | 27685/56168 [02:05<01:06, 427.26it/s]Running loglikelihood requests:  49%|████▉     | 27749/56168 [02:05<01:06, 427.54it/s]Running loglikelihood requests:  50%|████▉     | 27813/56168 [02:05<01:06, 428.61it/s]Running loglikelihood requests:  50%|████▉     | 27877/56168 [02:05<01:06, 427.38it/s]Running loglikelihood requests:  50%|████▉     | 27941/56168 [02:05<01:05, 428.70it/s]Running loglikelihood requests:  50%|████▉     | 28005/56168 [02:06<01:05, 428.68it/s]Running loglikelihood requests:  50%|████▉     | 28069/56168 [02:06<01:05, 428.84it/s]Running loglikelihood requests:  50%|█████     | 28133/56168 [02:06<01:05, 429.94it/s]Running loglikelihood requests:  50%|█████     | 28197/56168 [02:06<01:05, 429.47it/s]Running loglikelihood requests:  50%|█████     | 28261/56168 [02:06<01:05, 429.30it/s]Running loglikelihood requests:  50%|█████     | 28329/56168 [02:06<01:03, 437.74it/s]Running loglikelihood requests:  51%|█████     | 28393/56168 [02:06<01:04, 433.64it/s]Running loglikelihood requests:  51%|█████     | 28457/56168 [02:07<01:03, 434.57it/s]Running loglikelihood requests:  51%|█████     | 28521/56168 [02:07<01:03, 434.62it/s]Running loglikelihood requests:  51%|█████     | 28585/56168 [02:07<01:03, 432.54it/s]Running loglikelihood requests:  51%|█████     | 28649/56168 [02:07<01:03, 432.66it/s]Running loglikelihood requests:  51%|█████     | 28713/56168 [02:07<01:03, 432.41it/s]Running loglikelihood requests:  51%|█████     | 28777/56168 [02:07<01:03, 433.42it/s]Running loglikelihood requests:  51%|█████▏    | 28841/56168 [02:07<01:03, 433.05it/s]Running loglikelihood requests:  51%|█████▏    | 28905/56168 [02:08<01:02, 434.40it/s]Running loglikelihood requests:  52%|█████▏    | 28969/56168 [02:08<01:02, 433.10it/s]Running loglikelihood requests:  52%|█████▏    | 29033/56168 [02:08<01:02, 433.59it/s]Running loglikelihood requests:  52%|█████▏    | 29097/56168 [02:08<01:02, 434.27it/s]Running loglikelihood requests:  52%|█████▏    | 29161/56168 [02:08<01:02, 433.81it/s]Running loglikelihood requests:  52%|█████▏    | 29225/56168 [02:08<01:01, 435.92it/s]Running loglikelihood requests:  52%|█████▏    | 29289/56168 [02:08<01:01, 437.53it/s]Running loglikelihood requests:  52%|█████▏    | 29353/56168 [02:09<01:00, 440.35it/s]Running loglikelihood requests:  52%|█████▏    | 29421/56168 [02:09<00:59, 450.95it/s]Running loglikelihood requests:  52%|█████▏    | 29485/56168 [02:09<00:59, 449.22it/s]Running loglikelihood requests:  53%|█████▎    | 29549/56168 [02:09<00:59, 447.43it/s]Running loglikelihood requests:  53%|█████▎    | 29613/56168 [02:09<00:59, 445.05it/s]Running loglikelihood requests:  53%|█████▎    | 29677/56168 [02:09<00:59, 445.07it/s]Running loglikelihood requests:  53%|█████▎    | 29741/56168 [02:09<00:59, 445.68it/s]Running loglikelihood requests:  53%|█████▎    | 29805/56168 [02:10<00:59, 444.92it/s]Running loglikelihood requests:  53%|█████▎    | 29869/56168 [02:10<00:59, 444.51it/s]Running loglikelihood requests:  53%|█████▎    | 29933/56168 [02:10<00:58, 444.71it/s]Running loglikelihood requests:  53%|█████▎    | 29997/56168 [02:10<00:58, 445.59it/s]Running loglikelihood requests:  54%|█████▎    | 30061/56168 [02:10<00:58, 445.86it/s]Running loglikelihood requests:  54%|█████▎    | 30125/56168 [02:10<00:58, 445.29it/s]Running loglikelihood requests:  54%|█████▎    | 30189/56168 [02:11<00:58, 443.67it/s]Running loglikelihood requests:  54%|█████▍    | 30253/56168 [02:11<00:58, 444.09it/s]Running loglikelihood requests:  54%|█████▍    | 30317/56168 [02:11<00:58, 444.01it/s]Running loglikelihood requests:  54%|█████▍    | 30381/56168 [02:11<00:58, 444.56it/s]Running loglikelihood requests:  54%|█████▍    | 30445/56168 [02:11<00:57, 444.53it/s]Running loglikelihood requests:  54%|█████▍    | 30509/56168 [02:11<00:57, 446.88it/s]Running loglikelihood requests:  54%|█████▍    | 30573/56168 [02:11<00:57, 444.59it/s]Running loglikelihood requests:  55%|█████▍    | 30637/56168 [02:12<00:57, 444.66it/s]Running loglikelihood requests:  55%|█████▍    | 30701/56168 [02:12<00:57, 445.55it/s]Running loglikelihood requests:  55%|█████▍    | 30765/56168 [02:12<00:57, 444.77it/s]Running loglikelihood requests:  55%|█████▍    | 30833/56168 [02:12<00:56, 451.91it/s]Running loglikelihood requests:  55%|█████▌    | 30897/56168 [02:12<00:56, 449.25it/s]Running loglikelihood requests:  55%|█████▌    | 30961/56168 [02:12<00:56, 449.09it/s]Running loglikelihood requests:  55%|█████▌    | 31025/56168 [02:12<00:55, 449.15it/s]Running loglikelihood requests:  55%|█████▌    | 31089/56168 [02:13<00:55, 448.18it/s]Running loglikelihood requests:  55%|█████▌    | 31153/56168 [02:13<00:55, 447.95it/s]Running loglikelihood requests:  56%|█████▌    | 31217/56168 [02:13<00:55, 446.58it/s]Running loglikelihood requests:  56%|█████▌    | 31281/56168 [02:13<00:55, 445.20it/s]Running loglikelihood requests:  56%|█████▌    | 31345/56168 [02:13<00:55, 445.94it/s]Running loglikelihood requests:  56%|█████▌    | 31409/56168 [02:13<00:55, 446.22it/s]Running loglikelihood requests:  56%|█████▌    | 31473/56168 [02:13<00:55, 445.97it/s]Running loglikelihood requests:  56%|█████▌    | 31537/56168 [02:14<00:55, 447.14it/s]Running loglikelihood requests:  56%|█████▋    | 31601/56168 [02:14<00:54, 446.95it/s]Running loglikelihood requests:  56%|█████▋    | 31665/56168 [02:14<00:54, 447.56it/s]Running loglikelihood requests:  56%|█████▋    | 31729/56168 [02:14<00:54, 448.27it/s]Running loglikelihood requests:  57%|█████▋    | 31793/56168 [02:14<00:54, 448.17it/s]Running loglikelihood requests:  57%|█████▋    | 31861/56168 [02:14<00:53, 456.71it/s]Running loglikelihood requests:  57%|█████▋    | 31925/56168 [02:14<00:53, 453.11it/s]Running loglikelihood requests:  57%|█████▋    | 31989/56168 [02:15<00:53, 451.02it/s]Running loglikelihood requests:  57%|█████▋    | 32053/56168 [02:15<00:53, 449.60it/s]Running loglikelihood requests:  57%|█████▋    | 32117/56168 [02:15<00:53, 448.68it/s]Running loglikelihood requests:  57%|█████▋    | 32181/56168 [02:15<00:53, 448.26it/s]Running loglikelihood requests:  57%|█████▋    | 32245/56168 [02:15<00:53, 448.92it/s]Running loglikelihood requests:  58%|█████▊    | 32309/56168 [02:15<00:53, 448.85it/s]Running loglikelihood requests:  58%|█████▊    | 32373/56168 [02:15<00:53, 448.55it/s]Running loglikelihood requests:  58%|█████▊    | 32437/56168 [02:16<00:52, 449.19it/s]Running loglikelihood requests:  58%|█████▊    | 32501/56168 [02:16<00:52, 450.24it/s]Running loglikelihood requests:  58%|█████▊    | 32569/56168 [02:16<00:51, 459.10it/s]Running loglikelihood requests:  58%|█████▊    | 32633/56168 [02:16<00:51, 456.80it/s]Running loglikelihood requests:  58%|█████▊    | 32697/56168 [02:16<00:51, 455.03it/s]Running loglikelihood requests:  58%|█████▊    | 32765/56168 [02:16<00:50, 462.83it/s]Running loglikelihood requests:  58%|█████▊    | 32829/56168 [02:16<00:50, 460.18it/s]Running loglikelihood requests:  59%|█████▊    | 32893/56168 [02:17<00:50, 457.23it/s]Running loglikelihood requests:  59%|█████▊    | 32957/56168 [02:17<00:50, 462.26it/s]Running loglikelihood requests:  59%|█████▉    | 33021/56168 [02:17<00:49, 464.27it/s]Running loglikelihood requests:  59%|█████▉    | 33085/56168 [02:17<00:49, 466.99it/s]Running loglikelihood requests:  59%|█████▉    | 33149/56168 [02:17<00:49, 469.35it/s]Running loglikelihood requests:  59%|█████▉    | 33213/56168 [02:17<00:48, 469.87it/s]Running loglikelihood requests:  59%|█████▉    | 33277/56168 [02:17<00:48, 470.23it/s]Running loglikelihood requests:  59%|█████▉    | 33341/56168 [02:17<00:48, 471.94it/s]Running loglikelihood requests:  59%|█████▉    | 33405/56168 [02:18<00:48, 472.28it/s]Running loglikelihood requests:  60%|█████▉    | 33469/56168 [02:18<00:47, 473.46it/s]Running loglikelihood requests:  60%|█████▉    | 33533/56168 [02:18<00:47, 475.36it/s]Running loglikelihood requests:  60%|█████▉    | 33597/56168 [02:18<00:47, 475.80it/s]Running loglikelihood requests:  60%|█████▉    | 33661/56168 [02:18<00:47, 476.82it/s]Running loglikelihood requests:  60%|██████    | 33725/56168 [02:18<00:46, 477.78it/s]Running loglikelihood requests:  60%|██████    | 33789/56168 [02:18<00:46, 476.97it/s]Running loglikelihood requests:  60%|██████    | 33853/56168 [02:19<00:46, 475.97it/s]Running loglikelihood requests:  60%|██████    | 33917/56168 [02:19<00:46, 476.39it/s]Running loglikelihood requests:  60%|██████    | 33981/56168 [02:19<00:46, 475.18it/s]Running loglikelihood requests:  61%|██████    | 34045/56168 [02:19<00:46, 475.98it/s]Running loglikelihood requests:  61%|██████    | 34109/56168 [02:19<00:46, 477.21it/s]Running loglikelihood requests:  61%|██████    | 34173/56168 [02:19<00:46, 477.64it/s]Running loglikelihood requests:  61%|██████    | 34237/56168 [02:19<00:45, 478.76it/s]Running loglikelihood requests:  61%|██████    | 34301/56168 [02:19<00:45, 478.04it/s]Running loglikelihood requests:  61%|██████    | 34365/56168 [02:20<00:45, 479.06it/s]Running loglikelihood requests:  61%|██████▏   | 34429/56168 [02:20<00:45, 478.58it/s]Running loglikelihood requests:  61%|██████▏   | 34493/56168 [02:20<00:45, 476.87it/s]Running loglikelihood requests:  62%|██████▏   | 34557/56168 [02:20<00:45, 478.72it/s]Running loglikelihood requests:  62%|██████▏   | 34621/56168 [02:20<00:44, 479.02it/s]Running loglikelihood requests:  62%|██████▏   | 34685/56168 [02:20<00:44, 478.58it/s]Running loglikelihood requests:  62%|██████▏   | 34749/56168 [02:20<00:44, 478.35it/s]Running loglikelihood requests:  62%|██████▏   | 34813/56168 [02:21<00:44, 479.17it/s]Running loglikelihood requests:  62%|██████▏   | 34877/56168 [02:21<00:44, 480.60it/s]Running loglikelihood requests:  62%|██████▏   | 34941/56168 [02:21<00:44, 479.87it/s]Running loglikelihood requests:  62%|██████▏   | 35005/56168 [02:21<00:44, 478.56it/s]Running loglikelihood requests:  62%|██████▏   | 35069/56168 [02:21<00:43, 480.17it/s]Running loglikelihood requests:  63%|██████▎   | 35133/56168 [02:21<00:43, 479.78it/s]Running loglikelihood requests:  63%|██████▎   | 35197/56168 [02:21<00:43, 481.49it/s]Running loglikelihood requests:  63%|██████▎   | 35261/56168 [02:21<00:43, 482.04it/s]Running loglikelihood requests:  63%|██████▎   | 35325/56168 [02:22<00:43, 481.76it/s]Running loglikelihood requests:  63%|██████▎   | 35389/56168 [02:22<00:43, 481.19it/s]Running loglikelihood requests:  63%|██████▎   | 35453/56168 [02:22<00:43, 480.81it/s]Running loglikelihood requests:  63%|██████▎   | 35517/56168 [02:22<00:42, 481.83it/s]Running loglikelihood requests:  63%|██████▎   | 35581/56168 [02:22<00:42, 480.35it/s]Running loglikelihood requests:  63%|██████▎   | 35645/56168 [02:22<00:42, 481.14it/s]Running loglikelihood requests:  64%|██████▎   | 35709/56168 [02:22<00:42, 482.46it/s]Running loglikelihood requests:  64%|██████▎   | 35773/56168 [02:23<00:42, 482.77it/s]Running loglikelihood requests:  64%|██████▍   | 35837/56168 [02:23<00:42, 482.50it/s]Running loglikelihood requests:  64%|██████▍   | 35901/56168 [02:23<00:42, 482.01it/s]Running loglikelihood requests:  64%|██████▍   | 35965/56168 [02:23<00:41, 482.29it/s]Running loglikelihood requests:  64%|██████▍   | 36029/56168 [02:23<00:41, 481.83it/s]Running loglikelihood requests:  64%|██████▍   | 36093/56168 [02:23<00:41, 484.48it/s]Running loglikelihood requests:  64%|██████▍   | 36157/56168 [02:23<00:41, 482.11it/s]Running loglikelihood requests:  64%|██████▍   | 36221/56168 [02:23<00:41, 482.68it/s]Running loglikelihood requests:  65%|██████▍   | 36285/56168 [02:24<00:41, 482.82it/s]Running loglikelihood requests:  65%|██████▍   | 36349/56168 [02:24<00:40, 483.48it/s]Running loglikelihood requests:  65%|██████▍   | 36413/56168 [02:24<00:40, 483.54it/s]Running loglikelihood requests:  65%|██████▍   | 36477/56168 [02:24<00:40, 484.11it/s]Running loglikelihood requests:  65%|██████▌   | 36541/56168 [02:24<00:40, 484.61it/s]Running loglikelihood requests:  65%|██████▌   | 36605/56168 [02:24<00:40, 484.62it/s]Running loglikelihood requests:  65%|██████▌   | 36669/56168 [02:24<00:40, 485.22it/s]Running loglikelihood requests:  65%|██████▌   | 36733/56168 [02:25<00:40, 484.32it/s]Running loglikelihood requests:  66%|██████▌   | 36797/56168 [02:25<00:40, 484.16it/s]Running loglikelihood requests:  66%|██████▌   | 36861/56168 [02:25<00:39, 484.09it/s]Running loglikelihood requests:  66%|██████▌   | 36925/56168 [02:25<00:39, 485.46it/s]Running loglikelihood requests:  66%|██████▌   | 36993/56168 [02:25<00:38, 494.12it/s]Running loglikelihood requests:  66%|██████▌   | 37057/56168 [02:25<00:38, 493.19it/s]Running loglikelihood requests:  66%|██████▌   | 37121/56168 [02:25<00:38, 490.41it/s]Running loglikelihood requests:  66%|██████▌   | 37185/56168 [02:25<00:38, 489.25it/s]Running loglikelihood requests:  66%|██████▋   | 37249/56168 [02:26<00:38, 487.58it/s]Running loglikelihood requests:  66%|██████▋   | 37313/56168 [02:26<00:38, 488.78it/s]Running loglikelihood requests:  67%|██████▋   | 37377/56168 [02:26<00:38, 487.33it/s]Running loglikelihood requests:  67%|██████▋   | 37441/56168 [02:26<00:37, 496.73it/s]Running loglikelihood requests:  67%|██████▋   | 37505/56168 [02:26<00:37, 503.00it/s]Running loglikelihood requests:  67%|██████▋   | 37569/56168 [02:26<00:36, 504.58it/s]Running loglikelihood requests:  67%|██████▋   | 37633/56168 [02:26<00:36, 505.64it/s]Running loglikelihood requests:  67%|██████▋   | 37697/56168 [02:26<00:36, 506.67it/s]Running loglikelihood requests:  67%|██████▋   | 37761/56168 [02:27<00:36, 507.46it/s]Running loglikelihood requests:  67%|██████▋   | 37825/56168 [02:27<00:35, 509.74it/s]Running loglikelihood requests:  67%|██████▋   | 37889/56168 [02:27<00:35, 510.52it/s]Running loglikelihood requests:  68%|██████▊   | 37953/56168 [02:27<00:35, 510.49it/s]Running loglikelihood requests:  68%|██████▊   | 38017/56168 [02:27<00:35, 508.84it/s]Running loglikelihood requests:  68%|██████▊   | 38081/56168 [02:27<00:35, 509.98it/s]Running loglikelihood requests:  68%|██████▊   | 38145/56168 [02:27<00:35, 509.86it/s]Running loglikelihood requests:  68%|██████▊   | 38209/56168 [02:27<00:35, 510.40it/s]Running loglikelihood requests:  68%|██████▊   | 38273/56168 [02:28<00:35, 509.33it/s]Running loglikelihood requests:  68%|██████▊   | 38337/56168 [02:28<00:35, 509.11it/s]Running loglikelihood requests:  68%|██████▊   | 38401/56168 [02:28<00:34, 508.89it/s]Running loglikelihood requests:  68%|██████▊   | 38465/56168 [02:28<00:34, 510.75it/s]Running loglikelihood requests:  69%|██████▊   | 38529/56168 [02:28<00:34, 509.73it/s]Running loglikelihood requests:  69%|██████▊   | 38593/56168 [02:28<00:34, 509.61it/s]Running loglikelihood requests:  69%|██████▉   | 38657/56168 [02:28<00:34, 510.50it/s]Running loglikelihood requests:  69%|██████▉   | 38721/56168 [02:28<00:34, 511.34it/s]Running loglikelihood requests:  69%|██████▉   | 38789/56168 [02:29<00:33, 521.47it/s]Running loglikelihood requests:  69%|██████▉   | 38853/56168 [02:29<00:33, 518.26it/s]Running loglikelihood requests:  69%|██████▉   | 38917/56168 [02:29<00:33, 515.11it/s]Running loglikelihood requests:  69%|██████▉   | 38981/56168 [02:29<00:33, 515.13it/s]Running loglikelihood requests:  70%|██████▉   | 39045/56168 [02:29<00:33, 516.55it/s]Running loglikelihood requests:  70%|██████▉   | 39109/56168 [02:29<00:32, 518.36it/s]Running loglikelihood requests:  70%|██████▉   | 39173/56168 [02:29<00:32, 519.27it/s]Running loglikelihood requests:  70%|██████▉   | 39237/56168 [02:29<00:32, 520.84it/s]Running loglikelihood requests:  70%|██████▉   | 39301/56168 [02:30<00:32, 522.24it/s]Running loglikelihood requests:  70%|███████   | 39365/56168 [02:30<00:32, 523.23it/s]Running loglikelihood requests:  70%|███████   | 39429/56168 [02:30<00:31, 523.96it/s]Running loglikelihood requests:  70%|███████   | 39493/56168 [02:30<00:31, 523.33it/s]Running loglikelihood requests:  70%|███████   | 39557/56168 [02:30<00:31, 524.21it/s]Running loglikelihood requests:  71%|███████   | 39621/56168 [02:30<00:31, 524.15it/s]Running loglikelihood requests:  71%|███████   | 39685/56168 [02:30<00:31, 522.00it/s]Running loglikelihood requests:  71%|███████   | 39749/56168 [02:30<00:31, 520.51it/s]Running loglikelihood requests:  71%|███████   | 39813/56168 [02:31<00:31, 519.62it/s]Running loglikelihood requests:  71%|███████   | 39877/56168 [02:31<00:31, 520.93it/s]Running loglikelihood requests:  71%|███████   | 39941/56168 [02:31<00:31, 519.89it/s]Running loglikelihood requests:  71%|███████   | 40005/56168 [02:31<00:30, 521.74it/s]Running loglikelihood requests:  71%|███████▏  | 40069/56168 [02:31<00:30, 523.79it/s]Running loglikelihood requests:  71%|███████▏  | 40133/56168 [02:31<00:30, 525.16it/s]Running loglikelihood requests:  72%|███████▏  | 40197/56168 [02:31<00:30, 526.16it/s]Running loglikelihood requests:  72%|███████▏  | 40261/56168 [02:31<00:30, 526.80it/s]Running loglikelihood requests:  72%|███████▏  | 40325/56168 [02:32<00:30, 526.33it/s]Running loglikelihood requests:  72%|███████▏  | 40389/56168 [02:32<00:29, 526.95it/s]Running loglikelihood requests:  72%|███████▏  | 40453/56168 [02:32<00:29, 526.42it/s]Running loglikelihood requests:  72%|███████▏  | 40517/56168 [02:32<00:29, 526.17it/s]Running loglikelihood requests:  72%|███████▏  | 40581/56168 [02:32<00:29, 527.37it/s]Running loglikelihood requests:  72%|███████▏  | 40645/56168 [02:32<00:29, 527.41it/s]Running loglikelihood requests:  72%|███████▏  | 40709/56168 [02:32<00:29, 527.99it/s]Running loglikelihood requests:  73%|███████▎  | 40773/56168 [02:32<00:29, 527.37it/s]Running loglikelihood requests:  73%|███████▎  | 40837/56168 [02:33<00:29, 527.02it/s]Running loglikelihood requests:  73%|███████▎  | 40901/56168 [02:33<00:28, 528.23it/s]Running loglikelihood requests:  73%|███████▎  | 40965/56168 [02:33<00:28, 527.39it/s]Running loglikelihood requests:  73%|███████▎  | 41029/56168 [02:33<00:28, 527.11it/s]Running loglikelihood requests:  73%|███████▎  | 41093/56168 [02:33<00:28, 527.76it/s]Running loglikelihood requests:  73%|███████▎  | 41157/56168 [02:33<00:28, 528.49it/s]Running loglikelihood requests:  73%|███████▎  | 41221/56168 [02:33<00:28, 529.08it/s]Running loglikelihood requests:  74%|███████▎  | 41285/56168 [02:33<00:28, 530.11it/s]Running loglikelihood requests:  74%|███████▎  | 41349/56168 [02:33<00:27, 529.40it/s]Running loglikelihood requests:  74%|███████▎  | 41413/56168 [02:34<00:27, 529.55it/s]Running loglikelihood requests:  74%|███████▍  | 41477/56168 [02:34<00:27, 529.59it/s]Running loglikelihood requests:  74%|███████▍  | 41545/56168 [02:34<00:27, 539.00it/s]Running loglikelihood requests:  74%|███████▍  | 41609/56168 [02:34<00:27, 536.65it/s]Running loglikelihood requests:  74%|███████▍  | 41673/56168 [02:34<00:27, 534.32it/s]Running loglikelihood requests:  74%|███████▍  | 41737/56168 [02:34<00:27, 532.87it/s]Running loglikelihood requests:  74%|███████▍  | 41801/56168 [02:34<00:27, 531.96it/s]Running loglikelihood requests:  75%|███████▍  | 41865/56168 [02:34<00:26, 531.78it/s]Running loglikelihood requests:  75%|███████▍  | 41929/56168 [02:35<00:26, 531.95it/s]Running loglikelihood requests:  75%|███████▍  | 42001/56168 [02:35<00:25, 551.00it/s]Running loglikelihood requests:  75%|███████▍  | 42065/56168 [02:35<00:25, 545.44it/s]Running loglikelihood requests:  75%|███████▌  | 42129/56168 [02:35<00:25, 541.47it/s]Running loglikelihood requests:  75%|███████▌  | 42193/56168 [02:35<00:26, 536.17it/s]Running loglikelihood requests:  75%|███████▌  | 42257/56168 [02:35<00:26, 534.44it/s]Running loglikelihood requests:  75%|███████▌  | 42321/56168 [02:35<00:25, 532.81it/s]Running loglikelihood requests:  75%|███████▌  | 42385/56168 [02:35<00:25, 530.13it/s]Running loglikelihood requests:  76%|███████▌  | 42449/56168 [02:36<00:25, 541.23it/s]Running loglikelihood requests:  76%|███████▌  | 42513/56168 [02:36<00:24, 548.86it/s]Running loglikelihood requests:  76%|███████▌  | 42577/56168 [02:36<00:24, 553.92it/s]Running loglikelihood requests:  76%|███████▌  | 42645/56168 [02:36<00:23, 566.54it/s]Running loglikelihood requests:  76%|███████▌  | 42709/56168 [02:36<00:23, 567.24it/s]Running loglikelihood requests:  76%|███████▌  | 42773/56168 [02:36<00:23, 567.07it/s]Running loglikelihood requests:  76%|███████▋  | 42837/56168 [02:36<00:23, 567.23it/s]Running loglikelihood requests:  76%|███████▋  | 42901/56168 [02:36<00:23, 567.85it/s]Running loglikelihood requests:  76%|███████▋  | 42965/56168 [02:36<00:23, 566.87it/s]Running loglikelihood requests:  77%|███████▋  | 43029/56168 [02:37<00:23, 567.52it/s]Running loglikelihood requests:  77%|███████▋  | 43093/56168 [02:37<00:23, 568.08it/s]Running loglikelihood requests:  77%|███████▋  | 43157/56168 [02:37<00:22, 566.63it/s]Running loglikelihood requests:  77%|███████▋  | 43221/56168 [02:37<00:22, 567.76it/s]Running loglikelihood requests:  77%|███████▋  | 43285/56168 [02:37<00:22, 567.73it/s]Running loglikelihood requests:  77%|███████▋  | 43349/56168 [02:37<00:22, 568.50it/s]Running loglikelihood requests:  77%|███████▋  | 43413/56168 [02:37<00:22, 567.38it/s]Running loglikelihood requests:  77%|███████▋  | 43477/56168 [02:37<00:22, 568.21it/s]Running loglikelihood requests:  78%|███████▊  | 43541/56168 [02:37<00:22, 566.64it/s]Running loglikelihood requests:  78%|███████▊  | 43605/56168 [02:38<00:22, 566.82it/s]Running loglikelihood requests:  78%|███████▊  | 43669/56168 [02:38<00:22, 566.24it/s]Running loglikelihood requests:  78%|███████▊  | 43733/56168 [02:38<00:22, 564.69it/s]Running loglikelihood requests:  78%|███████▊  | 43797/56168 [02:38<00:21, 566.79it/s]Running loglikelihood requests:  78%|███████▊  | 43861/56168 [02:38<00:21, 568.72it/s]Running loglikelihood requests:  78%|███████▊  | 43925/56168 [02:38<00:21, 570.57it/s]Running loglikelihood requests:  78%|███████▊  | 43989/56168 [02:38<00:21, 570.86it/s]Running loglikelihood requests:  78%|███████▊  | 44053/56168 [02:38<00:21, 571.59it/s]Running loglikelihood requests:  79%|███████▊  | 44121/56168 [02:38<00:20, 582.35it/s]Running loglikelihood requests:  79%|███████▊  | 44185/56168 [02:39<00:20, 578.19it/s]Running loglikelihood requests:  79%|███████▉  | 44249/56168 [02:39<00:20, 575.68it/s]Running loglikelihood requests:  79%|███████▉  | 44313/56168 [02:39<00:20, 571.89it/s]Running loglikelihood requests:  79%|███████▉  | 44377/56168 [02:39<00:20, 572.20it/s]Running loglikelihood requests:  79%|███████▉  | 44441/56168 [02:39<00:20, 571.97it/s]Running loglikelihood requests:  79%|███████▉  | 44505/56168 [02:39<00:20, 573.10it/s]Running loglikelihood requests:  79%|███████▉  | 44569/56168 [02:39<00:20, 572.87it/s]Running loglikelihood requests:  79%|███████▉  | 44633/56168 [02:39<00:20, 573.80it/s]Running loglikelihood requests:  80%|███████▉  | 44697/56168 [02:39<00:19, 573.55it/s]Running loglikelihood requests:  80%|███████▉  | 44761/56168 [02:40<00:19, 574.39it/s]Running loglikelihood requests:  80%|███████▉  | 44825/56168 [02:40<00:19, 573.50it/s]Running loglikelihood requests:  80%|███████▉  | 44889/56168 [02:40<00:19, 572.56it/s]Running loglikelihood requests:  80%|████████  | 44953/56168 [02:40<00:19, 573.68it/s]Running loglikelihood requests:  80%|████████  | 45017/56168 [02:40<00:19, 572.66it/s]Running loglikelihood requests:  80%|████████  | 45081/56168 [02:40<00:19, 572.51it/s]Running loglikelihood requests:  80%|████████  | 45145/56168 [02:40<00:19, 571.22it/s]Running loglikelihood requests:  80%|████████  | 45209/56168 [02:40<00:19, 572.51it/s]Running loglikelihood requests:  81%|████████  | 45273/56168 [02:40<00:19, 571.29it/s]Running loglikelihood requests:  81%|████████  | 45337/56168 [02:41<00:18, 573.01it/s]Running loglikelihood requests:  81%|████████  | 45401/56168 [02:41<00:18, 572.04it/s]Running loglikelihood requests:  81%|████████  | 45465/56168 [02:41<00:18, 574.99it/s]Running loglikelihood requests:  81%|████████  | 45529/56168 [02:41<00:18, 574.35it/s]Running loglikelihood requests:  81%|████████  | 45593/56168 [02:41<00:18, 575.33it/s]Running loglikelihood requests:  81%|████████▏ | 45657/56168 [02:41<00:18, 573.38it/s]Running loglikelihood requests:  81%|████████▏ | 45721/56168 [02:41<00:18, 574.67it/s]Running loglikelihood requests:  82%|████████▏ | 45785/56168 [02:41<00:18, 574.65it/s]Running loglikelihood requests:  82%|████████▏ | 45849/56168 [02:41<00:17, 575.88it/s]Running loglikelihood requests:  82%|████████▏ | 45913/56168 [02:42<00:17, 575.04it/s]Running loglikelihood requests:  82%|████████▏ | 45977/56168 [02:42<00:17, 575.77it/s]Running loglikelihood requests:  82%|████████▏ | 46041/56168 [02:42<00:17, 576.81it/s]Running loglikelihood requests:  82%|████████▏ | 46105/56168 [02:42<00:17, 577.75it/s]Running loglikelihood requests:  82%|████████▏ | 46169/56168 [02:42<00:17, 577.10it/s]Running loglikelihood requests:  82%|████████▏ | 46233/56168 [02:42<00:17, 577.77it/s]Running loglikelihood requests:  82%|████████▏ | 46297/56168 [02:42<00:17, 576.84it/s]Running loglikelihood requests:  83%|████████▎ | 46361/56168 [02:42<00:16, 578.57it/s]Running loglikelihood requests:  83%|████████▎ | 46425/56168 [02:42<00:16, 578.16it/s]Running loglikelihood requests:  83%|████████▎ | 46489/56168 [02:43<00:16, 578.70it/s]Running loglikelihood requests:  83%|████████▎ | 46553/56168 [02:43<00:16, 577.93it/s]Running loglikelihood requests:  83%|████████▎ | 46617/56168 [02:43<00:16, 577.84it/s]Running loglikelihood requests:  83%|████████▎ | 46681/56168 [02:43<00:16, 577.98it/s]Running loglikelihood requests:  83%|████████▎ | 46745/56168 [02:43<00:16, 578.88it/s]Running loglikelihood requests:  83%|████████▎ | 46809/56168 [02:43<00:16, 579.05it/s]Running loglikelihood requests:  83%|████████▎ | 46873/56168 [02:43<00:16, 580.49it/s]Running loglikelihood requests:  84%|████████▎ | 46937/56168 [02:43<00:15, 582.35it/s]Running loglikelihood requests:  84%|████████▎ | 47001/56168 [02:43<00:15, 582.00it/s]Running loglikelihood requests:  84%|████████▍ | 47065/56168 [02:44<00:15, 582.26it/s]Running loglikelihood requests:  84%|████████▍ | 47129/56168 [02:44<00:15, 581.07it/s]Running loglikelihood requests:  84%|████████▍ | 47193/56168 [02:44<00:15, 581.63it/s]Running loglikelihood requests:  84%|████████▍ | 47257/56168 [02:44<00:15, 580.97it/s]Running loglikelihood requests:  84%|████████▍ | 47321/56168 [02:44<00:15, 580.85it/s]Running loglikelihood requests:  84%|████████▍ | 47385/56168 [02:44<00:15, 581.00it/s]Running loglikelihood requests:  84%|████████▍ | 47449/56168 [02:44<00:15, 580.90it/s]Running loglikelihood requests:  85%|████████▍ | 47513/56168 [02:44<00:14, 581.22it/s]Running loglikelihood requests:  85%|████████▍ | 47577/56168 [02:44<00:14, 580.06it/s]Running loglikelihood requests:  85%|████████▍ | 47641/56168 [02:45<00:14, 580.99it/s]Running loglikelihood requests:  85%|████████▍ | 47705/56168 [02:45<00:14, 580.10it/s]Running loglikelihood requests:  85%|████████▌ | 47769/56168 [02:45<00:14, 581.75it/s]Running loglikelihood requests:  85%|████████▌ | 47833/56168 [02:45<00:14, 580.94it/s]Running loglikelihood requests:  85%|████████▌ | 47897/56168 [02:45<00:14, 581.38it/s]Running loglikelihood requests:  85%|████████▌ | 47961/56168 [02:45<00:14, 582.34it/s]Running loglikelihood requests:  86%|████████▌ | 48025/56168 [02:45<00:13, 582.52it/s]Running loglikelihood requests:  86%|████████▌ | 48089/56168 [02:45<00:13, 583.60it/s]Running loglikelihood requests:  86%|████████▌ | 48153/56168 [02:45<00:13, 582.43it/s]Running loglikelihood requests:  86%|████████▌ | 48217/56168 [02:46<00:13, 582.39it/s]Running loglikelihood requests:  86%|████████▌ | 48281/56168 [02:46<00:13, 586.96it/s]Running loglikelihood requests:  86%|████████▌ | 48345/56168 [02:46<00:13, 591.61it/s]Running loglikelihood requests:  86%|████████▌ | 48413/56168 [02:46<00:12, 605.86it/s]Running loglikelihood requests:  86%|████████▋ | 48477/56168 [02:46<00:12, 606.14it/s]Running loglikelihood requests:  86%|████████▋ | 48541/56168 [02:46<00:12, 603.15it/s]Running loglikelihood requests:  87%|████████▋ | 48605/56168 [02:46<00:12, 602.38it/s]Running loglikelihood requests:  87%|████████▋ | 48669/56168 [02:46<00:12, 603.64it/s]Running loglikelihood requests:  87%|████████▋ | 48733/56168 [02:46<00:12, 603.22it/s]Running loglikelihood requests:  87%|████████▋ | 48797/56168 [02:47<00:12, 602.74it/s]Running loglikelihood requests:  87%|████████▋ | 48861/56168 [02:47<00:12, 602.65it/s]Running loglikelihood requests:  87%|████████▋ | 48925/56168 [02:47<00:11, 603.98it/s]Running loglikelihood requests:  87%|████████▋ | 48989/56168 [02:47<00:11, 604.68it/s]Running loglikelihood requests:  87%|████████▋ | 49061/56168 [02:47<00:11, 625.34it/s]Running loglikelihood requests:  87%|████████▋ | 49125/56168 [02:47<00:11, 620.43it/s]Running loglikelihood requests:  88%|████████▊ | 49189/56168 [02:47<00:11, 616.22it/s]Running loglikelihood requests:  88%|████████▊ | 49253/56168 [02:47<00:11, 614.33it/s]Running loglikelihood requests:  88%|████████▊ | 49317/56168 [02:47<00:11, 612.51it/s]Running loglikelihood requests:  88%|████████▊ | 49381/56168 [02:47<00:11, 610.53it/s]Running loglikelihood requests:  88%|████████▊ | 49445/56168 [02:48<00:11, 610.79it/s]Running loglikelihood requests:  88%|████████▊ | 49509/56168 [02:48<00:10, 611.39it/s]Running loglikelihood requests:  88%|████████▊ | 49573/56168 [02:48<00:10, 612.10it/s]Running loglikelihood requests:  88%|████████▊ | 49637/56168 [02:48<00:10, 611.89it/s]Running loglikelihood requests:  88%|████████▊ | 49701/56168 [02:48<00:10, 611.47it/s]Running loglikelihood requests:  89%|████████▊ | 49765/56168 [02:48<00:10, 611.92it/s]Running loglikelihood requests:  89%|████████▊ | 49829/56168 [02:48<00:10, 611.29it/s]Running loglikelihood requests:  89%|████████▉ | 49893/56168 [02:48<00:10, 610.96it/s]Running loglikelihood requests:  89%|████████▉ | 49957/56168 [02:48<00:10, 612.16it/s]Running loglikelihood requests:  89%|████████▉ | 50021/56168 [02:49<00:10, 611.36it/s]Running loglikelihood requests:  89%|████████▉ | 50085/56168 [02:49<00:09, 609.90it/s]Running loglikelihood requests:  89%|████████▉ | 50149/56168 [02:49<00:09, 610.62it/s]Running loglikelihood requests:  89%|████████▉ | 50213/56168 [02:49<00:09, 609.43it/s]Running loglikelihood requests:  90%|████████▉ | 50277/56168 [02:49<00:09, 610.19it/s]Running loglikelihood requests:  90%|████████▉ | 50341/56168 [02:49<00:09, 607.88it/s]Running loglikelihood requests:  90%|████████▉ | 50405/56168 [02:49<00:09, 608.92it/s]Running loglikelihood requests:  90%|████████▉ | 50469/56168 [02:49<00:09, 610.55it/s]Running loglikelihood requests:  90%|████████▉ | 50533/56168 [02:49<00:09, 611.04it/s]Running loglikelihood requests:  90%|█████████ | 50597/56168 [02:49<00:09, 612.54it/s]Running loglikelihood requests:  90%|█████████ | 50661/56168 [02:50<00:08, 612.90it/s]Running loglikelihood requests:  90%|█████████ | 50725/56168 [02:50<00:08, 612.71it/s]Running loglikelihood requests:  90%|█████████ | 50793/56168 [02:50<00:08, 620.75it/s]Running loglikelihood requests:  91%|█████████ | 50857/56168 [02:50<00:08, 619.53it/s]Running loglikelihood requests:  91%|█████████ | 50921/56168 [02:50<00:08, 616.46it/s]Running loglikelihood requests:  91%|█████████ | 50985/56168 [02:50<00:08, 616.46it/s]Running loglikelihood requests:  91%|█████████ | 51049/56168 [02:50<00:08, 616.47it/s]Running loglikelihood requests:  91%|█████████ | 51113/56168 [02:50<00:08, 611.06it/s]Running loglikelihood requests:  91%|█████████ | 51177/56168 [02:50<00:08, 612.31it/s]Running loglikelihood requests:  91%|█████████ | 51241/56168 [02:50<00:08, 615.07it/s]Running loglikelihood requests:  91%|█████████▏| 51305/56168 [02:51<00:07, 616.42it/s]Running loglikelihood requests:  91%|█████████▏| 51369/56168 [02:51<00:07, 618.29it/s]Running loglikelihood requests:  92%|█████████▏| 51433/56168 [02:51<00:07, 617.56it/s]Running loglikelihood requests:  92%|█████████▏| 51497/56168 [02:51<00:07, 617.35it/s]Running loglikelihood requests:  92%|█████████▏| 51561/56168 [02:51<00:07, 616.63it/s]Running loglikelihood requests:  92%|█████████▏| 51625/56168 [02:51<00:07, 615.29it/s]Running loglikelihood requests:  92%|█████████▏| 51689/56168 [02:51<00:07, 613.95it/s]Running loglikelihood requests:  92%|█████████▏| 51753/56168 [02:51<00:07, 615.16it/s]Running loglikelihood requests:  92%|█████████▏| 51821/56168 [02:51<00:06, 628.32it/s]Running loglikelihood requests:  92%|█████████▏| 51885/56168 [02:52<00:06, 626.54it/s]Running loglikelihood requests:  92%|█████████▏| 51949/56168 [02:52<00:06, 625.49it/s]Running loglikelihood requests:  93%|█████████▎| 52013/56168 [02:52<00:06, 621.69it/s]Running loglikelihood requests:  93%|█████████▎| 52077/56168 [02:52<00:06, 619.08it/s]Running loglikelihood requests:  93%|█████████▎| 52141/56168 [02:52<00:06, 617.42it/s]Running loglikelihood requests:  93%|█████████▎| 52205/56168 [02:52<00:06, 618.64it/s]Running loglikelihood requests:  93%|█████████▎| 52269/56168 [02:52<00:06, 617.37it/s]Running loglikelihood requests:  93%|█████████▎| 52333/56168 [02:52<00:06, 617.30it/s]Running loglikelihood requests:  93%|█████████▎| 52397/56168 [02:52<00:06, 616.45it/s]Running loglikelihood requests:  93%|█████████▎| 52461/56168 [02:52<00:06, 616.30it/s]Running loglikelihood requests:  94%|█████████▎| 52525/56168 [02:53<00:05, 616.46it/s]Running loglikelihood requests:  94%|█████████▎| 52589/56168 [02:53<00:05, 616.81it/s]Running loglikelihood requests:  94%|█████████▎| 52653/56168 [02:53<00:05, 616.10it/s]Running loglikelihood requests:  94%|█████████▍| 52717/56168 [02:53<00:05, 619.47it/s]Running loglikelihood requests:  94%|█████████▍| 52781/56168 [02:53<00:05, 622.61it/s]Running loglikelihood requests:  94%|█████████▍| 52845/56168 [02:53<00:05, 624.35it/s]Running loglikelihood requests:  94%|█████████▍| 52909/56168 [02:53<00:05, 624.79it/s]Running loglikelihood requests:  94%|█████████▍| 52973/56168 [02:53<00:05, 621.55it/s]Running loglikelihood requests:  94%|█████████▍| 53037/56168 [02:53<00:05, 621.28it/s]Running loglikelihood requests:  95%|█████████▍| 53101/56168 [02:53<00:04, 621.00it/s]Running loglikelihood requests:  95%|█████████▍| 53165/56168 [02:54<00:04, 620.93it/s]Running loglikelihood requests:  95%|█████████▍| 53229/56168 [02:54<00:04, 621.49it/s]Running loglikelihood requests:  95%|█████████▍| 53293/56168 [02:54<00:04, 622.05it/s]Running loglikelihood requests:  95%|█████████▍| 53357/56168 [02:54<00:04, 621.45it/s]Running loglikelihood requests:  95%|█████████▌| 53421/56168 [02:54<00:04, 622.34it/s]Running loglikelihood requests:  95%|█████████▌| 53485/56168 [02:54<00:04, 623.62it/s]Running loglikelihood requests:  95%|█████████▌| 53574/56168 [02:54<00:03, 702.02it/s]Running loglikelihood requests:  96%|█████████▌| 53667/56168 [02:54<00:03, 769.50it/s]Running loglikelihood requests:  96%|█████████▌| 53745/56168 [02:54<00:03, 614.08it/s]Running loglikelihood requests:  96%|█████████▌| 53830/56168 [02:55<00:03, 673.48it/s]Running loglikelihood requests:  96%|█████████▌| 53918/56168 [02:55<00:03, 728.07it/s]Running loglikelihood requests:  96%|█████████▌| 53997/56168 [02:55<00:03, 602.80it/s]Running loglikelihood requests:  96%|█████████▋| 54085/56168 [02:55<00:03, 669.40it/s]Running loglikelihood requests:  96%|█████████▋| 54176/56168 [02:55<00:02, 730.76it/s]Running loglikelihood requests:  97%|█████████▋| 54255/56168 [02:55<00:03, 607.76it/s]Running loglikelihood requests:  97%|█████████▋| 54337/56168 [02:55<00:02, 658.01it/s]Running loglikelihood requests:  97%|█████████▋| 54424/56168 [02:55<00:02, 711.49it/s]Running loglikelihood requests:  97%|█████████▋| 54509/56168 [02:56<00:02, 609.87it/s]Running loglikelihood requests:  97%|█████████▋| 54596/56168 [02:56<00:02, 671.24it/s]Running loglikelihood requests:  97%|█████████▋| 54686/56168 [02:56<00:02, 728.91it/s]Running loglikelihood requests:  98%|█████████▊| 54765/56168 [02:56<00:02, 610.64it/s]Running loglikelihood requests:  98%|█████████▊| 54868/56168 [02:56<00:01, 709.88it/s]Running loglikelihood requests:  98%|█████████▊| 54957/56168 [02:56<00:01, 625.45it/s]Running loglikelihood requests:  98%|█████████▊| 55044/56168 [02:56<00:01, 681.70it/s]Running loglikelihood requests:  98%|█████████▊| 55141/56168 [02:57<00:01, 752.86it/s]Running loglikelihood requests:  98%|█████████▊| 55223/56168 [02:57<00:01, 634.60it/s]Running loglikelihood requests:  98%|█████████▊| 55325/56168 [02:57<00:01, 724.78it/s]Running loglikelihood requests:  99%|█████████▊| 55405/56168 [02:57<00:01, 616.91it/s]Running loglikelihood requests:  99%|█████████▉| 55508/56168 [02:57<00:00, 711.54it/s]Running loglikelihood requests:  99%|█████████▉| 55597/56168 [02:57<00:00, 628.53it/s]Running loglikelihood requests:  99%|█████████▉| 55704/56168 [02:57<00:00, 728.59it/s]Running loglikelihood requests:  99%|█████████▉| 55789/56168 [02:58<00:00, 635.54it/s]Running loglikelihood requests: 100%|█████████▉| 55905/56168 [02:58<00:00, 754.37it/s]Running loglikelihood requests: 100%|█████████▉| 55990/56168 [02:58<00:00, 665.40it/s]Running loglikelihood requests: 100%|█████████▉| 56109/56168 [02:58<00:00, 689.40it/s]Running loglikelihood requests: 100%|██████████| 56168/56168 [02:58<00:00, 314.70it/s]
2025-05-16:03:38:25,440 INFO     [evaluation_tracker.py:269] Output path not provided, skipping saving results aggregated
hf (pretrained=shengyuanhu/wmdp_unlearn_npo_ckpt_100_zephyr,tokenizer=HuggingFaceH4/zephyr-7b-beta), gen_kwargs: (None), limit: None, num_fewshot: None, batch_size: 16
|                 Tasks                 |Version|Filter|n-shot|Metric|   |Value |   |Stderr|
|---------------------------------------|------:|------|-----:|------|---|-----:|---|-----:|
|mmlu                                   |      2|none  |      |acc   |↑  |0.5656|±  |0.0040|
| - humanities                          |      2|none  |      |acc   |↑  |0.5082|±  |0.0069|
|  - formal_logic                       |      1|none  |     0|acc   |↑  |0.3810|±  |0.0434|
|  - high_school_european_history       |      1|none  |     0|acc   |↑  |0.6970|±  |0.0359|
|  - high_school_us_history             |      1|none  |     0|acc   |↑  |0.7206|±  |0.0315|
|  - high_school_world_history          |      1|none  |     0|acc   |↑  |0.7342|±  |0.0288|
|  - international_law                  |      1|none  |     0|acc   |↑  |0.6860|±  |0.0424|
|  - jurisprudence                      |      1|none  |     0|acc   |↑  |0.7130|±  |0.0437|
|  - logical_fallacies                  |      1|none  |     0|acc   |↑  |0.6687|±  |0.0370|
|  - moral_disputes                     |      1|none  |     0|acc   |↑  |0.6416|±  |0.0258|
|  - moral_scenarios                    |      1|none  |     0|acc   |↑  |0.2905|±  |0.0152|
|  - philosophy                         |      1|none  |     0|acc   |↑  |0.6399|±  |0.0273|
|  - prehistory                         |      1|none  |     0|acc   |↑  |0.6327|±  |0.0268|
|  - professional_law                   |      1|none  |     0|acc   |↑  |0.4048|±  |0.0125|
|  - world_religions                    |      1|none  |     0|acc   |↑  |0.7661|±  |0.0325|
| - other                               |      2|none  |      |acc   |↑  |0.6476|±  |0.0083|
|  - business_ethics                    |      1|none  |     0|acc   |↑  |0.5800|±  |0.0496|
|  - clinical_knowledge                 |      1|none  |     0|acc   |↑  |0.6453|±  |0.0294|
|  - college_medicine                   |      1|none  |     0|acc   |↑  |0.6127|±  |0.0371|
|  - global_facts                       |      1|none  |     0|acc   |↑  |0.3400|±  |0.0476|
|  - human_aging                        |      1|none  |     0|acc   |↑  |0.6547|±  |0.0319|
|  - management                         |      1|none  |     0|acc   |↑  |0.7087|±  |0.0450|
|  - marketing                          |      1|none  |     0|acc   |↑  |0.7778|±  |0.0272|
|  - medical_genetics                   |      1|none  |     0|acc   |↑  |0.6500|±  |0.0479|
|  - miscellaneous                      |      1|none  |     0|acc   |↑  |0.7778|±  |0.0149|
|  - nutrition                          |      1|none  |     0|acc   |↑  |0.6471|±  |0.0274|
|  - professional_accounting            |      1|none  |     0|acc   |↑  |0.4149|±  |0.0294|
|  - professional_medicine              |      1|none  |     0|acc   |↑  |0.6250|±  |0.0294|
|  - virology                           |      1|none  |     0|acc   |↑  |0.5000|±  |0.0389|
| - social sciences                     |      2|none  |      |acc   |↑  |0.6568|±  |0.0083|
|  - econometrics                       |      1|none  |     0|acc   |↑  |0.4474|±  |0.0468|
|  - high_school_geography              |      1|none  |     0|acc   |↑  |0.7071|±  |0.0324|
|  - high_school_government_and_politics|      1|none  |     0|acc   |↑  |0.8135|±  |0.0281|
|  - high_school_macroeconomics         |      1|none  |     0|acc   |↑  |0.5410|±  |0.0253|
|  - high_school_microeconomics         |      1|none  |     0|acc   |↑  |0.5420|±  |0.0324|
|  - high_school_psychology             |      1|none  |     0|acc   |↑  |0.7560|±  |0.0184|
|  - human_sexuality                    |      1|none  |     0|acc   |↑  |0.6870|±  |0.0407|
|  - professional_psychology            |      1|none  |     0|acc   |↑  |0.5784|±  |0.0200|
|  - public_relations                   |      1|none  |     0|acc   |↑  |0.6364|±  |0.0461|
|  - security_studies                   |      1|none  |     0|acc   |↑  |0.6367|±  |0.0308|
|  - sociology                          |      1|none  |     0|acc   |↑  |0.8507|±  |0.0252|
|  - us_foreign_policy                  |      1|none  |     0|acc   |↑  |0.8000|±  |0.0402|
| - stem                                |      2|none  |      |acc   |↑  |0.4814|±  |0.0086|
|  - abstract_algebra                   |      1|none  |     0|acc   |↑  |0.2800|±  |0.0451|
|  - anatomy                            |      1|none  |     0|acc   |↑  |0.5704|±  |0.0428|
|  - astronomy                          |      1|none  |     0|acc   |↑  |0.6382|±  |0.0391|
|  - college_biology                    |      1|none  |     0|acc   |↑  |0.6736|±  |0.0392|
|  - college_chemistry                  |      1|none  |     0|acc   |↑  |0.4800|±  |0.0502|
|  - college_computer_science           |      1|none  |     0|acc   |↑  |0.4800|±  |0.0502|
|  - college_mathematics                |      1|none  |     0|acc   |↑  |0.3000|±  |0.0461|
|  - college_physics                    |      1|none  |     0|acc   |↑  |0.5196|±  |0.0497|
|  - computer_security                  |      1|none  |     0|acc   |↑  |0.6100|±  |0.0490|
|  - conceptual_physics                 |      1|none  |     0|acc   |↑  |0.4638|±  |0.0326|
|  - electrical_engineering             |      1|none  |     0|acc   |↑  |0.4897|±  |0.0417|
|  - elementary_mathematics             |      1|none  |     0|acc   |↑  |0.3995|±  |0.0252|
|  - high_school_biology                |      1|none  |     0|acc   |↑  |0.6903|±  |0.0263|
|  - high_school_chemistry              |      1|none  |     0|acc   |↑  |0.4631|±  |0.0351|
|  - high_school_computer_science       |      1|none  |     0|acc   |↑  |0.5700|±  |0.0498|
|  - high_school_mathematics            |      1|none  |     0|acc   |↑  |0.3444|±  |0.0290|
|  - high_school_physics                |      1|none  |     0|acc   |↑  |0.2715|±  |0.0363|
|  - high_school_statistics             |      1|none  |     0|acc   |↑  |0.4630|±  |0.0340|
|  - machine_learning                   |      1|none  |     0|acc   |↑  |0.4375|±  |0.0471|

|      Groups      |Version|Filter|n-shot|Metric|   |Value |   |Stderr|
|------------------|------:|------|------|------|---|-----:|---|-----:|
|mmlu              |      2|none  |      |acc   |↑  |0.5656|±  |0.0040|
| - humanities     |      2|none  |      |acc   |↑  |0.5082|±  |0.0069|
| - other          |      2|none  |      |acc   |↑  |0.6476|±  |0.0083|
| - social sciences|      2|none  |      |acc   |↑  |0.6568|±  |0.0083|
| - stem           |      2|none  |      |acc   |↑  |0.4814|±  |0.0086|

2025-05-16:03:38:31,600 INFO     [__main__.py:279] Verbosity set to INFO
2025-05-16:03:38:31,743 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:31,746 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:31,749 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:31,752 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:31,755 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:31,758 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:31,761 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:31,764 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:31,767 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:31,770 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:31,773 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:31,776 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:31,779 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:31,783 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:31,786 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:31,789 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:31,792 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:31,795 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:31,798 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:31,801 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:31,804 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:31,806 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:31,809 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:31,812 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:31,815 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:31,818 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:31,821 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:31,824 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:31,827 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:31,830 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:31,832 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:31,835 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:31,838 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:31,841 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:31,844 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:31,847 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:32,586 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:32,590 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:32,593 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:32,597 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:32,601 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:32,605 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:32,608 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:32,612 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:32,616 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:32,620 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:32,623 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:32,628 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:32,632 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:32,637 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:32,641 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:32,646 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:32,650 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:32,655 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:32,659 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:32,664 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:32,668 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:32,673 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:32,677 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:32,681 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:32,685 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:32,689 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:32,693 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:32,696 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:32,700 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:32,704 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:32,708 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:32,712 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:32,716 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:33,499 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:33,502 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:33,504 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:33,507 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:33,510 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:33,513 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:33,515 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:33,518 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:33,521 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:33,523 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:33,526 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:33,529 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:33,531 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:33,534 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:33,537 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:33,540 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:33,870 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:33,872 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:33,873 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:33,875 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:33,877 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:33,879 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:33,915 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:33,943 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:33,947 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:33,951 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:33,954 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:33,958 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:33,962 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:33,965 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:33,969 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:33,973 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:33,976 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:33,980 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:33,984 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:33,988 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:33,991 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:33,995 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:33,999 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:34,003 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:34,006 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:34,010 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:34,014 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:34,018 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:34,022 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:34,025 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:34,029 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:34,033 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:34,037 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:34,040 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:34,044 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:34,048 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:34,052 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:34,056 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:34,060 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:34,064 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:34,068 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:34,072 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:34,076 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:34,080 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:34,084 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:34,088 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:34,092 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:34,096 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:34,100 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:34,104 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:34,108 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:34,112 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:34,116 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:34,121 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:34,125 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:34,129 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:34,133 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:34,137 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:34,141 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:34,145 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:34,149 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:34,149 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:34,150 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:34,150 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:34,151 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:34,151 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:34,152 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:34,152 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:34,234 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:34,237 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:34,240 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:34,243 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:34,246 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:34,249 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:34,251 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:34,254 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:34,257 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:34,260 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:34,263 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:34,266 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:34,269 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:34,272 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:34,275 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:34,278 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:34,280 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:34,283 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:34,286 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:34,289 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:34,292 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:34,296 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:34,299 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:34,301 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:34,304 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:34,307 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:34,310 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:34,312 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:34,315 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:34,318 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:34,321 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:34,324 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:34,326 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:34,329 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:34,332 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:34,335 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:34,337 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:34,340 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:34,342 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:34,345 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:34,348 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:34,350 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:34,353 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:34,355 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:34,358 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:34,361 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:34,363 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:34,366 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:34,368 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:34,371 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:34,373 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:34,376 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:34,379 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:34,382 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:34,384 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:34,387 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:34,390 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:34,393 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:34,396 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:34,398 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:34,401 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:34,404 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:34,407 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:34,410 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:34,413 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:34,415 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:34,418 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:34,421 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:34,424 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:34,427 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:34,430 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:34,432 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:34,435 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:34,438 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:34,441 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:34,443 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:34,446 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:34,449 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:34,451 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:34,454 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:34,457 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:34,459 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:34,462 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:34,465 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:34,468 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:34,470 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:34,473 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:34,476 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:35,440 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:35,470 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:35,472 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:35,474 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:35,475 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:35,477 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:35,479 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:35,481 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,344 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,346 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,348 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,350 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,352 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,354 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,356 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,357 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,359 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,361 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,363 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,365 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,367 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,369 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,371 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,373 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,374 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,376 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,378 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,380 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,382 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,384 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,386 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,387 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,389 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,391 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,393 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,395 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,397 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,399 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,401 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,403 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,404 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,406 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,408 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,410 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,412 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,414 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,416 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,418 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,420 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,421 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,423 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,425 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,427 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,429 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,431 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,433 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,435 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,436 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,438 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,440 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,442 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,444 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,446 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,448 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,450 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,451 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,453 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,455 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,457 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,459 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,461 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,463 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,465 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,467 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,468 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,470 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,472 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,474 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,476 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,478 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,480 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,482 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,483 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,485 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,487 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,489 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,491 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,493 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,495 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,497 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,499 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,501 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,503 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,505 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,506 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,508 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,510 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,512 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,514 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,516 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,518 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,520 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,521 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,523 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,525 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,527 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,529 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,531 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,533 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,535 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,536 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,538 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,540 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,542 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,544 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,546 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,548 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,550 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,551 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,553 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,555 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,557 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,559 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,561 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,563 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,564 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,566 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,568 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,570 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,572 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,574 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,576 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,578 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,580 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,581 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,583 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,585 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,587 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,589 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,591 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,593 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,595 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,596 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,598 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,600 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,602 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,604 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,606 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,608 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,610 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,612 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,613 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,615 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,617 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,619 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,621 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,623 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,625 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,627 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,629 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,630 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,632 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,634 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,636 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,638 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,640 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,642 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,644 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,646 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,647 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,649 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,651 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,653 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,655 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,657 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,659 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,660 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,662 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,664 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,665 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,667 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,668 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,670 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,672 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,673 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,675 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,677 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,678 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,680 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,681 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,683 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,685 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,686 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,688 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,690 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,691 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,693 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,695 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,696 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,698 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,700 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,701 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,703 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,704 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,706 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,708 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,709 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,711 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,713 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,714 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,716 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,718 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,719 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,721 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,722 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,724 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,726 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,727 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,729 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,731 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,732 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,734 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,736 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,737 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,739 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,741 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,742 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,744 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,746 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,747 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,749 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,750 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,752 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,754 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,755 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,757 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,759 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,760 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,762 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,763 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,765 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,767 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,768 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,770 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,772 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,773 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,775 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,777 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,778 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,780 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,782 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,783 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,785 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,787 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,788 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,790 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,792 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,793 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,795 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,796 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,798 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,800 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,801 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,803 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,805 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,806 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,808 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,810 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,811 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,813 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,815 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,816 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,818 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,819 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,821 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,823 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,824 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,826 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,828 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,830 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,832 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,834 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,836 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,837 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,839 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,841 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,843 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,844 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,846 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,848 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,850 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,851 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,853 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,855 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,926 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,929 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,932 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,935 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,937 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,940 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:36,943 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:39,360 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:39,363 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-16:03:38:39,367 INFO     [__main__.py:376] Selected Tasks: ['mmlu']
2025-05-16:03:38:39,370 INFO     [evaluator.py:161] Setting random seed to 0 | Setting numpy seed to 1234 | Setting torch manual seed to 1234
2025-05-16:03:38:39,370 INFO     [evaluator.py:198] Initializing hf model, with arguments: {'pretrained': 'shengyuanhu/benchmark_wmdp_npo_kl_ckpt_75', 'tokenizer': 'HuggingFaceH4/zephyr-7b-beta'}
2025-05-16:03:38:39,891 INFO     [huggingface.py:130] Using device 'cuda:1'
2025-05-16:03:38:40,165 INFO     [huggingface.py:366] Model parallel was set to False, max memory was not set, and device map was set to {'': 'cuda:1'}
Loading checkpoint shards:   0%|          | 0/3 [00:00<?, ?it/s]Loading checkpoint shards:  33%|███▎      | 1/3 [00:01<00:03,  1.94s/it]Loading checkpoint shards:  67%|██████▋   | 2/3 [00:03<00:01,  1.65s/it]Loading checkpoint shards: 100%|██████████| 3/3 [00:04<00:00,  1.47s/it]Loading checkpoint shards: 100%|██████████| 3/3 [00:04<00:00,  1.55s/it]
2025-05-16:03:39:03,491 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:39:03,491 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:39:03,492 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:39:03,492 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:39:03,492 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:39:03,492 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:39:03,492 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:39:03,492 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:39:03,492 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:39:03,492 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:39:03,492 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:39:03,492 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:39:03,492 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:39:03,492 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:39:03,492 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:39:03,492 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:39:03,492 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:39:03,492 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:39:03,493 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:39:03,493 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:39:03,493 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:39:03,493 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:39:03,493 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:39:03,493 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:39:03,493 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:39:03,493 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:39:03,493 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:39:03,493 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:39:03,493 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:39:03,493 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:39:03,493 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:39:03,493 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:39:03,493 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:39:03,493 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:39:03,494 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:39:03,494 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:39:03,494 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:39:03,494 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:39:03,494 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:39:03,494 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:39:03,494 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:39:03,494 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:39:03,494 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:39:03,494 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:39:03,494 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:39:03,494 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:39:03,494 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:39:03,494 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:39:03,494 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:39:03,494 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:39:03,494 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:39:03,495 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:39:03,495 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:39:03,495 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:39:03,495 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:39:03,495 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:39:03,495 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-16:03:39:03,495 WARNING  [model.py:422] model.chat_template was called with the chat_template set to False or None. Therefore no chat template will be applied. Make sure this is an intended behavior.
2025-05-16:03:39:03,502 INFO     [task.py:428] Building contexts for mmlu_high_school_computer_science on rank 0...
  0%|          | 0/100 [00:00<?, ?it/s] 74%|███████▍  | 74/100 [00:00<00:00, 739.35it/s]100%|██████████| 100/100 [00:00<00:00, 738.82it/s]
2025-05-16:03:39:03,642 INFO     [task.py:428] Building contexts for mmlu_high_school_biology on rank 0...
  0%|          | 0/310 [00:00<?, ?it/s] 23%|██▎       | 72/310 [00:00<00:00, 714.90it/s] 48%|████▊     | 148/310 [00:00<00:00, 736.76it/s] 75%|███████▌  | 234/310 [00:00<00:00, 790.27it/s]100%|██████████| 310/310 [00:00<00:00, 793.37it/s]
2025-05-16:03:39:04,044 INFO     [task.py:428] Building contexts for mmlu_abstract_algebra on rank 0...
  0%|          | 0/100 [00:00<?, ?it/s] 77%|███████▋  | 77/100 [00:00<00:00, 766.89it/s]100%|██████████| 100/100 [00:00<00:00, 762.97it/s]
2025-05-16:03:39:04,180 INFO     [task.py:428] Building contexts for mmlu_electrical_engineering on rank 0...
  0%|          | 0/145 [00:00<?, ?it/s] 52%|█████▏    | 75/145 [00:00<00:00, 740.07it/s]100%|██████████| 145/145 [00:00<00:00, 732.87it/s]
2025-05-16:03:39:04,384 INFO     [task.py:428] Building contexts for mmlu_college_chemistry on rank 0...
  0%|          | 0/100 [00:00<?, ?it/s] 75%|███████▌  | 75/100 [00:00<00:00, 747.06it/s]100%|██████████| 100/100 [00:00<00:00, 750.15it/s]
2025-05-16:03:39:04,522 INFO     [task.py:428] Building contexts for mmlu_high_school_chemistry on rank 0...
  0%|          | 0/203 [00:00<?, ?it/s] 37%|███▋      | 75/203 [00:00<00:00, 748.18it/s] 74%|███████▍  | 150/203 [00:00<00:00, 746.09it/s]100%|██████████| 203/203 [00:00<00:00, 742.30it/s]
2025-05-16:03:39:04,804 INFO     [task.py:428] Building contexts for mmlu_astronomy on rank 0...
  0%|          | 0/152 [00:00<?, ?it/s] 49%|████▉     | 75/152 [00:00<00:00, 745.98it/s] 99%|█████████▉| 151/152 [00:00<00:00, 751.82it/s]100%|██████████| 152/152 [00:00<00:00, 750.41it/s]
2025-05-16:03:39:05,013 INFO     [task.py:428] Building contexts for mmlu_college_physics on rank 0...
  0%|          | 0/102 [00:00<?, ?it/s] 74%|███████▎  | 75/102 [00:00<00:00, 745.94it/s]100%|██████████| 102/102 [00:00<00:00, 733.25it/s]
2025-05-16:03:39:05,156 INFO     [task.py:428] Building contexts for mmlu_college_computer_science on rank 0...
  0%|          | 0/100 [00:00<?, ?it/s] 76%|███████▌  | 76/100 [00:00<00:00, 757.28it/s]100%|██████████| 100/100 [00:00<00:00, 758.23it/s]
2025-05-16:03:39:05,294 INFO     [task.py:428] Building contexts for mmlu_college_biology on rank 0...
  0%|          | 0/144 [00:00<?, ?it/s] 53%|█████▎    | 76/144 [00:00<00:00, 751.96it/s]100%|██████████| 144/144 [00:00<00:00, 752.62it/s]
2025-05-16:03:39:05,491 INFO     [task.py:428] Building contexts for mmlu_conceptual_physics on rank 0...
  0%|          | 0/235 [00:00<?, ?it/s] 32%|███▏      | 75/235 [00:00<00:00, 745.42it/s] 64%|██████▍   | 150/235 [00:00<00:00, 734.91it/s] 96%|█████████▌| 225/235 [00:00<00:00, 740.88it/s]100%|██████████| 235/235 [00:00<00:00, 740.15it/s]
2025-05-16:03:39:05,817 INFO     [task.py:428] Building contexts for mmlu_machine_learning on rank 0...
  0%|          | 0/112 [00:00<?, ?it/s] 68%|██████▊   | 76/112 [00:00<00:00, 750.75it/s]100%|██████████| 112/112 [00:00<00:00, 749.24it/s]
2025-05-16:03:39:05,972 INFO     [task.py:428] Building contexts for mmlu_high_school_mathematics on rank 0...
  0%|          | 0/270 [00:00<?, ?it/s] 28%|██▊       | 76/270 [00:00<00:00, 755.24it/s] 56%|█████▋    | 152/270 [00:00<00:00, 744.45it/s] 84%|████████▍ | 228/270 [00:00<00:00, 748.01it/s]100%|██████████| 270/270 [00:00<00:00, 749.01it/s]
2025-05-16:03:39:06,343 INFO     [task.py:428] Building contexts for mmlu_computer_security on rank 0...
  0%|          | 0/100 [00:00<?, ?it/s] 75%|███████▌  | 75/100 [00:00<00:00, 749.49it/s]100%|██████████| 100/100 [00:00<00:00, 751.27it/s]
2025-05-16:03:39:06,481 INFO     [task.py:428] Building contexts for mmlu_college_mathematics on rank 0...
  0%|          | 0/100 [00:00<?, ?it/s] 76%|███████▌  | 76/100 [00:00<00:00, 759.18it/s]100%|██████████| 100/100 [00:00<00:00, 759.12it/s]
2025-05-16:03:39:06,617 INFO     [task.py:428] Building contexts for mmlu_anatomy on rank 0...
  0%|          | 0/135 [00:00<?, ?it/s] 56%|█████▌    | 75/135 [00:00<00:00, 744.28it/s]100%|██████████| 135/135 [00:00<00:00, 749.32it/s]
2025-05-16:03:39:06,803 INFO     [task.py:428] Building contexts for mmlu_elementary_mathematics on rank 0...
  0%|          | 0/378 [00:00<?, ?it/s] 20%|██        | 76/378 [00:00<00:00, 753.91it/s] 40%|████      | 152/378 [00:00<00:00, 751.22it/s] 60%|██████    | 228/378 [00:00<00:00, 752.00it/s] 80%|████████  | 304/378 [00:00<00:00, 753.07it/s]100%|██████████| 378/378 [00:00<00:00, 748.96it/s]
2025-05-16:03:39:07,322 INFO     [task.py:428] Building contexts for mmlu_high_school_physics on rank 0...
  0%|          | 0/151 [00:00<?, ?it/s] 50%|█████     | 76/151 [00:00<00:00, 754.80it/s]100%|██████████| 151/151 [00:00<00:00, 754.95it/s]
2025-05-16:03:39:07,529 INFO     [task.py:428] Building contexts for mmlu_high_school_statistics on rank 0...
  0%|          | 0/216 [00:00<?, ?it/s] 35%|███▌      | 76/216 [00:00<00:00, 750.55it/s] 70%|███████   | 152/216 [00:00<00:00, 752.73it/s]100%|██████████| 216/216 [00:00<00:00, 751.95it/s]
2025-05-16:03:39:07,825 INFO     [task.py:428] Building contexts for mmlu_clinical_knowledge on rank 0...
  0%|          | 0/265 [00:00<?, ?it/s] 29%|██▊       | 76/265 [00:00<00:00, 752.53it/s] 57%|█████▋    | 152/265 [00:00<00:00, 744.00it/s] 86%|████████▌ | 227/265 [00:00<00:00, 746.58it/s]100%|██████████| 265/265 [00:00<00:00, 747.34it/s]
2025-05-16:03:39:08,190 INFO     [task.py:428] Building contexts for mmlu_business_ethics on rank 0...
  0%|          | 0/100 [00:00<?, ?it/s] 76%|███████▌  | 76/100 [00:00<00:00, 757.69it/s]100%|██████████| 100/100 [00:00<00:00, 756.42it/s]
2025-05-16:03:39:08,328 INFO     [task.py:428] Building contexts for mmlu_management on rank 0...
  0%|          | 0/103 [00:00<?, ?it/s] 74%|███████▍  | 76/103 [00:00<00:00, 756.26it/s]100%|██████████| 103/103 [00:00<00:00, 751.94it/s]
2025-05-16:03:39:08,470 INFO     [task.py:428] Building contexts for mmlu_nutrition on rank 0...
  0%|          | 0/306 [00:00<?, ?it/s] 25%|██▍       | 75/306 [00:00<00:00, 745.03it/s] 49%|████▉     | 150/306 [00:00<00:00, 734.94it/s] 74%|███████▍  | 226/306 [00:00<00:00, 745.15it/s] 99%|█████████▊| 302/306 [00:00<00:00, 747.57it/s]100%|██████████| 306/306 [00:00<00:00, 744.75it/s]
2025-05-16:03:39:08,892 INFO     [task.py:428] Building contexts for mmlu_college_medicine on rank 0...
  0%|          | 0/173 [00:00<?, ?it/s] 43%|████▎     | 75/173 [00:00<00:00, 748.60it/s] 88%|████████▊ | 153/173 [00:00<00:00, 761.97it/s]100%|██████████| 173/173 [00:00<00:00, 765.72it/s]
2025-05-16:03:39:09,126 INFO     [task.py:428] Building contexts for mmlu_virology on rank 0...
  0%|          | 0/166 [00:00<?, ?it/s] 54%|█████▎    | 89/166 [00:00<00:00, 885.23it/s]100%|██████████| 166/166 [00:00<00:00, 881.62it/s]
2025-05-16:03:39:09,321 INFO     [task.py:428] Building contexts for mmlu_professional_medicine on rank 0...
  0%|          | 0/272 [00:00<?, ?it/s] 27%|██▋       | 74/272 [00:00<00:00, 737.20it/s] 54%|█████▍    | 148/272 [00:00<00:00, 732.68it/s] 82%|████████▏ | 223/272 [00:00<00:00, 736.22it/s]100%|██████████| 272/272 [00:00<00:00, 738.21it/s]
2025-05-16:03:39:09,700 INFO     [task.py:428] Building contexts for mmlu_miscellaneous on rank 0...
  0%|          | 0/783 [00:00<?, ?it/s] 10%|▉         | 77/783 [00:00<00:00, 764.01it/s] 20%|█▉        | 154/783 [00:00<00:00, 759.73it/s] 30%|██▉       | 231/783 [00:00<00:00, 761.99it/s] 39%|███▉      | 308/783 [00:00<00:00, 759.69it/s] 49%|████▉     | 384/783 [00:00<00:00, 759.69it/s] 59%|█████▊    | 460/783 [00:00<00:00, 751.76it/s] 68%|██████▊   | 536/783 [00:00<00:00, 754.14it/s] 78%|███████▊  | 613/783 [00:00<00:00, 757.33it/s] 88%|████████▊ | 690/783 [00:00<00:00, 758.71it/s] 98%|█████████▊| 767/783 [00:01<00:00, 760.11it/s]100%|██████████| 783/783 [00:01<00:00, 758.27it/s]
2025-05-16:03:39:10,762 INFO     [task.py:428] Building contexts for mmlu_medical_genetics on rank 0...
  0%|          | 0/100 [00:00<?, ?it/s] 76%|███████▌  | 76/100 [00:00<00:00, 754.98it/s]100%|██████████| 100/100 [00:00<00:00, 754.27it/s]
2025-05-16:03:39:10,899 INFO     [task.py:428] Building contexts for mmlu_global_facts on rank 0...
  0%|          | 0/100 [00:00<?, ?it/s] 76%|███████▌  | 76/100 [00:00<00:00, 755.86it/s]100%|██████████| 100/100 [00:00<00:00, 756.12it/s]
2025-05-16:03:39:11,036 INFO     [task.py:428] Building contexts for mmlu_professional_accounting on rank 0...
  0%|          | 0/282 [00:00<?, ?it/s] 27%|██▋       | 77/282 [00:00<00:00, 767.01it/s] 55%|█████▍    | 154/282 [00:00<00:00, 762.70it/s] 82%|████████▏ | 231/282 [00:00<00:00, 755.20it/s]100%|██████████| 282/282 [00:00<00:00, 757.18it/s]
2025-05-16:03:39:11,420 INFO     [task.py:428] Building contexts for mmlu_marketing on rank 0...
  0%|          | 0/234 [00:00<?, ?it/s]  8%|▊         | 19/234 [00:00<00:02, 72.75it/s] 40%|████      | 94/234 [00:00<00:00, 310.97it/s] 72%|███████▏  | 169/234 [00:00<00:00, 456.91it/s]100%|██████████| 234/234 [00:00<00:00, 425.49it/s]
2025-05-16:03:39:11,979 INFO     [task.py:428] Building contexts for mmlu_human_aging on rank 0...
  0%|          | 0/223 [00:00<?, ?it/s] 34%|███▎      | 75/223 [00:00<00:00, 746.78it/s] 67%|██████▋   | 150/223 [00:00<00:00, 746.45it/s]100%|██████████| 223/223 [00:00<00:00, 733.64it/s]
2025-05-16:03:39:12,293 INFO     [task.py:428] Building contexts for mmlu_public_relations on rank 0...
  0%|          | 0/110 [00:00<?, ?it/s] 68%|██████▊   | 75/110 [00:00<00:00, 749.29it/s]100%|██████████| 110/110 [00:00<00:00, 749.64it/s]
2025-05-16:03:39:12,445 INFO     [task.py:428] Building contexts for mmlu_sociology on rank 0...
  0%|          | 0/201 [00:00<?, ?it/s] 38%|███▊      | 76/201 [00:00<00:00, 752.78it/s] 76%|███████▌  | 153/201 [00:00<00:00, 758.47it/s]100%|██████████| 201/201 [00:00<00:00, 758.76it/s]
2025-05-16:03:39:12,718 INFO     [task.py:428] Building contexts for mmlu_high_school_geography on rank 0...
  0%|          | 0/198 [00:00<?, ?it/s] 38%|███▊      | 76/198 [00:00<00:00, 755.33it/s] 77%|███████▋  | 152/198 [00:00<00:00, 754.12it/s]100%|██████████| 198/198 [00:00<00:00, 754.02it/s]
2025-05-16:03:39:12,989 INFO     [task.py:428] Building contexts for mmlu_security_studies on rank 0...
  0%|          | 0/245 [00:00<?, ?it/s] 31%|███▏      | 77/245 [00:00<00:00, 765.41it/s] 63%|██████▎   | 154/245 [00:00<00:00, 762.89it/s] 94%|█████████▍| 231/245 [00:00<00:00, 761.58it/s]100%|██████████| 245/245 [00:00<00:00, 761.03it/s]
2025-05-16:03:39:13,320 INFO     [task.py:428] Building contexts for mmlu_high_school_psychology on rank 0...
  0%|          | 0/545 [00:00<?, ?it/s] 14%|█▍        | 76/545 [00:00<00:00, 758.23it/s] 28%|██▊       | 152/545 [00:00<00:00, 756.73it/s] 42%|████▏     | 228/545 [00:00<00:00, 746.33it/s] 56%|█████▌    | 305/545 [00:00<00:00, 753.40it/s] 70%|███████   | 382/545 [00:00<00:00, 758.17it/s] 84%|████████▍ | 458/545 [00:00<00:00, 756.25it/s] 98%|█████████▊| 534/545 [00:00<00:00, 757.17it/s]100%|██████████| 545/545 [00:00<00:00, 755.54it/s]
2025-05-16:03:39:14,062 INFO     [task.py:428] Building contexts for mmlu_us_foreign_policy on rank 0...
  0%|          | 0/100 [00:00<?, ?it/s] 76%|███████▌  | 76/100 [00:00<00:00, 755.98it/s]100%|██████████| 100/100 [00:00<00:00, 755.37it/s]
2025-05-16:03:39:14,199 INFO     [task.py:428] Building contexts for mmlu_high_school_macroeconomics on rank 0...
  0%|          | 0/390 [00:00<?, ?it/s] 20%|█▉        | 77/390 [00:00<00:00, 766.55it/s] 39%|███▉      | 154/390 [00:00<00:00, 765.95it/s] 59%|█████▉    | 231/390 [00:00<00:00, 767.33it/s] 82%|████████▏ | 318/390 [00:00<00:00, 807.15it/s]100%|██████████| 390/390 [00:00<00:00, 808.79it/s]
2025-05-16:03:39:14,696 INFO     [task.py:428] Building contexts for mmlu_high_school_microeconomics on rank 0...
  0%|          | 0/238 [00:00<?, ?it/s] 37%|███▋      | 87/238 [00:00<00:00, 862.57it/s] 74%|███████▍  | 176/238 [00:00<00:00, 874.80it/s]100%|██████████| 238/238 [00:00<00:00, 876.69it/s]
2025-05-16:03:39:14,976 INFO     [task.py:428] Building contexts for mmlu_econometrics on rank 0...
  0%|          | 0/114 [00:00<?, ?it/s] 79%|███████▉  | 90/114 [00:00<00:00, 892.53it/s]100%|██████████| 114/114 [00:00<00:00, 875.81it/s]
2025-05-16:03:39:15,111 INFO     [task.py:428] Building contexts for mmlu_professional_psychology on rank 0...
  0%|          | 0/612 [00:00<?, ?it/s] 13%|█▎        | 77/612 [00:00<00:00, 762.22it/s] 25%|██▌       | 154/612 [00:00<00:00, 765.55it/s] 38%|███▊      | 231/612 [00:00<00:00, 764.81it/s] 50%|█████     | 308/612 [00:00<00:00, 762.16it/s] 63%|██████▎   | 385/612 [00:00<00:00, 760.83it/s] 75%|███████▌  | 462/612 [00:00<00:00, 759.06it/s] 88%|████████▊ | 538/612 [00:00<00:00, 758.93it/s]100%|██████████| 612/612 [00:00<00:00, 760.18it/s]
2025-05-16:03:39:15,938 INFO     [task.py:428] Building contexts for mmlu_human_sexuality on rank 0...
  0%|          | 0/131 [00:00<?, ?it/s] 53%|█████▎    | 69/131 [00:00<00:00, 684.15it/s]100%|██████████| 131/131 [00:00<00:00, 717.60it/s]
2025-05-16:03:39:16,126 INFO     [task.py:428] Building contexts for mmlu_high_school_government_and_politics on rank 0...
  0%|          | 0/193 [00:00<?, ?it/s] 39%|███▉      | 75/193 [00:00<00:00, 745.30it/s] 78%|███████▊  | 151/193 [00:00<00:00, 749.03it/s]100%|██████████| 193/193 [00:00<00:00, 748.93it/s]
2025-05-16:03:39:16,392 INFO     [task.py:428] Building contexts for mmlu_moral_scenarios on rank 0...
  0%|          | 0/895 [00:00<?, ?it/s]  8%|▊         | 76/895 [00:00<00:01, 752.39it/s] 17%|█▋        | 152/895 [00:00<00:00, 752.10it/s] 26%|██▌       | 229/895 [00:00<00:00, 759.26it/s] 34%|███▍      | 306/895 [00:00<00:00, 760.69it/s] 43%|████▎     | 383/895 [00:00<00:00, 759.88it/s] 51%|█████▏    | 460/895 [00:00<00:00, 760.78it/s] 60%|██████    | 537/895 [00:00<00:00, 760.55it/s] 69%|██████▊   | 614/895 [00:00<00:00, 760.43it/s] 77%|███████▋  | 691/895 [00:00<00:00, 761.01it/s] 86%|████████▌ | 768/895 [00:01<00:00, 760.70it/s] 94%|█████████▍| 845/895 [00:01<00:00, 761.47it/s]100%|██████████| 895/895 [00:01<00:00, 760.32it/s]
2025-05-16:03:39:17,601 INFO     [task.py:428] Building contexts for mmlu_high_school_world_history on rank 0...
  0%|          | 0/237 [00:00<?, ?it/s] 31%|███       | 73/237 [00:00<00:00, 725.33it/s] 63%|██████▎   | 149/237 [00:00<00:00, 743.79it/s] 95%|█████████▍| 225/237 [00:00<00:00, 750.52it/s]100%|██████████| 237/237 [00:00<00:00, 746.32it/s]
2025-05-16:03:39:17,929 INFO     [task.py:428] Building contexts for mmlu_high_school_european_history on rank 0...
  0%|          | 0/165 [00:00<?, ?it/s] 46%|████▌     | 76/165 [00:00<00:00, 754.54it/s] 92%|█████████▏| 152/165 [00:00<00:00, 755.22it/s]100%|██████████| 165/165 [00:00<00:00, 754.40it/s]
2025-05-16:03:39:18,156 INFO     [task.py:428] Building contexts for mmlu_philosophy on rank 0...
  0%|          | 0/311 [00:00<?, ?it/s] 25%|██▍       | 77/311 [00:00<00:00, 761.49it/s] 50%|████▉     | 154/311 [00:00<00:00, 765.13it/s] 74%|███████▍  | 231/311 [00:00<00:00, 761.89it/s] 99%|█████████▉| 308/311 [00:00<00:00, 758.80it/s]100%|██████████| 311/311 [00:00<00:00, 759.98it/s]
2025-05-16:03:39:18,577 INFO     [task.py:428] Building contexts for mmlu_moral_disputes on rank 0...
  0%|          | 0/346 [00:00<?, ?it/s] 22%|██▏       | 76/346 [00:00<00:00, 751.69it/s] 44%|████▍     | 153/346 [00:00<00:00, 757.31it/s] 66%|██████▋   | 230/346 [00:00<00:00, 759.40it/s] 88%|████████▊ | 306/346 [00:00<00:00, 759.04it/s]100%|██████████| 346/346 [00:00<00:00, 758.31it/s]
2025-05-16:03:39:19,047 INFO     [task.py:428] Building contexts for mmlu_high_school_us_history on rank 0...
  0%|          | 0/204 [00:00<?, ?it/s] 37%|███▋      | 76/204 [00:00<00:00, 754.63it/s] 75%|███████▍  | 152/204 [00:00<00:00, 751.63it/s]100%|██████████| 204/204 [00:00<00:00, 751.81it/s]
2025-05-16:03:39:19,327 INFO     [task.py:428] Building contexts for mmlu_international_law on rank 0...
  0%|          | 0/121 [00:00<?, ?it/s] 62%|██████▏   | 75/121 [00:00<00:00, 740.82it/s]100%|██████████| 121/121 [00:00<00:00, 743.96it/s]
2025-05-16:03:39:19,494 INFO     [task.py:428] Building contexts for mmlu_professional_law on rank 0...
  0%|          | 0/1534 [00:00<?, ?it/s]  5%|▍         | 76/1534 [00:00<00:01, 752.41it/s] 10%|▉         | 153/1534 [00:00<00:01, 757.55it/s] 15%|█▍        | 230/1534 [00:00<00:01, 761.01it/s] 20%|██        | 307/1534 [00:00<00:01, 760.38it/s] 25%|██▌       | 384/1534 [00:00<00:01, 759.78it/s] 30%|███       | 461/1534 [00:00<00:01, 761.29it/s] 35%|███▌      | 538/1534 [00:00<00:01, 760.24it/s] 40%|████      | 615/1534 [00:00<00:01, 760.35it/s] 45%|████▌     | 693/1534 [00:00<00:01, 764.51it/s] 51%|█████     | 780/1534 [00:01<00:00, 796.65it/s] 57%|█████▋    | 870/1534 [00:01<00:00, 827.54it/s] 62%|██████▏   | 953/1534 [00:01<00:00, 651.78it/s] 68%|██████▊   | 1038/1534 [00:01<00:00, 701.92it/s] 74%|███████▎  | 1130/1534 [00:01<00:00, 759.49it/s] 80%|███████▉  | 1222/1534 [00:01<00:00, 803.68it/s] 86%|████████▌ | 1313/1534 [00:01<00:00, 833.37it/s] 92%|█████████▏| 1406/1534 [00:01<00:00, 858.82it/s] 98%|█████████▊| 1500/1534 [00:01<00:00, 882.14it/s]100%|██████████| 1534/1534 [00:01<00:00, 791.52it/s]
2025-05-16:03:39:21,491 INFO     [task.py:428] Building contexts for mmlu_world_religions on rank 0...
  0%|          | 0/171 [00:00<?, ?it/s] 56%|█████▌    | 95/171 [00:00<00:00, 945.29it/s]100%|██████████| 171/171 [00:00<00:00, 944.90it/s]
2025-05-16:03:39:21,678 INFO     [task.py:428] Building contexts for mmlu_jurisprudence on rank 0...
  0%|          | 0/108 [00:00<?, ?it/s] 88%|████████▊ | 95/108 [00:00<00:00, 944.74it/s]100%|██████████| 108/108 [00:00<00:00, 942.81it/s]
2025-05-16:03:39:21,797 INFO     [task.py:428] Building contexts for mmlu_formal_logic on rank 0...
  0%|          | 0/126 [00:00<?, ?it/s] 75%|███████▍  | 94/126 [00:00<00:00, 930.82it/s]100%|██████████| 126/126 [00:00<00:00, 933.59it/s]
2025-05-16:03:39:21,936 INFO     [task.py:428] Building contexts for mmlu_prehistory on rank 0...
  0%|          | 0/324 [00:00<?, ?it/s] 27%|██▋       | 88/324 [00:00<00:00, 253.51it/s] 55%|█████▌    | 179/324 [00:00<00:00, 444.75it/s] 84%|████████▎ | 271/324 [00:00<00:00, 584.04it/s]100%|██████████| 324/324 [00:00<00:00, 535.40it/s]
2025-05-16:03:39:22,551 INFO     [task.py:428] Building contexts for mmlu_logical_fallacies on rank 0...
  0%|          | 0/163 [00:00<?, ?it/s] 56%|█████▋    | 92/163 [00:00<00:00, 912.39it/s]100%|██████████| 163/163 [00:00<00:00, 914.67it/s]
2025-05-16:03:39:22,735 INFO     [evaluator.py:485] Running loglikelihood requests
Running loglikelihood requests:   0%|          | 0/56168 [00:00<?, ?it/s]Starting from v4.46, the `logits` model output will have the same type as the model (except at train time, where it will always be FP32)
Running loglikelihood requests:   0%|          | 1/56168 [00:01<30:28:17,  1.95s/it]Running loglikelihood requests:   0%|          | 65/56168 [00:02<33:34, 27.85it/s]  Running loglikelihood requests:   0%|          | 129/56168 [00:03<21:29, 43.47it/s]Running loglikelihood requests:   0%|          | 193/56168 [00:04<17:10, 54.33it/s]Running loglikelihood requests:   0%|          | 257/56168 [00:05<15:01, 62.01it/s]Running loglikelihood requests:   1%|          | 321/56168 [00:06<13:41, 67.98it/s]Running loglikelihood requests:   1%|          | 385/56168 [00:06<12:48, 72.62it/s]Running loglikelihood requests:   1%|          | 449/56168 [00:07<12:09, 76.34it/s]Running loglikelihood requests:   1%|          | 513/56168 [00:08<11:39, 79.51it/s]Running loglikelihood requests:   1%|          | 577/56168 [00:09<11:11, 82.73it/s]Running loglikelihood requests:   1%|          | 641/56168 [00:09<10:51, 85.22it/s]Running loglikelihood requests:   1%|▏         | 705/56168 [00:10<10:32, 87.62it/s]Running loglikelihood requests:   1%|▏         | 769/56168 [00:11<10:16, 89.89it/s]Running loglikelihood requests:   1%|▏         | 833/56168 [00:11<10:02, 91.85it/s]Running loglikelihood requests:   2%|▏         | 897/56168 [00:12<09:53, 93.17it/s]Running loglikelihood requests:   2%|▏         | 961/56168 [00:13<09:40, 95.03it/s]Running loglikelihood requests:   2%|▏         | 1025/56168 [00:13<09:31, 96.45it/s]Running loglikelihood requests:   2%|▏         | 1089/56168 [00:14<09:21, 98.07it/s]Running loglikelihood requests:   2%|▏         | 1153/56168 [00:15<09:13, 99.33it/s]Running loglikelihood requests:   2%|▏         | 1217/56168 [00:15<09:04, 100.86it/s]Running loglikelihood requests:   2%|▏         | 1281/56168 [00:16<08:58, 102.01it/s]Running loglikelihood requests:   2%|▏         | 1345/56168 [00:16<08:52, 102.97it/s]Running loglikelihood requests:   3%|▎         | 1409/56168 [00:17<08:40, 105.30it/s]Running loglikelihood requests:   3%|▎         | 1473/56168 [00:18<08:31, 107.03it/s]Running loglikelihood requests:   3%|▎         | 1537/56168 [00:18<08:23, 108.44it/s]Running loglikelihood requests:   3%|▎         | 1601/56168 [00:19<08:17, 109.64it/s]Running loglikelihood requests:   3%|▎         | 1665/56168 [00:19<08:11, 110.99it/s]Running loglikelihood requests:   3%|▎         | 1729/56168 [00:20<08:05, 112.18it/s]Running loglikelihood requests:   3%|▎         | 1793/56168 [00:20<08:01, 112.95it/s]Running loglikelihood requests:   3%|▎         | 1857/56168 [00:21<07:57, 113.82it/s]Running loglikelihood requests:   3%|▎         | 1921/56168 [00:21<07:52, 114.83it/s]Running loglikelihood requests:   4%|▎         | 1985/56168 [00:22<07:47, 115.85it/s]Running loglikelihood requests:   4%|▎         | 2049/56168 [00:23<07:44, 116.59it/s]Running loglikelihood requests:   4%|▍         | 2113/56168 [00:23<07:40, 117.30it/s]Running loglikelihood requests:   4%|▍         | 2177/56168 [00:24<07:35, 118.59it/s]Running loglikelihood requests:   4%|▍         | 2241/56168 [00:24<07:30, 119.72it/s]Running loglikelihood requests:   4%|▍         | 2305/56168 [00:25<07:26, 120.62it/s]Running loglikelihood requests:   4%|▍         | 2369/56168 [00:25<07:20, 122.00it/s]Running loglikelihood requests:   4%|▍         | 2433/56168 [00:26<07:17, 122.89it/s]Running loglikelihood requests:   4%|▍         | 2497/56168 [00:26<07:14, 123.57it/s]Running loglikelihood requests:   5%|▍         | 2561/56168 [00:27<07:11, 124.32it/s]Running loglikelihood requests:   5%|▍         | 2625/56168 [00:27<07:05, 125.73it/s]Running loglikelihood requests:   5%|▍         | 2689/56168 [00:28<07:02, 126.71it/s]Running loglikelihood requests:   5%|▍         | 2753/56168 [00:28<06:58, 127.59it/s]Running loglikelihood requests:   5%|▌         | 2817/56168 [00:29<06:55, 128.25it/s]Running loglikelihood requests:   5%|▌         | 2881/56168 [00:29<06:53, 128.99it/s]Running loglikelihood requests:   5%|▌         | 2945/56168 [00:30<06:51, 129.47it/s]Running loglikelihood requests:   5%|▌         | 3009/56168 [00:30<06:49, 129.89it/s]Running loglikelihood requests:   5%|▌         | 3073/56168 [00:31<06:45, 130.79it/s]Running loglikelihood requests:   6%|▌         | 3137/56168 [00:31<06:42, 131.62it/s]Running loglikelihood requests:   6%|▌         | 3201/56168 [00:32<06:40, 132.25it/s]Running loglikelihood requests:   6%|▌         | 3265/56168 [00:32<06:38, 132.60it/s]Running loglikelihood requests:   6%|▌         | 3329/56168 [00:33<06:37, 133.02it/s]Running loglikelihood requests:   6%|▌         | 3393/56168 [00:33<06:35, 133.50it/s]Running loglikelihood requests:   6%|▌         | 3457/56168 [00:33<06:34, 133.72it/s]Running loglikelihood requests:   6%|▋         | 3521/56168 [00:34<06:31, 134.51it/s]Running loglikelihood requests:   6%|▋         | 3585/56168 [00:34<06:30, 134.70it/s]Running loglikelihood requests:   6%|▋         | 3649/56168 [00:35<06:27, 135.61it/s]Running loglikelihood requests:   7%|▋         | 3713/56168 [00:35<06:24, 136.30it/s]Running loglikelihood requests:   7%|▋         | 3777/56168 [00:36<06:22, 136.95it/s]Running loglikelihood requests:   7%|▋         | 3841/56168 [00:36<06:20, 137.60it/s]Running loglikelihood requests:   7%|▋         | 3905/56168 [00:37<06:18, 137.97it/s]Running loglikelihood requests:   7%|▋         | 3969/56168 [00:37<06:17, 138.34it/s]Running loglikelihood requests:   7%|▋         | 4033/56168 [00:38<06:15, 138.76it/s]Running loglikelihood requests:   7%|▋         | 4097/56168 [00:38<06:08, 141.13it/s]Running loglikelihood requests:   7%|▋         | 4161/56168 [00:39<06:03, 142.94it/s]Running loglikelihood requests:   8%|▊         | 4225/56168 [00:39<05:59, 144.44it/s]Running loglikelihood requests:   8%|▊         | 4289/56168 [00:39<05:56, 145.62it/s]Running loglikelihood requests:   8%|▊         | 4353/56168 [00:40<05:54, 146.36it/s]Running loglikelihood requests:   8%|▊         | 4417/56168 [00:40<05:51, 147.19it/s]Running loglikelihood requests:   8%|▊         | 4481/56168 [00:41<05:50, 147.67it/s]Running loglikelihood requests:   8%|▊         | 4545/56168 [00:41<05:48, 148.06it/s]Running loglikelihood requests:   8%|▊         | 4609/56168 [00:42<05:47, 148.58it/s]Running loglikelihood requests:   8%|▊         | 4673/56168 [00:42<05:43, 149.77it/s]Running loglikelihood requests:   8%|▊         | 4737/56168 [00:42<05:41, 150.79it/s]Running loglikelihood requests:   9%|▊         | 4801/56168 [00:43<05:38, 151.53it/s]Running loglikelihood requests:   9%|▊         | 4865/56168 [00:43<05:37, 152.17it/s]Running loglikelihood requests:   9%|▉         | 4929/56168 [00:44<05:35, 152.66it/s]Running loglikelihood requests:   9%|▉         | 4993/56168 [00:44<05:33, 153.24it/s]Running loglikelihood requests:   9%|▉         | 5057/56168 [00:44<05:32, 153.67it/s]Running loglikelihood requests:   9%|▉         | 5121/56168 [00:45<05:31, 153.99it/s]Running loglikelihood requests:   9%|▉         | 5185/56168 [00:45<05:30, 154.47it/s]Running loglikelihood requests:   9%|▉         | 5249/56168 [00:46<05:27, 155.46it/s]Running loglikelihood requests:   9%|▉         | 5313/56168 [00:46<05:24, 156.50it/s]Running loglikelihood requests:  10%|▉         | 5377/56168 [00:47<05:22, 157.44it/s]Running loglikelihood requests:  10%|▉         | 5441/56168 [00:47<05:21, 158.01it/s]Running loglikelihood requests:  10%|▉         | 5505/56168 [00:47<05:19, 158.40it/s]Running loglikelihood requests:  10%|▉         | 5569/56168 [00:48<05:17, 159.14it/s]Running loglikelihood requests:  10%|█         | 5633/56168 [00:48<05:16, 159.50it/s]Running loglikelihood requests:  10%|█         | 5697/56168 [00:48<05:15, 160.09it/s]Running loglikelihood requests:  10%|█         | 5761/56168 [00:49<05:14, 160.39it/s]Running loglikelihood requests:  10%|█         | 5825/56168 [00:49<05:13, 160.64it/s]Running loglikelihood requests:  10%|█         | 5889/56168 [00:50<05:10, 161.83it/s]Running loglikelihood requests:  11%|█         | 5953/56168 [00:50<05:08, 162.73it/s]Running loglikelihood requests:  11%|█         | 6017/56168 [00:50<05:05, 163.91it/s]Running loglikelihood requests:  11%|█         | 6081/56168 [00:51<05:03, 164.80it/s]Running loglikelihood requests:  11%|█         | 6145/56168 [00:51<05:02, 165.47it/s]Running loglikelihood requests:  11%|█         | 6209/56168 [00:52<05:00, 166.18it/s]Running loglikelihood requests:  11%|█         | 6273/56168 [00:52<04:58, 167.41it/s]Running loglikelihood requests:  11%|█▏        | 6337/56168 [00:52<04:55, 168.41it/s]Running loglikelihood requests:  11%|█▏        | 6401/56168 [00:53<04:53, 169.38it/s]Running loglikelihood requests:  12%|█▏        | 6465/56168 [00:53<04:52, 169.97it/s]Running loglikelihood requests:  12%|█▏        | 6529/56168 [00:53<04:50, 170.70it/s]Running loglikelihood requests:  12%|█▏        | 6593/56168 [00:54<04:49, 171.23it/s]Running loglikelihood requests:  12%|█▏        | 6657/56168 [00:54<04:48, 171.41it/s]Running loglikelihood requests:  12%|█▏        | 6721/56168 [00:55<04:43, 174.35it/s]Running loglikelihood requests:  12%|█▏        | 6785/56168 [00:55<04:40, 176.14it/s]Running loglikelihood requests:  12%|█▏        | 6849/56168 [00:55<04:37, 177.62it/s]Running loglikelihood requests:  12%|█▏        | 6913/56168 [00:56<04:35, 178.80it/s]Running loglikelihood requests:  12%|█▏        | 6977/56168 [00:56<04:33, 179.65it/s]Running loglikelihood requests:  13%|█▎        | 7041/56168 [00:56<04:32, 180.46it/s]Running loglikelihood requests:  13%|█▎        | 7105/56168 [00:57<04:30, 181.32it/s]Running loglikelihood requests:  13%|█▎        | 7169/56168 [00:57<04:29, 181.86it/s]Running loglikelihood requests:  13%|█▎        | 7233/56168 [00:57<04:28, 182.01it/s]Running loglikelihood requests:  13%|█▎        | 7297/56168 [00:58<04:27, 182.66it/s]Running loglikelihood requests:  13%|█▎        | 7361/56168 [00:58<04:26, 183.32it/s]Running loglikelihood requests:  13%|█▎        | 7425/56168 [00:58<04:25, 183.43it/s]Running loglikelihood requests:  13%|█▎        | 7489/56168 [00:59<04:24, 183.86it/s]Running loglikelihood requests:  13%|█▎        | 7553/56168 [00:59<04:22, 185.17it/s]Running loglikelihood requests:  14%|█▎        | 7617/56168 [00:59<04:21, 185.65it/s]Running loglikelihood requests:  14%|█▎        | 7681/56168 [01:00<04:20, 186.26it/s]Running loglikelihood requests:  14%|█▍        | 7745/56168 [01:00<04:18, 187.53it/s]Running loglikelihood requests:  14%|█▍        | 7809/56168 [01:00<04:16, 188.80it/s]Running loglikelihood requests:  14%|█▍        | 7873/56168 [01:01<04:14, 189.53it/s]Running loglikelihood requests:  14%|█▍        | 7937/56168 [01:01<04:13, 190.36it/s]Running loglikelihood requests:  14%|█▍        | 8001/56168 [01:01<04:12, 190.85it/s]Running loglikelihood requests:  14%|█▍        | 8065/56168 [01:02<04:11, 191.56it/s]Running loglikelihood requests:  14%|█▍        | 8129/56168 [01:02<04:10, 191.78it/s]Running loglikelihood requests:  15%|█▍        | 8193/56168 [01:02<04:07, 193.80it/s]Running loglikelihood requests:  15%|█▍        | 8257/56168 [01:03<04:05, 195.21it/s]Running loglikelihood requests:  15%|█▍        | 8321/56168 [01:03<04:03, 196.12it/s]Running loglikelihood requests:  15%|█▍        | 8385/56168 [01:03<04:02, 196.96it/s]Running loglikelihood requests:  15%|█▌        | 8449/56168 [01:04<04:01, 197.70it/s]Running loglikelihood requests:  15%|█▌        | 8513/56168 [01:04<04:00, 197.99it/s]Running loglikelihood requests:  15%|█▌        | 8577/56168 [01:04<03:59, 198.31it/s]Running loglikelihood requests:  15%|█▌        | 8641/56168 [01:05<03:53, 203.62it/s]Running loglikelihood requests:  15%|█▌        | 8705/56168 [01:05<03:48, 207.47it/s]Running loglikelihood requests:  16%|█▌        | 8769/56168 [01:05<03:45, 210.12it/s]Running loglikelihood requests:  16%|█▌        | 8833/56168 [01:06<03:42, 212.28it/s]Running loglikelihood requests:  16%|█▌        | 8897/56168 [01:06<03:40, 214.57it/s]Running loglikelihood requests:  16%|█▌        | 8961/56168 [01:06<03:38, 215.65it/s]Running loglikelihood requests:  16%|█▌        | 9025/56168 [01:06<03:36, 217.39it/s]Running loglikelihood requests:  16%|█▌        | 9089/56168 [01:07<03:35, 218.72it/s]Running loglikelihood requests:  16%|█▋        | 9153/56168 [01:07<03:34, 219.51it/s]Running loglikelihood requests:  16%|█▋        | 9217/56168 [01:07<03:33, 220.42it/s]Running loglikelihood requests:  17%|█▋        | 9281/56168 [01:08<03:32, 221.14it/s]Running loglikelihood requests:  17%|█▋        | 9345/56168 [01:08<03:30, 221.95it/s]Running loglikelihood requests:  17%|█▋        | 9409/56168 [01:08<03:28, 224.07it/s]Running loglikelihood requests:  17%|█▋        | 9473/56168 [01:08<03:26, 226.32it/s]Running loglikelihood requests:  17%|█▋        | 9537/56168 [01:09<03:25, 227.26it/s]Running loglikelihood requests:  17%|█▋        | 9601/56168 [01:09<03:24, 227.87it/s]Running loglikelihood requests:  17%|█▋        | 9665/56168 [01:09<03:23, 228.59it/s]Running loglikelihood requests:  17%|█▋        | 9729/56168 [01:10<03:22, 229.51it/s]Running loglikelihood requests:  17%|█▋        | 9793/56168 [01:10<03:21, 230.32it/s]Running loglikelihood requests:  18%|█▊        | 9857/56168 [01:10<03:20, 231.54it/s]Running loglikelihood requests:  18%|█▊        | 9921/56168 [01:10<03:18, 233.25it/s]Running loglikelihood requests:  18%|█▊        | 9985/56168 [01:11<03:17, 234.40it/s]Running loglikelihood requests:  18%|█▊        | 10049/56168 [01:11<03:16, 234.86it/s]Running loglikelihood requests:  18%|█▊        | 10113/56168 [01:11<03:15, 235.32it/s]Running loglikelihood requests:  18%|█▊        | 10177/56168 [01:11<03:14, 235.93it/s]Running loglikelihood requests:  18%|█▊        | 10241/56168 [01:12<03:13, 236.81it/s]Running loglikelihood requests:  18%|█▊        | 10305/56168 [01:12<03:12, 238.78it/s]Running loglikelihood requests:  18%|█▊        | 10369/56168 [01:12<03:10, 240.64it/s]Running loglikelihood requests:  19%|█▊        | 10433/56168 [01:12<03:09, 241.39it/s]Running loglikelihood requests:  19%|█▊        | 10497/56168 [01:13<03:08, 242.75it/s]Running loglikelihood requests:  19%|█▉        | 10561/56168 [01:13<03:07, 243.25it/s]Running loglikelihood requests:  19%|█▉        | 10625/56168 [01:13<03:06, 243.89it/s]Running loglikelihood requests:  19%|█▉        | 10689/56168 [01:14<03:05, 244.75it/s]Running loglikelihood requests:  19%|█▉        | 10753/56168 [01:14<03:05, 245.28it/s]Running loglikelihood requests:  19%|█▉        | 10817/56168 [01:14<03:04, 245.66it/s]Running loglikelihood requests:  19%|█▉        | 10881/56168 [01:14<03:03, 246.33it/s]Running loglikelihood requests:  19%|█▉        | 10945/56168 [01:15<03:02, 247.20it/s]Running loglikelihood requests:  20%|█▉        | 11009/56168 [01:15<03:01, 249.14it/s]Running loglikelihood requests:  20%|█▉        | 11073/56168 [01:15<03:00, 250.08it/s]Running loglikelihood requests:  20%|█▉        | 11137/56168 [01:15<02:59, 250.89it/s]Running loglikelihood requests:  20%|█▉        | 11201/56168 [01:16<02:58, 252.01it/s]Running loglikelihood requests:  20%|██        | 11265/56168 [01:16<02:57, 253.18it/s]Running loglikelihood requests:  20%|██        | 11329/56168 [01:16<02:56, 254.15it/s]Running loglikelihood requests:  20%|██        | 11393/56168 [01:16<02:55, 255.26it/s]Running loglikelihood requests:  20%|██        | 11457/56168 [01:17<02:54, 256.63it/s]Running loglikelihood requests:  21%|██        | 11521/56168 [01:17<02:53, 257.98it/s]Running loglikelihood requests:  21%|██        | 11585/56168 [01:17<02:52, 259.16it/s]Running loglikelihood requests:  21%|██        | 11649/56168 [01:17<02:51, 259.70it/s]Running loglikelihood requests:  21%|██        | 11713/56168 [01:18<02:50, 260.26it/s]Running loglikelihood requests:  21%|██        | 11777/56168 [01:18<02:50, 260.55it/s]Running loglikelihood requests:  21%|██        | 11841/56168 [01:18<02:49, 261.17it/s]Running loglikelihood requests:  21%|██        | 11909/56168 [01:18<02:46, 266.00it/s]Running loglikelihood requests:  21%|██▏       | 11973/56168 [01:19<02:46, 265.32it/s]Running loglikelihood requests:  21%|██▏       | 12037/56168 [01:19<02:43, 269.50it/s]Running loglikelihood requests:  22%|██▏       | 12101/56168 [01:19<02:41, 272.81it/s]Running loglikelihood requests:  22%|██▏       | 12165/56168 [01:19<02:39, 275.21it/s]Running loglikelihood requests:  22%|██▏       | 12229/56168 [01:19<02:38, 276.62it/s]Running loglikelihood requests:  22%|██▏       | 12293/56168 [01:20<02:37, 278.84it/s]Running loglikelihood requests:  22%|██▏       | 12357/56168 [01:20<02:36, 279.87it/s]Running loglikelihood requests:  22%|██▏       | 12421/56168 [01:20<02:35, 280.51it/s]Running loglikelihood requests:  22%|██▏       | 12485/56168 [01:20<02:35, 281.18it/s]Running loglikelihood requests:  22%|██▏       | 12549/56168 [01:21<02:34, 282.41it/s]Running loglikelihood requests:  22%|██▏       | 12613/56168 [01:21<02:33, 283.51it/s]Running loglikelihood requests:  23%|██▎       | 12677/56168 [01:21<02:33, 283.95it/s]Running loglikelihood requests:  23%|██▎       | 12741/56168 [01:21<02:32, 284.47it/s]Running loglikelihood requests:  23%|██▎       | 12805/56168 [01:21<02:32, 284.57it/s]Running loglikelihood requests:  23%|██▎       | 12869/56168 [01:22<02:30, 287.24it/s]Running loglikelihood requests:  23%|██▎       | 12933/56168 [01:22<02:29, 290.14it/s]Running loglikelihood requests:  23%|██▎       | 12997/56168 [01:22<02:28, 291.38it/s]Running loglikelihood requests:  23%|██▎       | 13061/56168 [01:22<02:27, 292.53it/s]Running loglikelihood requests:  23%|██▎       | 13125/56168 [01:23<02:26, 293.43it/s]Running loglikelihood requests:  23%|██▎       | 13189/56168 [01:23<02:25, 294.57it/s]Running loglikelihood requests:  24%|██▎       | 13253/56168 [01:23<02:25, 295.48it/s]Running loglikelihood requests:  24%|██▎       | 13317/56168 [01:23<02:25, 295.27it/s]Running loglikelihood requests:  24%|██▍       | 13381/56168 [01:23<02:24, 295.76it/s]Running loglikelihood requests:  24%|██▍       | 13445/56168 [01:24<02:23, 297.01it/s]Running loglikelihood requests:  24%|██▍       | 13509/56168 [01:24<02:24, 295.99it/s]Running loglikelihood requests:  24%|██▍       | 13573/56168 [01:24<02:23, 296.85it/s]Running loglikelihood requests:  24%|██▍       | 13637/56168 [01:24<02:22, 297.43it/s]Running loglikelihood requests:  24%|██▍       | 13701/56168 [01:24<02:22, 297.57it/s]Running loglikelihood requests:  25%|██▍       | 13765/56168 [01:25<02:22, 298.34it/s]Running loglikelihood requests:  25%|██▍       | 13829/56168 [01:25<02:21, 298.52it/s]Running loglikelihood requests:  25%|██▍       | 13893/56168 [01:25<02:21, 298.69it/s]Running loglikelihood requests:  25%|██▍       | 13957/56168 [01:25<02:21, 299.11it/s]Running loglikelihood requests:  25%|██▍       | 14021/56168 [01:26<02:20, 300.02it/s]Running loglikelihood requests:  25%|██▌       | 14085/56168 [01:26<02:19, 300.82it/s]Running loglikelihood requests:  25%|██▌       | 14149/56168 [01:26<02:19, 300.89it/s]Running loglikelihood requests:  25%|██▌       | 14213/56168 [01:26<02:18, 302.41it/s]Running loglikelihood requests:  25%|██▌       | 14277/56168 [01:26<02:18, 302.89it/s]Running loglikelihood requests:  26%|██▌       | 14341/56168 [01:27<02:17, 303.15it/s]Running loglikelihood requests:  26%|██▌       | 14405/56168 [01:27<02:17, 303.49it/s]Running loglikelihood requests:  26%|██▌       | 14469/56168 [01:27<02:17, 303.33it/s]Running loglikelihood requests:  26%|██▌       | 14533/56168 [01:27<02:16, 303.93it/s]Running loglikelihood requests:  26%|██▌       | 14597/56168 [01:27<02:16, 304.45it/s]Running loglikelihood requests:  26%|██▌       | 14661/56168 [01:28<02:15, 305.56it/s]Running loglikelihood requests:  26%|██▌       | 14725/56168 [01:28<02:15, 306.33it/s]Running loglikelihood requests:  26%|██▋       | 14789/56168 [01:28<02:15, 306.19it/s]Running loglikelihood requests:  26%|██▋       | 14853/56168 [01:28<02:14, 306.64it/s]Running loglikelihood requests:  27%|██▋       | 14917/56168 [01:28<02:14, 307.25it/s]Running loglikelihood requests:  27%|██▋       | 14981/56168 [01:29<02:14, 307.32it/s]Running loglikelihood requests:  27%|██▋       | 15045/56168 [01:29<02:13, 307.47it/s]Running loglikelihood requests:  27%|██▋       | 15109/56168 [01:29<02:13, 307.77it/s]Running loglikelihood requests:  27%|██▋       | 15173/56168 [01:29<02:13, 308.05it/s]Running loglikelihood requests:  27%|██▋       | 15237/56168 [01:30<02:13, 307.42it/s]Running loglikelihood requests:  27%|██▋       | 15301/56168 [01:30<02:12, 308.23it/s]Running loglikelihood requests:  27%|██▋       | 15365/56168 [01:30<02:12, 307.93it/s]Running loglikelihood requests:  27%|██▋       | 15429/56168 [01:30<02:12, 307.66it/s]Running loglikelihood requests:  28%|██▊       | 15493/56168 [01:30<02:12, 308.04it/s]Running loglikelihood requests:  28%|██▊       | 15557/56168 [01:31<02:11, 308.79it/s]Running loglikelihood requests:  28%|██▊       | 15621/56168 [01:31<02:11, 309.29it/s]Running loglikelihood requests:  28%|██▊       | 15685/56168 [01:31<02:10, 309.12it/s]Running loglikelihood requests:  28%|██▊       | 15749/56168 [01:31<02:10, 308.98it/s]Running loglikelihood requests:  28%|██▊       | 15813/56168 [01:31<02:10, 309.70it/s]Running loglikelihood requests:  28%|██▊       | 15877/56168 [01:32<02:10, 309.70it/s]Running loglikelihood requests:  28%|██▊       | 15941/56168 [01:32<02:09, 309.57it/s]Running loglikelihood requests:  28%|██▊       | 16005/56168 [01:32<02:08, 312.68it/s]Running loglikelihood requests:  29%|██▊       | 16069/56168 [01:32<02:07, 314.21it/s]Running loglikelihood requests:  29%|██▊       | 16133/56168 [01:32<02:06, 315.56it/s]Running loglikelihood requests:  29%|██▉       | 16197/56168 [01:33<02:06, 316.83it/s]Running loglikelihood requests:  29%|██▉       | 16261/56168 [01:33<02:05, 317.59it/s]Running loglikelihood requests:  29%|██▉       | 16325/56168 [01:33<02:05, 318.59it/s]Running loglikelihood requests:  29%|██▉       | 16389/56168 [01:33<02:04, 320.45it/s]Running loglikelihood requests:  29%|██▉       | 16453/56168 [01:33<02:03, 320.38it/s]Running loglikelihood requests:  29%|██▉       | 16517/56168 [01:34<02:03, 320.60it/s]Running loglikelihood requests:  30%|██▉       | 16581/56168 [01:34<02:03, 320.00it/s]Running loglikelihood requests:  30%|██▉       | 16645/56168 [01:34<02:03, 318.91it/s]Running loglikelihood requests:  30%|██▉       | 16709/56168 [01:34<02:03, 319.89it/s]Running loglikelihood requests:  30%|██▉       | 16773/56168 [01:34<02:02, 320.91it/s]Running loglikelihood requests:  30%|██▉       | 16837/56168 [01:35<02:02, 322.15it/s]Running loglikelihood requests:  30%|███       | 16901/56168 [01:35<02:01, 322.40it/s]Running loglikelihood requests:  30%|███       | 16965/56168 [01:35<02:01, 322.01it/s]Running loglikelihood requests:  30%|███       | 17029/56168 [01:35<02:01, 321.21it/s]Running loglikelihood requests:  30%|███       | 17093/56168 [01:35<02:01, 320.74it/s]Running loglikelihood requests:  31%|███       | 17157/56168 [01:36<02:01, 320.90it/s]Running loglikelihood requests:  31%|███       | 17221/56168 [01:36<02:00, 322.15it/s]Running loglikelihood requests:  31%|███       | 17285/56168 [01:36<02:00, 322.78it/s]Running loglikelihood requests:  31%|███       | 17349/56168 [01:36<02:00, 322.29it/s]Running loglikelihood requests:  31%|███       | 17413/56168 [01:36<02:00, 321.79it/s]Running loglikelihood requests:  31%|███       | 17477/56168 [01:37<02:00, 321.48it/s]Running loglikelihood requests:  31%|███       | 17541/56168 [01:37<02:00, 321.34it/s]Running loglikelihood requests:  31%|███▏      | 17605/56168 [01:37<01:59, 321.96it/s]Running loglikelihood requests:  31%|███▏      | 17669/56168 [01:37<01:59, 322.23it/s]Running loglikelihood requests:  32%|███▏      | 17733/56168 [01:37<01:59, 322.52it/s]Running loglikelihood requests:  32%|███▏      | 17797/56168 [01:38<01:59, 321.75it/s]Running loglikelihood requests:  32%|███▏      | 17861/56168 [01:38<01:58, 321.91it/s]Running loglikelihood requests:  32%|███▏      | 17925/56168 [01:38<01:58, 322.42it/s]Running loglikelihood requests:  32%|███▏      | 17989/56168 [01:38<01:58, 322.58it/s]Running loglikelihood requests:  32%|███▏      | 18053/56168 [01:38<01:57, 323.66it/s]Running loglikelihood requests:  32%|███▏      | 18117/56168 [01:39<01:57, 323.43it/s]Running loglikelihood requests:  32%|███▏      | 18181/56168 [01:39<01:57, 323.06it/s]Running loglikelihood requests:  32%|███▏      | 18245/56168 [01:39<01:57, 323.29it/s]Running loglikelihood requests:  33%|███▎      | 18309/56168 [01:39<01:57, 322.99it/s]Running loglikelihood requests:  33%|███▎      | 18373/56168 [01:39<01:56, 323.83it/s]Running loglikelihood requests:  33%|███▎      | 18437/56168 [01:40<01:56, 323.55it/s]Running loglikelihood requests:  33%|███▎      | 18501/56168 [01:40<01:56, 323.39it/s]Running loglikelihood requests:  33%|███▎      | 18565/56168 [01:40<01:56, 323.99it/s]Running loglikelihood requests:  33%|███▎      | 18629/56168 [01:40<01:55, 323.91it/s]Running loglikelihood requests:  33%|███▎      | 18697/56168 [01:40<01:53, 329.83it/s]Running loglikelihood requests:  33%|███▎      | 18761/56168 [01:41<01:54, 328.12it/s]Running loglikelihood requests:  34%|███▎      | 18825/56168 [01:41<01:54, 327.54it/s]Running loglikelihood requests:  34%|███▎      | 18889/56168 [01:41<01:54, 326.89it/s]Running loglikelihood requests:  34%|███▎      | 18953/56168 [01:41<01:52, 330.25it/s]Running loglikelihood requests:  34%|███▍      | 19017/56168 [01:41<01:51, 332.98it/s]Running loglikelihood requests:  34%|███▍      | 19081/56168 [01:42<01:50, 334.98it/s]Running loglikelihood requests:  34%|███▍      | 19145/56168 [01:42<01:50, 335.78it/s]Running loglikelihood requests:  34%|███▍      | 19209/56168 [01:42<01:50, 335.96it/s]Running loglikelihood requests:  34%|███▍      | 19273/56168 [01:42<01:49, 337.19it/s]Running loglikelihood requests:  34%|███▍      | 19337/56168 [01:42<01:49, 337.62it/s]Running loglikelihood requests:  35%|███▍      | 19401/56168 [01:42<01:48, 338.06it/s]Running loglikelihood requests:  35%|███▍      | 19465/56168 [01:43<01:48, 339.46it/s]Running loglikelihood requests:  35%|███▍      | 19529/56168 [01:43<01:48, 338.95it/s]Running loglikelihood requests:  35%|███▍      | 19593/56168 [01:43<01:47, 339.31it/s]Running loglikelihood requests:  35%|███▍      | 19657/56168 [01:43<01:47, 339.50it/s]Running loglikelihood requests:  35%|███▌      | 19721/56168 [01:43<01:47, 339.99it/s]Running loglikelihood requests:  35%|███▌      | 19789/56168 [01:44<01:44, 346.70it/s]Running loglikelihood requests:  35%|███▌      | 19853/56168 [01:44<01:44, 345.94it/s]Running loglikelihood requests:  35%|███▌      | 19917/56168 [01:44<01:45, 344.92it/s]Running loglikelihood requests:  36%|███▌      | 19981/56168 [01:44<01:45, 344.55it/s]Running loglikelihood requests:  36%|███▌      | 20045/56168 [01:44<01:45, 343.85it/s]Running loglikelihood requests:  36%|███▌      | 20109/56168 [01:45<01:45, 342.50it/s]Running loglikelihood requests:  36%|███▌      | 20173/56168 [01:45<01:45, 342.31it/s]Running loglikelihood requests:  36%|███▌      | 20237/56168 [01:45<01:44, 342.56it/s]Running loglikelihood requests:  36%|███▌      | 20305/56168 [01:45<01:42, 348.33it/s]Running loglikelihood requests:  36%|███▋      | 20369/56168 [01:45<01:43, 346.11it/s]Running loglikelihood requests:  36%|███▋      | 20433/56168 [01:45<01:43, 344.77it/s]Running loglikelihood requests:  36%|███▋      | 20497/56168 [01:46<01:43, 343.68it/s]Running loglikelihood requests:  37%|███▋      | 20561/56168 [01:46<01:43, 343.69it/s]Running loglikelihood requests:  37%|███▋      | 20625/56168 [01:46<01:43, 343.22it/s]Running loglikelihood requests:  37%|███▋      | 20689/56168 [01:46<01:43, 343.66it/s]Running loglikelihood requests:  37%|███▋      | 20757/56168 [01:46<01:41, 349.97it/s]Running loglikelihood requests:  37%|███▋      | 20821/56168 [01:47<01:41, 347.95it/s]Running loglikelihood requests:  37%|███▋      | 20885/56168 [01:47<01:41, 346.68it/s]Running loglikelihood requests:  37%|███▋      | 20949/56168 [01:47<01:42, 345.13it/s]Running loglikelihood requests:  37%|███▋      | 21013/56168 [01:47<01:41, 345.16it/s]Running loglikelihood requests:  38%|███▊      | 21077/56168 [01:47<01:41, 345.29it/s]Running loglikelihood requests:  38%|███▊      | 21141/56168 [01:48<01:41, 345.34it/s]Running loglikelihood requests:  38%|███▊      | 21205/56168 [01:48<01:41, 345.07it/s]Running loglikelihood requests:  38%|███▊      | 21269/56168 [01:48<01:41, 344.95it/s]Running loglikelihood requests:  38%|███▊      | 21341/56168 [01:48<01:37, 356.57it/s]Running loglikelihood requests:  38%|███▊      | 21405/56168 [01:48<01:37, 356.26it/s]Running loglikelihood requests:  38%|███▊      | 21469/56168 [01:48<01:37, 356.63it/s]Running loglikelihood requests:  38%|███▊      | 21533/56168 [01:49<01:37, 355.67it/s]Running loglikelihood requests:  38%|███▊      | 21597/56168 [01:49<01:37, 354.99it/s]Running loglikelihood requests:  39%|███▊      | 21661/56168 [01:49<01:37, 353.82it/s]Running loglikelihood requests:  39%|███▊      | 21725/56168 [01:49<01:37, 353.62it/s]Running loglikelihood requests:  39%|███▉      | 21793/56168 [01:49<01:35, 359.66it/s]Running loglikelihood requests:  39%|███▉      | 21857/56168 [01:50<01:35, 357.86it/s]Running loglikelihood requests:  39%|███▉      | 21921/56168 [01:50<01:35, 357.09it/s]Running loglikelihood requests:  39%|███▉      | 21985/56168 [01:50<01:35, 356.70it/s]Running loglikelihood requests:  39%|███▉      | 22049/56168 [01:50<01:35, 356.68it/s]Running loglikelihood requests:  39%|███▉      | 22113/56168 [01:50<01:35, 356.46it/s]Running loglikelihood requests:  39%|███▉      | 22177/56168 [01:50<01:34, 357.81it/s]Running loglikelihood requests:  40%|███▉      | 22241/56168 [01:51<01:34, 358.18it/s]Running loglikelihood requests:  40%|███▉      | 22305/56168 [01:51<01:34, 358.12it/s]Running loglikelihood requests:  40%|███▉      | 22369/56168 [01:51<01:34, 357.51it/s]Running loglikelihood requests:  40%|███▉      | 22433/56168 [01:51<01:34, 358.15it/s]Running loglikelihood requests:  40%|████      | 22497/56168 [01:51<01:33, 358.40it/s]Running loglikelihood requests:  40%|████      | 22561/56168 [01:51<01:33, 360.13it/s]Running loglikelihood requests:  40%|████      | 22625/56168 [01:52<01:33, 360.54it/s]Running loglikelihood requests:  40%|████      | 22689/56168 [01:52<01:32, 360.37it/s]Running loglikelihood requests:  41%|████      | 22753/56168 [01:52<01:32, 360.75it/s]Running loglikelihood requests:  41%|████      | 22817/56168 [01:52<01:32, 361.78it/s]Running loglikelihood requests:  41%|████      | 22881/56168 [01:52<01:32, 361.50it/s]Running loglikelihood requests:  41%|████      | 22945/56168 [01:53<01:31, 361.89it/s]Running loglikelihood requests:  41%|████      | 23009/56168 [01:53<01:31, 362.66it/s]Running loglikelihood requests:  41%|████      | 23073/56168 [01:53<01:31, 363.43it/s]Running loglikelihood requests:  41%|████      | 23137/56168 [01:53<01:30, 364.39it/s]Running loglikelihood requests:  41%|████▏     | 23201/56168 [01:53<01:30, 364.43it/s]Running loglikelihood requests:  41%|████▏     | 23265/56168 [01:53<01:30, 364.91it/s]Running loglikelihood requests:  42%|████▏     | 23329/56168 [01:54<01:29, 364.90it/s]Running loglikelihood requests:  42%|████▏     | 23393/56168 [01:54<01:29, 365.09it/s]Running loglikelihood requests:  42%|████▏     | 23457/56168 [01:54<01:29, 365.36it/s]Running loglikelihood requests:  42%|████▏     | 23521/56168 [01:54<01:29, 364.72it/s]Running loglikelihood requests:  42%|████▏     | 23585/56168 [01:54<01:29, 365.83it/s]Running loglikelihood requests:  42%|████▏     | 23649/56168 [01:54<01:28, 368.20it/s]Running loglikelihood requests:  42%|████▏     | 23713/56168 [01:55<01:27, 368.86it/s]Running loglikelihood requests:  42%|████▏     | 23777/56168 [01:55<01:27, 370.33it/s]Running loglikelihood requests:  42%|████▏     | 23841/56168 [01:55<01:27, 370.33it/s]Running loglikelihood requests:  43%|████▎     | 23905/56168 [01:55<01:26, 370.88it/s]Running loglikelihood requests:  43%|████▎     | 23969/56168 [01:55<01:27, 369.36it/s]Running loglikelihood requests:  43%|████▎     | 24033/56168 [01:55<01:26, 370.62it/s]Running loglikelihood requests:  43%|████▎     | 24097/56168 [01:56<01:26, 371.56it/s]Running loglikelihood requests:  43%|████▎     | 24161/56168 [01:56<01:25, 372.36it/s]Running loglikelihood requests:  43%|████▎     | 24225/56168 [01:56<01:25, 372.39it/s]Running loglikelihood requests:  43%|████▎     | 24289/56168 [01:56<01:25, 372.92it/s]Running loglikelihood requests:  43%|████▎     | 24353/56168 [01:56<01:25, 371.87it/s]Running loglikelihood requests:  43%|████▎     | 24417/56168 [01:57<01:25, 372.49it/s]Running loglikelihood requests:  44%|████▎     | 24481/56168 [01:57<01:24, 372.81it/s]Running loglikelihood requests:  44%|████▎     | 24545/56168 [01:57<01:24, 373.39it/s]Running loglikelihood requests:  44%|████▍     | 24609/56168 [01:57<01:24, 372.88it/s]Running loglikelihood requests:  44%|████▍     | 24673/56168 [01:57<01:24, 372.77it/s]Running loglikelihood requests:  44%|████▍     | 24737/56168 [01:57<01:24, 373.02it/s]Running loglikelihood requests:  44%|████▍     | 24801/56168 [01:58<01:24, 373.39it/s]Running loglikelihood requests:  44%|████▍     | 24865/56168 [01:58<01:23, 372.89it/s]Running loglikelihood requests:  44%|████▍     | 24929/56168 [01:58<01:23, 373.57it/s]Running loglikelihood requests:  44%|████▍     | 24993/56168 [01:58<01:23, 373.17it/s]Running loglikelihood requests:  45%|████▍     | 25061/56168 [01:58<01:21, 381.01it/s]Running loglikelihood requests:  45%|████▍     | 25125/56168 [01:58<01:21, 378.87it/s]Running loglikelihood requests:  45%|████▍     | 25189/56168 [01:59<01:21, 377.96it/s]Running loglikelihood requests:  45%|████▍     | 25253/56168 [01:59<01:22, 376.46it/s]Running loglikelihood requests:  45%|████▌     | 25317/56168 [01:59<01:22, 375.87it/s]Running loglikelihood requests:  45%|████▌     | 25381/56168 [01:59<01:21, 375.46it/s]Running loglikelihood requests:  45%|████▌     | 25445/56168 [01:59<01:22, 374.59it/s]Running loglikelihood requests:  45%|████▌     | 25509/56168 [01:59<01:21, 374.55it/s]Running loglikelihood requests:  46%|████▌     | 25573/56168 [02:00<01:21, 375.60it/s]Running loglikelihood requests:  46%|████▌     | 25637/56168 [02:00<01:21, 375.66it/s]Running loglikelihood requests:  46%|████▌     | 25701/56168 [02:00<01:21, 376.02it/s]Running loglikelihood requests:  46%|████▌     | 25765/56168 [02:00<01:20, 377.05it/s]Running loglikelihood requests:  46%|████▌     | 25829/56168 [02:00<01:20, 376.38it/s]Running loglikelihood requests:  46%|████▌     | 25893/56168 [02:00<01:20, 376.92it/s]Running loglikelihood requests:  46%|████▌     | 25957/56168 [02:01<01:20, 376.65it/s]Running loglikelihood requests:  46%|████▋     | 26021/56168 [02:01<01:20, 376.47it/s]Running loglikelihood requests:  46%|████▋     | 26085/56168 [02:01<01:19, 376.97it/s]Running loglikelihood requests:  47%|████▋     | 26149/56168 [02:01<01:17, 389.29it/s]Running loglikelihood requests:  47%|████▋     | 26213/56168 [02:01<01:15, 398.77it/s]Running loglikelihood requests:  47%|████▋     | 26277/56168 [02:01<01:13, 405.35it/s]Running loglikelihood requests:  47%|████▋     | 26341/56168 [02:02<01:12, 411.20it/s]Running loglikelihood requests:  47%|████▋     | 26405/56168 [02:02<01:12, 413.36it/s]Running loglikelihood requests:  47%|████▋     | 26469/56168 [02:02<01:11, 416.93it/s]Running loglikelihood requests:  47%|████▋     | 26533/56168 [02:02<01:10, 419.59it/s]Running loglikelihood requests:  47%|████▋     | 26597/56168 [02:02<01:10, 421.14it/s]Running loglikelihood requests:  47%|████▋     | 26661/56168 [02:02<01:09, 422.55it/s]Running loglikelihood requests:  48%|████▊     | 26725/56168 [02:02<01:09, 422.16it/s]Running loglikelihood requests:  48%|████▊     | 26789/56168 [02:03<01:09, 422.66it/s]Running loglikelihood requests:  48%|████▊     | 26853/56168 [02:03<01:09, 422.40it/s]Running loglikelihood requests:  48%|████▊     | 26917/56168 [02:03<01:08, 424.05it/s]Running loglikelihood requests:  48%|████▊     | 26981/56168 [02:03<01:08, 424.22it/s]Running loglikelihood requests:  48%|████▊     | 27045/56168 [02:03<01:08, 424.80it/s]Running loglikelihood requests:  48%|████▊     | 27109/56168 [02:03<01:08, 423.85it/s]Running loglikelihood requests:  48%|████▊     | 27173/56168 [02:04<01:08, 424.52it/s]Running loglikelihood requests:  48%|████▊     | 27237/56168 [02:04<01:08, 424.74it/s]Running loglikelihood requests:  49%|████▊     | 27301/56168 [02:04<01:07, 425.89it/s]Running loglikelihood requests:  49%|████▊     | 27365/56168 [02:04<01:07, 425.90it/s]Running loglikelihood requests:  49%|████▉     | 27429/56168 [02:04<01:07, 425.15it/s]Running loglikelihood requests:  49%|████▉     | 27493/56168 [02:04<01:07, 426.69it/s]Running loglikelihood requests:  49%|████▉     | 27557/56168 [02:04<01:07, 426.97it/s]Running loglikelihood requests:  49%|████▉     | 27621/56168 [02:05<01:06, 426.41it/s]Running loglikelihood requests:  49%|████▉     | 27685/56168 [02:05<01:06, 426.06it/s]Running loglikelihood requests:  49%|████▉     | 27749/56168 [02:05<01:06, 426.41it/s]Running loglikelihood requests:  50%|████▉     | 27813/56168 [02:05<01:06, 426.58it/s]Running loglikelihood requests:  50%|████▉     | 27877/56168 [02:05<01:06, 427.64it/s]Running loglikelihood requests:  50%|████▉     | 27941/56168 [02:05<01:05, 428.15it/s]Running loglikelihood requests:  50%|████▉     | 28005/56168 [02:05<01:05, 428.35it/s]Running loglikelihood requests:  50%|████▉     | 28069/56168 [02:06<01:05, 428.75it/s]Running loglikelihood requests:  50%|█████     | 28133/56168 [02:06<01:05, 428.74it/s]Running loglikelihood requests:  50%|█████     | 28197/56168 [02:06<01:05, 428.70it/s]Running loglikelihood requests:  50%|█████     | 28261/56168 [02:06<01:04, 429.99it/s]Running loglikelihood requests:  50%|█████     | 28329/56168 [02:06<01:03, 437.89it/s]Running loglikelihood requests:  51%|█████     | 28393/56168 [02:06<01:03, 434.03it/s]Running loglikelihood requests:  51%|█████     | 28457/56168 [02:07<01:03, 433.84it/s]Running loglikelihood requests:  51%|█████     | 28521/56168 [02:07<01:03, 432.94it/s]Running loglikelihood requests:  51%|█████     | 28585/56168 [02:07<01:03, 431.83it/s]Running loglikelihood requests:  51%|█████     | 28649/56168 [02:07<01:03, 432.61it/s]Running loglikelihood requests:  51%|█████     | 28713/56168 [02:07<01:03, 430.46it/s]Running loglikelihood requests:  51%|█████     | 28777/56168 [02:07<01:03, 431.69it/s]Running loglikelihood requests:  51%|█████▏    | 28841/56168 [02:07<01:03, 433.20it/s]Running loglikelihood requests:  51%|█████▏    | 28905/56168 [02:08<01:03, 432.48it/s]Running loglikelihood requests:  52%|█████▏    | 28969/56168 [02:08<01:02, 431.76it/s]Running loglikelihood requests:  52%|█████▏    | 29033/56168 [02:08<01:02, 433.00it/s]Running loglikelihood requests:  52%|█████▏    | 29097/56168 [02:08<01:02, 432.72it/s]Running loglikelihood requests:  52%|█████▏    | 29161/56168 [02:08<01:02, 432.60it/s]Running loglikelihood requests:  52%|█████▏    | 29225/56168 [02:08<01:01, 435.96it/s]Running loglikelihood requests:  52%|█████▏    | 29289/56168 [02:08<01:01, 438.93it/s]Running loglikelihood requests:  52%|█████▏    | 29353/56168 [02:09<01:00, 440.07it/s]Running loglikelihood requests:  52%|█████▏    | 29421/56168 [02:09<00:59, 448.93it/s]Running loglikelihood requests:  52%|█████▏    | 29485/56168 [02:09<00:59, 446.08it/s]Running loglikelihood requests:  53%|█████▎    | 29549/56168 [02:09<00:59, 443.70it/s]Running loglikelihood requests:  53%|█████▎    | 29613/56168 [02:09<00:59, 444.80it/s]Running loglikelihood requests:  53%|█████▎    | 29677/56168 [02:09<00:59, 445.29it/s]Running loglikelihood requests:  53%|█████▎    | 29741/56168 [02:09<00:59, 445.24it/s]Running loglikelihood requests:  53%|█████▎    | 29805/56168 [02:10<00:59, 444.49it/s]Running loglikelihood requests:  53%|█████▎    | 29869/56168 [02:10<00:59, 443.81it/s]Running loglikelihood requests:  53%|█████▎    | 29933/56168 [02:10<00:59, 442.57it/s]Running loglikelihood requests:  53%|█████▎    | 29997/56168 [02:10<00:59, 441.59it/s]Running loglikelihood requests:  54%|█████▎    | 30061/56168 [02:10<00:58, 442.87it/s]Running loglikelihood requests:  54%|█████▎    | 30125/56168 [02:10<00:58, 443.31it/s]Running loglikelihood requests:  54%|█████▎    | 30189/56168 [02:10<00:58, 443.90it/s]Running loglikelihood requests:  54%|█████▍    | 30253/56168 [02:11<00:58, 445.56it/s]Running loglikelihood requests:  54%|█████▍    | 30317/56168 [02:11<00:58, 444.55it/s]Running loglikelihood requests:  54%|█████▍    | 30381/56168 [02:11<00:58, 442.85it/s]Running loglikelihood requests:  54%|█████▍    | 30445/56168 [02:11<00:58, 443.02it/s]Running loglikelihood requests:  54%|█████▍    | 30509/56168 [02:11<00:57, 442.92it/s]Running loglikelihood requests:  54%|█████▍    | 30573/56168 [02:11<00:57, 444.03it/s]Running loglikelihood requests:  55%|█████▍    | 30637/56168 [02:11<00:57, 444.36it/s]Running loglikelihood requests:  55%|█████▍    | 30701/56168 [02:12<00:57, 444.68it/s]Running loglikelihood requests:  55%|█████▍    | 30765/56168 [02:12<00:57, 444.93it/s]Running loglikelihood requests:  55%|█████▍    | 30833/56168 [02:12<00:56, 452.07it/s]Running loglikelihood requests:  55%|█████▌    | 30897/56168 [02:12<00:56, 450.47it/s]Running loglikelihood requests:  55%|█████▌    | 30961/56168 [02:12<00:56, 449.28it/s]Running loglikelihood requests:  55%|█████▌    | 31025/56168 [02:12<00:56, 446.48it/s]Running loglikelihood requests:  55%|█████▌    | 31089/56168 [02:12<00:55, 448.69it/s]Running loglikelihood requests:  55%|█████▌    | 31153/56168 [02:13<00:55, 449.10it/s]Running loglikelihood requests:  56%|█████▌    | 31217/56168 [02:13<00:55, 447.35it/s]Running loglikelihood requests:  56%|█████▌    | 31281/56168 [02:13<00:55, 445.69it/s]Running loglikelihood requests:  56%|█████▌    | 31345/56168 [02:13<00:55, 444.48it/s]Running loglikelihood requests:  56%|█████▌    | 31409/56168 [02:13<00:55, 445.63it/s]Running loglikelihood requests:  56%|█████▌    | 31473/56168 [02:13<00:55, 446.28it/s]Running loglikelihood requests:  56%|█████▌    | 31537/56168 [02:13<00:54, 447.92it/s]Running loglikelihood requests:  56%|█████▋    | 31601/56168 [02:14<00:55, 446.35it/s]Running loglikelihood requests:  56%|█████▋    | 31665/56168 [02:14<00:54, 446.40it/s]Running loglikelihood requests:  56%|█████▋    | 31729/56168 [02:14<00:54, 445.88it/s]Running loglikelihood requests:  57%|█████▋    | 31793/56168 [02:14<00:54, 446.81it/s]Running loglikelihood requests:  57%|█████▋    | 31861/56168 [02:14<00:53, 457.50it/s]Running loglikelihood requests:  57%|█████▋    | 31925/56168 [02:14<00:53, 456.84it/s]Running loglikelihood requests:  57%|█████▋    | 31989/56168 [02:14<00:53, 454.37it/s]Running loglikelihood requests:  57%|█████▋    | 32053/56168 [02:15<00:53, 450.81it/s]Running loglikelihood requests:  57%|█████▋    | 32117/56168 [02:15<00:53, 451.32it/s]Running loglikelihood requests:  57%|█████▋    | 32181/56168 [02:15<00:53, 450.63it/s]Running loglikelihood requests:  57%|█████▋    | 32245/56168 [02:15<00:53, 451.11it/s]Running loglikelihood requests:  58%|█████▊    | 32309/56168 [02:15<00:52, 451.81it/s]Running loglikelihood requests:  58%|█████▊    | 32373/56168 [02:15<00:52, 450.71it/s]Running loglikelihood requests:  58%|█████▊    | 32437/56168 [02:15<00:52, 450.97it/s]Running loglikelihood requests:  58%|█████▊    | 32501/56168 [02:16<00:52, 450.99it/s]Running loglikelihood requests:  58%|█████▊    | 32569/56168 [02:16<00:51, 459.22it/s]Running loglikelihood requests:  58%|█████▊    | 32633/56168 [02:16<00:51, 457.04it/s]Running loglikelihood requests:  58%|█████▊    | 32697/56168 [02:16<00:51, 454.10it/s]Running loglikelihood requests:  58%|█████▊    | 32765/56168 [02:16<00:50, 461.68it/s]Running loglikelihood requests:  58%|█████▊    | 32829/56168 [02:16<00:50, 458.64it/s]Running loglikelihood requests:  59%|█████▊    | 32893/56168 [02:16<00:50, 456.56it/s]Running loglikelihood requests:  59%|█████▊    | 32957/56168 [02:17<00:50, 461.47it/s]Running loglikelihood requests:  59%|█████▉    | 33021/56168 [02:17<00:49, 464.72it/s]Running loglikelihood requests:  59%|█████▉    | 33085/56168 [02:17<00:49, 467.42it/s]Running loglikelihood requests:  59%|█████▉    | 33149/56168 [02:17<00:49, 468.10it/s]Running loglikelihood requests:  59%|█████▉    | 33213/56168 [02:17<00:48, 470.13it/s]Running loglikelihood requests:  59%|█████▉    | 33277/56168 [02:17<00:48, 470.27it/s]Running loglikelihood requests:  59%|█████▉    | 33341/56168 [02:17<00:48, 470.45it/s]Running loglikelihood requests:  59%|█████▉    | 33405/56168 [02:18<00:48, 471.11it/s]Running loglikelihood requests:  60%|█████▉    | 33469/56168 [02:18<00:48, 472.84it/s]Running loglikelihood requests:  60%|█████▉    | 33533/56168 [02:18<00:47, 472.68it/s]Running loglikelihood requests:  60%|█████▉    | 33597/56168 [02:18<00:47, 473.95it/s]Running loglikelihood requests:  60%|█████▉    | 33661/56168 [02:18<00:47, 474.83it/s]Running loglikelihood requests:  60%|██████    | 33725/56168 [02:18<00:47, 474.45it/s]Running loglikelihood requests:  60%|██████    | 33789/56168 [02:18<00:47, 475.21it/s]Running loglikelihood requests:  60%|██████    | 33853/56168 [02:18<00:47, 474.71it/s]Running loglikelihood requests:  60%|██████    | 33917/56168 [02:19<00:46, 474.71it/s]Running loglikelihood requests:  60%|██████    | 33981/56168 [02:19<00:46, 475.62it/s]Running loglikelihood requests:  61%|██████    | 34045/56168 [02:19<00:46, 476.09it/s]Running loglikelihood requests:  61%|██████    | 34109/56168 [02:19<00:46, 475.45it/s]Running loglikelihood requests:  61%|██████    | 34173/56168 [02:19<00:46, 476.03it/s]Running loglikelihood requests:  61%|██████    | 34237/56168 [02:19<00:45, 476.81it/s]Running loglikelihood requests:  61%|██████    | 34301/56168 [02:19<00:45, 475.84it/s]Running loglikelihood requests:  61%|██████    | 34365/56168 [02:20<00:45, 474.92it/s]Running loglikelihood requests:  61%|██████▏   | 34429/56168 [02:20<00:45, 474.99it/s]Running loglikelihood requests:  61%|██████▏   | 34493/56168 [02:20<00:45, 475.10it/s]Running loglikelihood requests:  62%|██████▏   | 34557/56168 [02:20<00:45, 476.49it/s]Running loglikelihood requests:  62%|██████▏   | 34621/56168 [02:20<00:45, 476.49it/s]Running loglikelihood requests:  62%|██████▏   | 34685/56168 [02:20<00:45, 476.83it/s]Running loglikelihood requests:  62%|██████▏   | 34749/56168 [02:20<00:44, 477.90it/s]Running loglikelihood requests:  62%|██████▏   | 34813/56168 [02:21<00:44, 478.08it/s]Running loglikelihood requests:  62%|██████▏   | 34877/56168 [02:21<00:44, 480.00it/s]Running loglikelihood requests:  62%|██████▏   | 34941/56168 [02:21<00:44, 478.74it/s]Running loglikelihood requests:  62%|██████▏   | 35005/56168 [02:21<00:44, 478.08it/s]Running loglikelihood requests:  62%|██████▏   | 35069/56168 [02:21<00:44, 479.37it/s]Running loglikelihood requests:  63%|██████▎   | 35133/56168 [02:21<00:43, 479.14it/s]Running loglikelihood requests:  63%|██████▎   | 35197/56168 [02:21<00:43, 479.77it/s]Running loglikelihood requests:  63%|██████▎   | 35261/56168 [02:21<00:43, 480.23it/s]Running loglikelihood requests:  63%|██████▎   | 35325/56168 [02:22<00:43, 479.58it/s]Running loglikelihood requests:  63%|██████▎   | 35389/56168 [02:22<00:43, 480.03it/s]Running loglikelihood requests:  63%|██████▎   | 35453/56168 [02:22<00:43, 479.16it/s]Running loglikelihood requests:  63%|██████▎   | 35517/56168 [02:22<00:43, 479.21it/s]Running loglikelihood requests:  63%|██████▎   | 35581/56168 [02:22<00:43, 478.77it/s]Running loglikelihood requests:  63%|██████▎   | 35645/56168 [02:22<00:42, 479.32it/s]Running loglikelihood requests:  64%|██████▎   | 35709/56168 [02:22<00:42, 481.25it/s]Running loglikelihood requests:  64%|██████▎   | 35773/56168 [02:23<00:42, 479.76it/s]Running loglikelihood requests:  64%|██████▍   | 35837/56168 [02:23<00:42, 481.35it/s]Running loglikelihood requests:  64%|██████▍   | 35901/56168 [02:23<00:42, 480.78it/s]Running loglikelihood requests:  64%|██████▍   | 35965/56168 [02:23<00:42, 480.83it/s]Running loglikelihood requests:  64%|██████▍   | 36029/56168 [02:23<00:41, 481.56it/s]Running loglikelihood requests:  64%|██████▍   | 36093/56168 [02:23<00:41, 481.63it/s]Running loglikelihood requests:  64%|██████▍   | 36157/56168 [02:23<00:41, 481.49it/s]Running loglikelihood requests:  64%|██████▍   | 36221/56168 [02:23<00:41, 480.87it/s]Running loglikelihood requests:  65%|██████▍   | 36285/56168 [02:24<00:41, 481.84it/s]Running loglikelihood requests:  65%|██████▍   | 36349/56168 [02:24<00:41, 481.94it/s]Running loglikelihood requests:  65%|██████▍   | 36413/56168 [02:24<00:40, 482.54it/s]Running loglikelihood requests:  65%|██████▍   | 36477/56168 [02:24<00:40, 485.91it/s]Running loglikelihood requests:  65%|██████▌   | 36541/56168 [02:24<00:40, 485.26it/s]Running loglikelihood requests:  65%|██████▌   | 36605/56168 [02:24<00:40, 485.13it/s]Running loglikelihood requests:  65%|██████▌   | 36669/56168 [02:24<00:40, 484.62it/s]Running loglikelihood requests:  65%|██████▌   | 36733/56168 [02:24<00:40, 484.86it/s]Running loglikelihood requests:  66%|██████▌   | 36797/56168 [02:25<00:40, 484.00it/s]Running loglikelihood requests:  66%|██████▌   | 36861/56168 [02:25<00:39, 485.92it/s]Running loglikelihood requests:  66%|██████▌   | 36925/56168 [02:25<00:39, 486.57it/s]Running loglikelihood requests:  66%|██████▌   | 36993/56168 [02:25<00:38, 494.80it/s]Running loglikelihood requests:  66%|██████▌   | 37057/56168 [02:25<00:38, 492.10it/s]Running loglikelihood requests:  66%|██████▌   | 37121/56168 [02:25<00:38, 490.51it/s]Running loglikelihood requests:  66%|██████▌   | 37185/56168 [02:25<00:38, 488.83it/s]Running loglikelihood requests:  66%|██████▋   | 37249/56168 [02:26<00:38, 488.22it/s]Running loglikelihood requests:  66%|██████▋   | 37313/56168 [02:26<00:38, 487.20it/s]Running loglikelihood requests:  67%|██████▋   | 37377/56168 [02:26<00:38, 487.70it/s]Running loglikelihood requests:  67%|██████▋   | 37441/56168 [02:26<00:37, 493.45it/s]Running loglikelihood requests:  67%|██████▋   | 37505/56168 [02:26<00:37, 496.77it/s]Running loglikelihood requests:  67%|██████▋   | 37569/56168 [02:26<00:37, 500.12it/s]Running loglikelihood requests:  67%|██████▋   | 37633/56168 [02:26<00:36, 502.38it/s]Running loglikelihood requests:  67%|██████▋   | 37697/56168 [02:26<00:36, 501.69it/s]Running loglikelihood requests:  67%|██████▋   | 37761/56168 [02:27<00:36, 503.31it/s]Running loglikelihood requests:  67%|██████▋   | 37825/56168 [02:27<00:36, 505.63it/s]Running loglikelihood requests:  67%|██████▋   | 37889/56168 [02:27<00:36, 505.82it/s]Running loglikelihood requests:  68%|██████▊   | 37953/56168 [02:27<00:35, 506.18it/s]Running loglikelihood requests:  68%|██████▊   | 38017/56168 [02:27<00:35, 506.70it/s]Running loglikelihood requests:  68%|██████▊   | 38081/56168 [02:27<00:35, 507.06it/s]Running loglikelihood requests:  68%|██████▊   | 38145/56168 [02:27<00:35, 508.02it/s]Running loglikelihood requests:  68%|██████▊   | 38209/56168 [02:27<00:35, 509.38it/s]Running loglikelihood requests:  68%|██████▊   | 38273/56168 [02:28<00:35, 509.42it/s]Running loglikelihood requests:  68%|██████▊   | 38337/56168 [02:28<00:34, 510.05it/s]Running loglikelihood requests:  68%|██████▊   | 38401/56168 [02:28<00:34, 511.36it/s]Running loglikelihood requests:  68%|██████▊   | 38465/56168 [02:28<00:34, 512.01it/s]Running loglikelihood requests:  69%|██████▊   | 38529/56168 [02:28<00:34, 512.25it/s]Running loglikelihood requests:  69%|██████▊   | 38593/56168 [02:28<00:34, 509.04it/s]Running loglikelihood requests:  69%|██████▉   | 38657/56168 [02:28<00:34, 510.61it/s]Running loglikelihood requests:  69%|██████▉   | 38721/56168 [02:28<00:34, 510.63it/s]Running loglikelihood requests:  69%|██████▉   | 38789/56168 [02:29<00:33, 522.20it/s]Running loglikelihood requests:  69%|██████▉   | 38853/56168 [02:29<00:33, 519.16it/s]Running loglikelihood requests:  69%|██████▉   | 38917/56168 [02:29<00:33, 516.30it/s]Running loglikelihood requests:  69%|██████▉   | 38981/56168 [02:29<00:33, 515.53it/s]Running loglikelihood requests:  70%|██████▉   | 39045/56168 [02:29<00:33, 515.15it/s]Running loglikelihood requests:  70%|██████▉   | 39109/56168 [02:29<00:33, 516.25it/s]Running loglikelihood requests:  70%|██████▉   | 39173/56168 [02:29<00:32, 515.43it/s]Running loglikelihood requests:  70%|██████▉   | 39237/56168 [02:29<00:32, 514.84it/s]Running loglikelihood requests:  70%|██████▉   | 39301/56168 [02:30<00:32, 512.89it/s]Running loglikelihood requests:  70%|███████   | 39365/56168 [02:30<00:32, 513.03it/s]Running loglikelihood requests:  70%|███████   | 39429/56168 [02:30<00:32, 512.89it/s]Running loglikelihood requests:  70%|███████   | 39493/56168 [02:30<00:32, 513.52it/s]Running loglikelihood requests:  70%|███████   | 39557/56168 [02:30<00:32, 513.48it/s]Running loglikelihood requests:  71%|███████   | 39621/56168 [02:30<00:32, 514.50it/s]Running loglikelihood requests:  71%|███████   | 39685/56168 [02:30<00:32, 514.16it/s]Running loglikelihood requests:  71%|███████   | 39749/56168 [02:30<00:31, 515.59it/s]Running loglikelihood requests:  71%|███████   | 39813/56168 [02:31<00:31, 516.80it/s]Running loglikelihood requests:  71%|███████   | 39877/56168 [02:31<00:31, 517.88it/s]Running loglikelihood requests:  71%|███████   | 39941/56168 [02:31<00:31, 516.87it/s]Running loglikelihood requests:  71%|███████   | 40005/56168 [02:31<00:31, 516.69it/s]Running loglikelihood requests:  71%|███████▏  | 40069/56168 [02:31<00:31, 514.90it/s]Running loglikelihood requests:  71%|███████▏  | 40133/56168 [02:31<00:31, 514.03it/s]Running loglikelihood requests:  72%|███████▏  | 40197/56168 [02:31<00:31, 514.46it/s]Running loglikelihood requests:  72%|███████▏  | 40261/56168 [02:31<00:30, 515.24it/s]Running loglikelihood requests:  72%|███████▏  | 40325/56168 [02:32<00:30, 515.38it/s]Running loglikelihood requests:  72%|███████▏  | 40389/56168 [02:32<00:30, 516.39it/s]Running loglikelihood requests:  72%|███████▏  | 40453/56168 [02:32<00:30, 516.50it/s]Running loglikelihood requests:  72%|███████▏  | 40517/56168 [02:32<00:30, 516.08it/s]Running loglikelihood requests:  72%|███████▏  | 40581/56168 [02:32<00:30, 516.59it/s]Running loglikelihood requests:  72%|███████▏  | 40645/56168 [02:32<00:30, 517.12it/s]Running loglikelihood requests:  72%|███████▏  | 40709/56168 [02:32<00:29, 517.72it/s]Running loglikelihood requests:  73%|███████▎  | 40773/56168 [02:32<00:29, 521.08it/s]Running loglikelihood requests:  73%|███████▎  | 40837/56168 [02:33<00:29, 521.47it/s]Running loglikelihood requests:  73%|███████▎  | 40901/56168 [02:33<00:29, 521.04it/s]Running loglikelihood requests:  73%|███████▎  | 40965/56168 [02:33<00:29, 521.72it/s]Running loglikelihood requests:  73%|███████▎  | 41029/56168 [02:33<00:28, 522.19it/s]Running loglikelihood requests:  73%|███████▎  | 41093/56168 [02:33<00:28, 522.29it/s]Running loglikelihood requests:  73%|███████▎  | 41157/56168 [02:33<00:28, 522.64it/s]Running loglikelihood requests:  73%|███████▎  | 41221/56168 [02:33<00:28, 522.64it/s]Running loglikelihood requests:  74%|███████▎  | 41285/56168 [02:33<00:28, 523.74it/s]Running loglikelihood requests:  74%|███████▎  | 41349/56168 [02:34<00:28, 522.49it/s]Running loglikelihood requests:  74%|███████▎  | 41413/56168 [02:34<00:28, 521.91it/s]Running loglikelihood requests:  74%|███████▍  | 41477/56168 [02:34<00:28, 521.72it/s]Running loglikelihood requests:  74%|███████▍  | 41545/56168 [02:34<00:27, 530.11it/s]Running loglikelihood requests:  74%|███████▍  | 41609/56168 [02:34<00:27, 527.63it/s]Running loglikelihood requests:  74%|███████▍  | 41673/56168 [02:34<00:27, 526.30it/s]Running loglikelihood requests:  74%|███████▍  | 41737/56168 [02:34<00:27, 525.67it/s]Running loglikelihood requests:  74%|███████▍  | 41801/56168 [02:34<00:27, 525.17it/s]Running loglikelihood requests:  75%|███████▍  | 41865/56168 [02:35<00:27, 524.23it/s]Running loglikelihood requests:  75%|███████▍  | 41929/56168 [02:35<00:27, 524.32it/s]Running loglikelihood requests:  75%|███████▍  | 42001/56168 [02:35<00:26, 544.15it/s]Running loglikelihood requests:  75%|███████▍  | 42065/56168 [02:35<00:26, 540.25it/s]Running loglikelihood requests:  75%|███████▌  | 42129/56168 [02:35<00:26, 536.66it/s]Running loglikelihood requests:  75%|███████▌  | 42193/56168 [02:35<00:26, 533.07it/s]Running loglikelihood requests:  75%|███████▌  | 42257/56168 [02:35<00:26, 529.88it/s]Running loglikelihood requests:  75%|███████▌  | 42321/56168 [02:35<00:26, 527.89it/s]Running loglikelihood requests:  75%|███████▌  | 42385/56168 [02:35<00:26, 525.58it/s]Running loglikelihood requests:  76%|███████▌  | 42449/56168 [02:36<00:25, 535.91it/s]Running loglikelihood requests:  76%|███████▌  | 42513/56168 [02:36<00:25, 543.32it/s]Running loglikelihood requests:  76%|███████▌  | 42577/56168 [02:36<00:24, 547.52it/s]Running loglikelihood requests:  76%|███████▌  | 42645/56168 [02:36<00:24, 561.01it/s]Running loglikelihood requests:  76%|███████▌  | 42709/56168 [02:36<00:23, 561.47it/s]Running loglikelihood requests:  76%|███████▌  | 42773/56168 [02:36<00:23, 560.41it/s]Running loglikelihood requests:  76%|███████▋  | 42837/56168 [02:36<00:23, 559.95it/s]Running loglikelihood requests:  76%|███████▋  | 42901/56168 [02:36<00:23, 559.74it/s]Running loglikelihood requests:  76%|███████▋  | 42965/56168 [02:37<00:23, 558.30it/s]Running loglikelihood requests:  77%|███████▋  | 43029/56168 [02:37<00:23, 557.72it/s]Running loglikelihood requests:  77%|███████▋  | 43093/56168 [02:37<00:23, 558.29it/s]Running loglikelihood requests:  77%|███████▋  | 43157/56168 [02:37<00:23, 558.92it/s]Running loglikelihood requests:  77%|███████▋  | 43221/56168 [02:37<00:23, 560.46it/s]Running loglikelihood requests:  77%|███████▋  | 43285/56168 [02:37<00:22, 561.57it/s]Running loglikelihood requests:  77%|███████▋  | 43349/56168 [02:37<00:22, 561.47it/s]Running loglikelihood requests:  77%|███████▋  | 43413/56168 [02:37<00:22, 560.71it/s]Running loglikelihood requests:  77%|███████▋  | 43477/56168 [02:37<00:22, 562.22it/s]Running loglikelihood requests:  78%|███████▊  | 43541/56168 [02:38<00:22, 561.46it/s]Running loglikelihood requests:  78%|███████▊  | 43605/56168 [02:38<00:22, 562.75it/s]Running loglikelihood requests:  78%|███████▊  | 43669/56168 [02:38<00:22, 561.36it/s]Running loglikelihood requests:  78%|███████▊  | 43733/56168 [02:38<00:22, 562.72it/s]Running loglikelihood requests:  78%|███████▊  | 43797/56168 [02:38<00:21, 563.11it/s]Running loglikelihood requests:  78%|███████▊  | 43861/56168 [02:38<00:21, 563.39it/s]Running loglikelihood requests:  78%|███████▊  | 43925/56168 [02:38<00:21, 562.95it/s]Running loglikelihood requests:  78%|███████▊  | 43989/56168 [02:38<00:21, 562.18it/s]Running loglikelihood requests:  78%|███████▊  | 44053/56168 [02:38<00:21, 561.09it/s]Running loglikelihood requests:  79%|███████▊  | 44121/56168 [02:39<00:21, 572.64it/s]Running loglikelihood requests:  79%|███████▊  | 44185/56168 [02:39<00:21, 569.45it/s]Running loglikelihood requests:  79%|███████▉  | 44249/56168 [02:39<00:20, 569.09it/s]Running loglikelihood requests:  79%|███████▉  | 44313/56168 [02:39<00:20, 565.83it/s]Running loglikelihood requests:  79%|███████▉  | 44377/56168 [02:39<00:20, 563.41it/s]Running loglikelihood requests:  79%|███████▉  | 44441/56168 [02:39<00:20, 565.15it/s]Running loglikelihood requests:  79%|███████▉  | 44505/56168 [02:39<00:20, 565.50it/s]Running loglikelihood requests:  79%|███████▉  | 44569/56168 [02:39<00:20, 564.30it/s]Running loglikelihood requests:  79%|███████▉  | 44633/56168 [02:39<00:20, 555.79it/s]Running loglikelihood requests:  80%|███████▉  | 44697/56168 [02:40<00:20, 556.67it/s]Running loglikelihood requests:  80%|███████▉  | 44761/56168 [02:40<00:20, 557.11it/s]Running loglikelihood requests:  80%|███████▉  | 44825/56168 [02:40<00:20, 560.14it/s]Running loglikelihood requests:  80%|███████▉  | 44889/56168 [02:40<00:20, 561.79it/s]Running loglikelihood requests:  80%|████████  | 44953/56168 [02:40<00:19, 561.30it/s]Running loglikelihood requests:  80%|████████  | 45017/56168 [02:40<00:19, 564.24it/s]Running loglikelihood requests:  80%|████████  | 45081/56168 [02:40<00:19, 565.47it/s]Running loglikelihood requests:  80%|████████  | 45145/56168 [02:40<00:19, 565.07it/s]Running loglikelihood requests:  80%|████████  | 45209/56168 [02:40<00:19, 565.47it/s]Running loglikelihood requests:  81%|████████  | 45273/56168 [02:41<00:19, 564.42it/s]Running loglikelihood requests:  81%|████████  | 45337/56168 [02:41<00:19, 566.46it/s]Running loglikelihood requests:  81%|████████  | 45401/56168 [02:41<00:19, 565.72it/s]Running loglikelihood requests:  81%|████████  | 45465/56168 [02:41<00:18, 567.39it/s]Running loglikelihood requests:  81%|████████  | 45529/56168 [02:41<00:18, 567.56it/s]Running loglikelihood requests:  81%|████████  | 45593/56168 [02:41<00:18, 569.57it/s]Running loglikelihood requests:  81%|████████▏ | 45657/56168 [02:41<00:18, 569.88it/s]Running loglikelihood requests:  81%|████████▏ | 45721/56168 [02:41<00:18, 570.37it/s]Running loglikelihood requests:  82%|████████▏ | 45785/56168 [02:42<00:18, 570.65it/s]Running loglikelihood requests:  82%|████████▏ | 45849/56168 [02:42<00:18, 570.07it/s]Running loglikelihood requests:  82%|████████▏ | 45913/56168 [02:42<00:17, 570.89it/s]Running loglikelihood requests:  82%|████████▏ | 45977/56168 [02:42<00:17, 571.52it/s]Running loglikelihood requests:  82%|████████▏ | 46041/56168 [02:42<00:17, 571.13it/s]Running loglikelihood requests:  82%|████████▏ | 46105/56168 [02:42<00:17, 568.10it/s]Running loglikelihood requests:  82%|████████▏ | 46169/56168 [02:42<00:17, 569.15it/s]Running loglikelihood requests:  82%|████████▏ | 46233/56168 [02:42<00:17, 569.67it/s]Running loglikelihood requests:  82%|████████▏ | 46297/56168 [02:42<00:17, 570.36it/s]Running loglikelihood requests:  83%|████████▎ | 46361/56168 [02:43<00:17, 571.05it/s]Running loglikelihood requests:  83%|████████▎ | 46425/56168 [02:43<00:17, 570.99it/s]Running loglikelihood requests:  83%|████████▎ | 46489/56168 [02:43<00:16, 570.75it/s]Running loglikelihood requests:  83%|████████▎ | 46553/56168 [02:43<00:16, 570.09it/s]Running loglikelihood requests:  83%|████████▎ | 46617/56168 [02:43<00:16, 572.51it/s]Running loglikelihood requests:  83%|████████▎ | 46681/56168 [02:43<00:16, 572.80it/s]Running loglikelihood requests:  83%|████████▎ | 46745/56168 [02:43<00:16, 575.42it/s]Running loglikelihood requests:  83%|████████▎ | 46809/56168 [02:43<00:16, 573.59it/s]Running loglikelihood requests:  83%|████████▎ | 46873/56168 [02:43<00:16, 574.43it/s]Running loglikelihood requests:  84%|████████▎ | 46937/56168 [02:44<00:16, 569.68it/s]Running loglikelihood requests:  84%|████████▎ | 47001/56168 [02:44<00:16, 570.31it/s]Running loglikelihood requests:  84%|████████▍ | 47065/56168 [02:44<00:15, 571.10it/s]Running loglikelihood requests:  84%|████████▍ | 47129/56168 [02:44<00:15, 572.12it/s]Running loglikelihood requests:  84%|████████▍ | 47193/56168 [02:44<00:15, 572.67it/s]Running loglikelihood requests:  84%|████████▍ | 47257/56168 [02:44<00:15, 573.82it/s]Running loglikelihood requests:  84%|████████▍ | 47321/56168 [02:44<00:15, 574.06it/s]Running loglikelihood requests:  84%|████████▍ | 47385/56168 [02:44<00:15, 574.06it/s]Running loglikelihood requests:  84%|████████▍ | 47449/56168 [02:44<00:15, 573.63it/s]Running loglikelihood requests:  85%|████████▍ | 47513/56168 [02:45<00:15, 574.10it/s]Running loglikelihood requests:  85%|████████▍ | 47577/56168 [02:45<00:14, 574.73it/s]Running loglikelihood requests:  85%|████████▍ | 47641/56168 [02:45<00:14, 574.95it/s]Running loglikelihood requests:  85%|████████▍ | 47705/56168 [02:45<00:14, 575.38it/s]Running loglikelihood requests:  85%|████████▌ | 47769/56168 [02:45<00:14, 575.52it/s]Running loglikelihood requests:  85%|████████▌ | 47833/56168 [02:45<00:14, 578.03it/s]Running loglikelihood requests:  85%|████████▌ | 47897/56168 [02:45<00:14, 579.96it/s]Running loglikelihood requests:  85%|████████▌ | 47961/56168 [02:45<00:14, 580.78it/s]Running loglikelihood requests:  86%|████████▌ | 48025/56168 [02:45<00:13, 582.62it/s]Running loglikelihood requests:  86%|████████▌ | 48089/56168 [02:46<00:13, 582.11it/s]Running loglikelihood requests:  86%|████████▌ | 48153/56168 [02:46<00:13, 583.38it/s]Running loglikelihood requests:  86%|████████▌ | 48217/56168 [02:46<00:13, 583.88it/s]Running loglikelihood requests:  86%|████████▌ | 48281/56168 [02:46<00:13, 589.90it/s]Running loglikelihood requests:  86%|████████▌ | 48345/56168 [02:46<00:13, 595.92it/s]Running loglikelihood requests:  86%|████████▌ | 48413/56168 [02:46<00:12, 610.68it/s]Running loglikelihood requests:  86%|████████▋ | 48477/56168 [02:46<00:12, 609.67it/s]Running loglikelihood requests:  86%|████████▋ | 48541/56168 [02:46<00:12, 607.81it/s]Running loglikelihood requests:  87%|████████▋ | 48605/56168 [02:46<00:12, 606.62it/s]Running loglikelihood requests:  87%|████████▋ | 48669/56168 [02:46<00:12, 607.94it/s]Running loglikelihood requests:  87%|████████▋ | 48733/56168 [02:47<00:12, 606.96it/s]Running loglikelihood requests:  87%|████████▋ | 48797/56168 [02:47<00:12, 605.98it/s]Running loglikelihood requests:  87%|████████▋ | 48861/56168 [02:47<00:12, 605.07it/s]Running loglikelihood requests:  87%|████████▋ | 48925/56168 [02:47<00:11, 605.23it/s]Running loglikelihood requests:  87%|████████▋ | 48989/56168 [02:47<00:11, 606.63it/s]Running loglikelihood requests:  87%|████████▋ | 49061/56168 [02:47<00:11, 628.29it/s]Running loglikelihood requests:  87%|████████▋ | 49125/56168 [02:47<00:11, 621.92it/s]Running loglikelihood requests:  88%|████████▊ | 49189/56168 [02:47<00:11, 618.86it/s]Running loglikelihood requests:  88%|████████▊ | 49253/56168 [02:47<00:11, 617.26it/s]Running loglikelihood requests:  88%|████████▊ | 49317/56168 [02:48<00:11, 615.59it/s]Running loglikelihood requests:  88%|████████▊ | 49381/56168 [02:48<00:11, 612.34it/s]Running loglikelihood requests:  88%|████████▊ | 49445/56168 [02:48<00:11, 610.09it/s]Running loglikelihood requests:  88%|████████▊ | 49509/56168 [02:48<00:10, 610.92it/s]Running loglikelihood requests:  88%|████████▊ | 49573/56168 [02:48<00:10, 611.14it/s]Running loglikelihood requests:  88%|████████▊ | 49637/56168 [02:48<00:10, 610.51it/s]Running loglikelihood requests:  88%|████████▊ | 49701/56168 [02:48<00:10, 609.53it/s]Running loglikelihood requests:  89%|████████▊ | 49765/56168 [02:48<00:10, 610.00it/s]Running loglikelihood requests:  89%|████████▊ | 49829/56168 [02:48<00:10, 610.58it/s]Running loglikelihood requests:  89%|████████▉ | 49893/56168 [02:48<00:10, 611.01it/s]Running loglikelihood requests:  89%|████████▉ | 49957/56168 [02:49<00:10, 611.63it/s]Running loglikelihood requests:  89%|████████▉ | 50021/56168 [02:49<00:10, 611.65it/s]Running loglikelihood requests:  89%|████████▉ | 50085/56168 [02:49<00:09, 611.68it/s]Running loglikelihood requests:  89%|████████▉ | 50149/56168 [02:49<00:09, 611.56it/s]Running loglikelihood requests:  89%|████████▉ | 50213/56168 [02:49<00:09, 611.96it/s]Running loglikelihood requests:  90%|████████▉ | 50277/56168 [02:49<00:09, 613.12it/s]Running loglikelihood requests:  90%|████████▉ | 50341/56168 [02:49<00:09, 612.61it/s]Running loglikelihood requests:  90%|████████▉ | 50405/56168 [02:49<00:09, 612.14it/s]Running loglikelihood requests:  90%|████████▉ | 50469/56168 [02:49<00:09, 612.08it/s]Running loglikelihood requests:  90%|████████▉ | 50533/56168 [02:50<00:09, 612.66it/s]Running loglikelihood requests:  90%|█████████ | 50597/56168 [02:50<00:09, 614.28it/s]Running loglikelihood requests:  90%|█████████ | 50661/56168 [02:50<00:08, 615.04it/s]Running loglikelihood requests:  90%|█████████ | 50725/56168 [02:50<00:08, 614.96it/s]Running loglikelihood requests:  90%|█████████ | 50793/56168 [02:50<00:08, 624.74it/s]Running loglikelihood requests:  91%|█████████ | 50857/56168 [02:50<00:08, 620.97it/s]Running loglikelihood requests:  91%|█████████ | 50921/56168 [02:50<00:08, 618.74it/s]Running loglikelihood requests:  91%|█████████ | 50985/56168 [02:50<00:08, 618.19it/s]Running loglikelihood requests:  91%|█████████ | 51049/56168 [02:50<00:08, 617.48it/s]Running loglikelihood requests:  91%|█████████ | 51113/56168 [02:50<00:08, 618.13it/s]Running loglikelihood requests:  91%|█████████ | 51177/56168 [02:51<00:08, 616.74it/s]Running loglikelihood requests:  91%|█████████ | 51241/56168 [02:51<00:07, 615.98it/s]Running loglikelihood requests:  91%|█████████▏| 51305/56168 [02:51<00:07, 616.14it/s]Running loglikelihood requests:  91%|█████████▏| 51369/56168 [02:51<00:07, 616.67it/s]Running loglikelihood requests:  92%|█████████▏| 51433/56168 [02:51<00:07, 617.04it/s]Running loglikelihood requests:  92%|█████████▏| 51497/56168 [02:51<00:07, 618.21it/s]Running loglikelihood requests:  92%|█████████▏| 51561/56168 [02:51<00:07, 619.16it/s]Running loglikelihood requests:  92%|█████████▏| 51625/56168 [02:51<00:07, 619.18it/s]Running loglikelihood requests:  92%|█████████▏| 51689/56168 [02:51<00:07, 618.60it/s]Running loglikelihood requests:  92%|█████████▏| 51753/56168 [02:51<00:07, 616.96it/s]Running loglikelihood requests:  92%|█████████▏| 51821/56168 [02:52<00:06, 629.06it/s]Running loglikelihood requests:  92%|█████████▏| 51885/56168 [02:52<00:06, 626.51it/s]Running loglikelihood requests:  92%|█████████▏| 51949/56168 [02:52<00:06, 625.27it/s]Running loglikelihood requests:  93%|█████████▎| 52013/56168 [02:52<00:06, 625.45it/s]Running loglikelihood requests:  93%|█████████▎| 52077/56168 [02:52<00:06, 625.14it/s]Running loglikelihood requests:  93%|█████████▎| 52141/56168 [02:52<00:06, 624.10it/s]Running loglikelihood requests:  93%|█████████▎| 52205/56168 [02:52<00:06, 620.34it/s]Running loglikelihood requests:  93%|█████████▎| 52269/56168 [02:52<00:06, 619.52it/s]Running loglikelihood requests:  93%|█████████▎| 52333/56168 [02:52<00:06, 617.67it/s]Running loglikelihood requests:  93%|█████████▎| 52397/56168 [02:53<00:06, 618.19it/s]Running loglikelihood requests:  93%|█████████▎| 52461/56168 [02:53<00:05, 618.82it/s]Running loglikelihood requests:  94%|█████████▎| 52525/56168 [02:53<00:05, 619.14it/s]Running loglikelihood requests:  94%|█████████▎| 52589/56168 [02:53<00:05, 619.54it/s]Running loglikelihood requests:  94%|█████████▎| 52653/56168 [02:53<00:05, 619.23it/s]Running loglikelihood requests:  94%|█████████▍| 52717/56168 [02:53<00:05, 620.05it/s]Running loglikelihood requests:  94%|█████████▍| 52781/56168 [02:53<00:05, 620.00it/s]Running loglikelihood requests:  94%|█████████▍| 52845/56168 [02:53<00:05, 620.22it/s]Running loglikelihood requests:  94%|█████████▍| 52909/56168 [02:53<00:05, 618.61it/s]Running loglikelihood requests:  94%|█████████▍| 52973/56168 [02:53<00:05, 618.61it/s]Running loglikelihood requests:  94%|█████████▍| 53037/56168 [02:54<00:05, 619.05it/s]Running loglikelihood requests:  95%|█████████▍| 53101/56168 [02:54<00:04, 620.99it/s]Running loglikelihood requests:  95%|█████████▍| 53165/56168 [02:54<00:04, 622.29it/s]Running loglikelihood requests:  95%|█████████▍| 53229/56168 [02:54<00:04, 623.32it/s]Running loglikelihood requests:  95%|█████████▍| 53293/56168 [02:54<00:04, 623.70it/s]Running loglikelihood requests:  95%|█████████▍| 53357/56168 [02:54<00:04, 624.84it/s]Running loglikelihood requests:  95%|█████████▌| 53421/56168 [02:54<00:04, 626.45it/s]Running loglikelihood requests:  95%|█████████▌| 53485/56168 [02:54<00:04, 626.85it/s]Running loglikelihood requests:  95%|█████████▌| 53580/56168 [02:54<00:03, 722.37it/s]Running loglikelihood requests:  96%|█████████▌| 53672/56168 [02:54<00:03, 780.81it/s]Running loglikelihood requests:  96%|█████████▌| 53751/56168 [02:55<00:03, 622.70it/s]Running loglikelihood requests:  96%|█████████▌| 53844/56168 [02:55<00:03, 700.25it/s]Running loglikelihood requests:  96%|█████████▌| 53933/56168 [02:55<00:03, 609.65it/s]Running loglikelihood requests:  96%|█████████▌| 54022/56168 [02:55<00:03, 675.62it/s]Running loglikelihood requests:  96%|█████████▋| 54119/56168 [02:55<00:02, 749.49it/s]Running loglikelihood requests:  96%|█████████▋| 54200/56168 [02:55<00:03, 625.74it/s]Running loglikelihood requests:  97%|█████████▋| 54287/56168 [02:55<00:02, 683.35it/s]Running loglikelihood requests:  97%|█████████▋| 54379/56168 [02:56<00:02, 742.97it/s]Running loglikelihood requests:  97%|█████████▋| 54459/56168 [02:56<00:02, 619.45it/s]Running loglikelihood requests:  97%|█████████▋| 54551/56168 [02:56<00:02, 690.23it/s]Running loglikelihood requests:  97%|█████████▋| 54637/56168 [02:56<00:02, 603.73it/s]Running loglikelihood requests:  97%|█████████▋| 54734/56168 [02:56<00:02, 687.47it/s]Running loglikelihood requests:  98%|█████████▊| 54829/56168 [02:56<00:02, 621.11it/s]Running loglikelihood requests:  98%|█████████▊| 54932/56168 [02:56<00:01, 713.05it/s]Running loglikelihood requests:  98%|█████████▊| 55021/56168 [02:57<00:01, 627.54it/s]Running loglikelihood requests:  98%|█████████▊| 55122/56168 [02:57<00:01, 713.17it/s]Running loglikelihood requests:  98%|█████████▊| 55213/56168 [02:57<00:01, 633.62it/s]Running loglikelihood requests:  98%|█████████▊| 55325/56168 [02:57<00:01, 742.29it/s]Running loglikelihood requests:  99%|█████████▊| 55408/56168 [02:57<00:01, 636.78it/s]Running loglikelihood requests:  99%|█████████▉| 55521/56168 [02:57<00:00, 747.06it/s]Running loglikelihood requests:  99%|█████████▉| 55605/56168 [02:57<00:00, 644.41it/s]Running loglikelihood requests:  99%|█████████▉| 55725/56168 [02:58<00:00, 649.64it/s]Running loglikelihood requests:  99%|█████████▉| 55844/56168 [02:58<00:00, 764.89it/s]Running loglikelihood requests: 100%|█████████▉| 55930/56168 [02:58<00:00, 664.97it/s]Running loglikelihood requests: 100%|█████████▉| 56045/56168 [02:58<00:00, 678.13it/s]Running loglikelihood requests: 100%|██████████| 56168/56168 [02:58<00:00, 314.43it/s]
2025-05-16:03:42:58,501 INFO     [evaluation_tracker.py:269] Output path not provided, skipping saving results aggregated
hf (pretrained=shengyuanhu/benchmark_wmdp_npo_kl_ckpt_75,tokenizer=HuggingFaceH4/zephyr-7b-beta), gen_kwargs: (None), limit: None, num_fewshot: None, batch_size: 16
|                 Tasks                 |Version|Filter|n-shot|Metric|   |Value |   |Stderr|
|---------------------------------------|------:|------|-----:|------|---|-----:|---|-----:|
|mmlu                                   |      2|none  |      |acc   |↑  |0.5662|±  |0.0040|
| - humanities                          |      2|none  |      |acc   |↑  |0.5075|±  |0.0069|
|  - formal_logic                       |      1|none  |     0|acc   |↑  |0.3968|±  |0.0438|
|  - high_school_european_history       |      1|none  |     0|acc   |↑  |0.6970|±  |0.0359|
|  - high_school_us_history             |      1|none  |     0|acc   |↑  |0.7206|±  |0.0315|
|  - high_school_world_history          |      1|none  |     0|acc   |↑  |0.7384|±  |0.0286|
|  - international_law                  |      1|none  |     0|acc   |↑  |0.6860|±  |0.0424|
|  - jurisprudence                      |      1|none  |     0|acc   |↑  |0.7130|±  |0.0437|
|  - logical_fallacies                  |      1|none  |     0|acc   |↑  |0.6687|±  |0.0370|
|  - moral_disputes                     |      1|none  |     0|acc   |↑  |0.6416|±  |0.0258|
|  - moral_scenarios                    |      1|none  |     0|acc   |↑  |0.2961|±  |0.0153|
|  - philosophy                         |      1|none  |     0|acc   |↑  |0.6077|±  |0.0277|
|  - prehistory                         |      1|none  |     0|acc   |↑  |0.6327|±  |0.0268|
|  - professional_law                   |      1|none  |     0|acc   |↑  |0.4048|±  |0.0125|
|  - world_religions                    |      1|none  |     0|acc   |↑  |0.7602|±  |0.0327|
| - other                               |      2|none  |      |acc   |↑  |0.6453|±  |0.0083|
|  - business_ethics                    |      1|none  |     0|acc   |↑  |0.5200|±  |0.0502|
|  - clinical_knowledge                 |      1|none  |     0|acc   |↑  |0.6491|±  |0.0294|
|  - college_medicine                   |      1|none  |     0|acc   |↑  |0.5838|±  |0.0376|
|  - global_facts                       |      1|none  |     0|acc   |↑  |0.3900|±  |0.0490|
|  - human_aging                        |      1|none  |     0|acc   |↑  |0.6457|±  |0.0321|
|  - management                         |      1|none  |     0|acc   |↑  |0.6990|±  |0.0454|
|  - marketing                          |      1|none  |     0|acc   |↑  |0.7863|±  |0.0269|
|  - medical_genetics                   |      1|none  |     0|acc   |↑  |0.6500|±  |0.0479|
|  - miscellaneous                      |      1|none  |     0|acc   |↑  |0.7791|±  |0.0148|
|  - nutrition                          |      1|none  |     0|acc   |↑  |0.6536|±  |0.0272|
|  - professional_accounting            |      1|none  |     0|acc   |↑  |0.4149|±  |0.0294|
|  - professional_medicine              |      1|none  |     0|acc   |↑  |0.6176|±  |0.0295|
|  - virology                           |      1|none  |     0|acc   |↑  |0.4880|±  |0.0389|
| - social sciences                     |      2|none  |      |acc   |↑  |0.6623|±  |0.0083|
|  - econometrics                       |      1|none  |     0|acc   |↑  |0.4561|±  |0.0469|
|  - high_school_geography              |      1|none  |     0|acc   |↑  |0.7020|±  |0.0326|
|  - high_school_government_and_politics|      1|none  |     0|acc   |↑  |0.8187|±  |0.0278|
|  - high_school_macroeconomics         |      1|none  |     0|acc   |↑  |0.5564|±  |0.0252|
|  - high_school_microeconomics         |      1|none  |     0|acc   |↑  |0.5630|±  |0.0322|
|  - high_school_psychology             |      1|none  |     0|acc   |↑  |0.7578|±  |0.0184|
|  - human_sexuality                    |      1|none  |     0|acc   |↑  |0.6870|±  |0.0407|
|  - professional_psychology            |      1|none  |     0|acc   |↑  |0.5833|±  |0.0199|
|  - public_relations                   |      1|none  |     0|acc   |↑  |0.6364|±  |0.0461|
|  - security_studies                   |      1|none  |     0|acc   |↑  |0.6531|±  |0.0305|
|  - sociology                          |      1|none  |     0|acc   |↑  |0.8308|±  |0.0265|
|  - us_foreign_policy                  |      1|none  |     0|acc   |↑  |0.8100|±  |0.0394|
| - stem                                |      2|none  |      |acc   |↑  |0.4821|±  |0.0086|
|  - abstract_algebra                   |      1|none  |     0|acc   |↑  |0.3000|±  |0.0461|
|  - anatomy                            |      1|none  |     0|acc   |↑  |0.5333|±  |0.0431|
|  - astronomy                          |      1|none  |     0|acc   |↑  |0.6184|±  |0.0395|
|  - college_biology                    |      1|none  |     0|acc   |↑  |0.6597|±  |0.0396|
|  - college_chemistry                  |      1|none  |     0|acc   |↑  |0.5200|±  |0.0502|
|  - college_computer_science           |      1|none  |     0|acc   |↑  |0.4800|±  |0.0502|
|  - college_mathematics                |      1|none  |     0|acc   |↑  |0.3100|±  |0.0465|
|  - college_physics                    |      1|none  |     0|acc   |↑  |0.5294|±  |0.0497|
|  - computer_security                  |      1|none  |     0|acc   |↑  |0.6300|±  |0.0485|
|  - conceptual_physics                 |      1|none  |     0|acc   |↑  |0.4553|±  |0.0326|
|  - electrical_engineering             |      1|none  |     0|acc   |↑  |0.5310|±  |0.0416|
|  - elementary_mathematics             |      1|none  |     0|acc   |↑  |0.4021|±  |0.0253|
|  - high_school_biology                |      1|none  |     0|acc   |↑  |0.7000|±  |0.0261|
|  - high_school_chemistry              |      1|none  |     0|acc   |↑  |0.4532|±  |0.0350|
|  - high_school_computer_science       |      1|none  |     0|acc   |↑  |0.5800|±  |0.0496|
|  - high_school_mathematics            |      1|none  |     0|acc   |↑  |0.3333|±  |0.0287|
|  - high_school_physics                |      1|none  |     0|acc   |↑  |0.2517|±  |0.0354|
|  - high_school_statistics             |      1|none  |     0|acc   |↑  |0.4676|±  |0.0340|
|  - machine_learning                   |      1|none  |     0|acc   |↑  |0.4375|±  |0.0471|

|      Groups      |Version|Filter|n-shot|Metric|   |Value |   |Stderr|
|------------------|------:|------|------|------|---|-----:|---|-----:|
|mmlu              |      2|none  |      |acc   |↑  |0.5662|±  |0.0040|
| - humanities     |      2|none  |      |acc   |↑  |0.5075|±  |0.0069|
| - other          |      2|none  |      |acc   |↑  |0.6453|±  |0.0083|
| - social sciences|      2|none  |      |acc   |↑  |0.6623|±  |0.0083|
| - stem           |      2|none  |      |acc   |↑  |0.4821|±  |0.0086|

