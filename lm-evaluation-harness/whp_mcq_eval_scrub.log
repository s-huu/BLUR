2025-05-12:22:26:56,208 INFO     [__main__.py:279] Verbosity set to INFO
2025-05-12:22:26:56,345 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:26:56,348 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:26:56,351 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:26:56,354 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:26:56,357 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:26:56,360 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:26:56,363 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:26:56,366 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:26:56,369 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:26:56,372 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:26:56,375 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:26:56,378 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:26:56,381 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:26:56,384 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:26:56,387 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:26:56,390 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:26:56,393 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:26:56,396 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:26:56,399 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:26:56,401 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:26:56,404 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:26:56,407 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:26:56,410 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:26:56,412 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:26:56,415 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:26:56,418 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:26:56,421 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:26:56,424 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:26:56,426 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:26:56,429 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:26:56,432 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:26:56,435 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:26:56,438 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:26:56,441 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:26:56,444 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:26:56,446 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:26:57,160 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:26:57,164 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:26:57,168 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:26:57,171 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:26:57,175 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:26:57,178 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:26:57,182 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:26:57,186 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:26:57,189 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:26:57,193 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:26:57,196 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:26:57,201 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:26:57,205 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:26:57,209 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:26:57,214 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:26:57,218 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:26:57,222 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:26:57,227 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:26:57,231 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:26:57,235 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:26:57,239 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:26:57,243 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:26:57,247 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:26:57,251 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:26:57,254 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:26:57,258 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:26:57,262 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:26:57,266 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:26:57,269 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:26:57,273 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:26:57,277 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:26:57,280 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:26:57,284 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:26:58,037 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:26:58,040 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:26:58,042 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:26:58,045 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:26:58,047 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:26:58,050 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:26:58,053 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:26:58,055 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:26:58,058 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:26:58,061 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:26:58,063 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:26:58,066 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:26:58,068 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:26:58,071 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:26:58,074 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:26:58,076 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:26:58,398 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:26:58,399 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:26:58,401 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:26:58,403 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:26:58,404 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:26:58,406 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:26:58,442 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:26:58,468 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:26:58,472 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:26:58,475 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:26:58,479 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:26:58,483 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:26:58,487 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:26:58,491 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:26:58,494 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:26:58,498 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:26:58,502 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:26:58,505 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:26:58,509 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:26:58,513 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:26:58,516 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:26:58,520 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:26:58,524 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:26:58,527 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:26:58,531 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:26:58,535 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:26:58,538 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:26:58,542 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:26:58,546 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:26:58,549 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:26:58,553 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:26:58,557 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:26:58,560 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:26:58,564 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:26:58,568 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:26:58,572 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:26:58,575 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:26:58,579 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:26:58,583 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:26:58,586 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:26:58,590 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:26:58,594 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:26:58,598 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:26:58,602 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:26:58,605 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:26:58,609 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:26:58,613 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:26:58,617 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:26:58,621 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:26:58,625 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:26:58,628 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:26:58,632 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:26:58,636 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:26:58,640 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:26:58,644 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:26:58,647 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:26:58,651 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:26:58,655 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:26:58,659 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:26:58,663 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:26:58,666 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:26:58,667 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:26:58,667 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:26:58,668 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:26:58,668 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:26:58,668 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:26:58,669 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:26:58,669 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:26:58,750 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:26:58,753 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:26:58,755 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:26:58,758 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:26:58,761 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:26:58,763 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:26:58,766 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:26:58,769 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:26:58,772 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:26:58,774 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:26:58,777 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:26:58,780 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:26:58,783 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:26:58,785 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:26:58,788 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:26:58,792 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:26:58,794 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:26:58,797 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:26:58,800 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:26:58,802 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:26:58,805 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:26:58,808 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:26:58,810 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:26:58,813 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:26:58,815 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:26:58,818 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:26:58,821 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:26:58,823 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:26:58,826 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:26:58,828 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:26:58,831 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:26:58,834 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:26:58,836 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:26:58,839 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:26:58,841 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:26:58,844 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:26:58,846 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:26:58,849 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:26:58,851 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:26:58,854 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:26:58,856 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:26:58,858 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:26:58,861 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:26:58,863 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:26:58,865 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:26:58,868 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:26:58,870 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:26:58,873 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:26:58,875 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:26:58,877 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:26:58,880 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:26:58,882 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:26:58,885 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:26:58,887 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:26:58,890 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:26:58,893 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:26:58,895 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:26:58,898 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:26:58,901 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:26:58,903 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:26:58,906 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:26:58,908 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:26:58,911 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:26:58,914 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:26:58,916 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:26:58,919 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:26:58,921 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:26:58,924 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:26:58,927 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:26:58,929 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:26:58,932 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:26:58,934 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:26:58,937 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:26:58,939 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:26:58,942 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:26:58,944 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:26:58,947 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:26:58,949 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:26:58,952 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:26:58,954 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:26:58,957 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:26:58,959 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:26:58,962 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:26:58,964 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:26:58,967 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:26:58,969 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:26:58,972 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:26:58,974 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:26:59,983 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:00,018 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:00,020 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:00,022 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:00,023 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:00,025 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:00,027 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:00,029 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:00,933 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:00,935 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:00,936 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:00,938 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:00,940 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:00,942 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:00,943 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:00,945 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:00,947 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:00,949 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:00,950 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:00,952 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:00,954 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:00,955 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:00,957 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:00,959 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:00,961 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:00,962 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:00,964 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:00,966 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:00,968 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:00,969 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:00,971 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:00,973 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:00,974 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:00,976 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:00,978 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:00,980 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:00,981 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:00,983 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:00,985 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:00,987 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:00,988 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:00,990 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:00,992 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:00,993 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:00,995 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:00,997 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:00,999 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:01,000 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:01,002 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:01,004 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:01,006 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:01,007 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:01,009 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:01,011 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:01,013 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:01,015 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:01,017 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:01,019 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:01,020 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:01,022 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:01,024 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:01,026 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:01,027 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:01,029 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:01,031 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:01,033 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:01,034 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:01,036 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:01,038 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:01,040 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:01,041 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:01,043 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:01,045 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:01,047 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:01,048 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:01,050 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:01,052 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:01,054 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:01,055 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:01,057 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:01,059 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:01,061 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:01,062 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:01,064 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:01,066 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:01,068 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:01,069 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:01,071 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:01,073 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:01,075 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:01,076 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:01,078 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:01,080 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:01,082 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:01,083 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:01,085 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:01,087 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:01,089 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:01,090 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:01,092 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:01,094 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:01,095 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:01,097 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:01,099 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:01,100 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:01,102 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:01,104 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:01,105 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:01,107 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:01,109 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:01,111 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:01,112 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:01,114 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:01,116 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:01,117 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:01,119 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:01,121 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:01,122 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:01,124 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:01,126 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:01,128 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:01,129 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:01,131 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:01,133 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:01,134 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:01,136 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:01,138 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:01,139 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:01,141 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:01,143 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:01,145 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:01,146 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:01,148 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:01,150 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:01,152 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:01,153 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:01,155 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:01,157 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:01,159 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:01,160 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:01,162 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:01,164 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:01,166 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:01,167 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:01,169 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:01,171 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:01,172 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:01,174 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:01,176 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:01,178 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:01,179 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:01,181 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:01,183 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:01,185 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:01,186 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:01,188 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:01,190 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:01,192 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:01,193 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:01,195 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:01,197 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:01,199 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:01,200 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:01,202 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:01,204 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:01,205 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:01,207 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:01,209 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:01,211 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:01,212 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:01,214 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:01,216 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:01,218 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:01,219 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:01,221 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:01,223 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:01,224 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:01,226 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:01,227 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:01,229 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:01,230 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:01,232 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:01,233 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:01,235 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:01,236 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:01,238 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:01,239 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:01,241 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:01,242 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:01,244 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:01,245 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:01,247 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:01,248 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:01,250 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:01,252 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:01,254 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:01,255 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:01,256 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:01,258 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:01,259 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:01,261 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:01,262 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:01,264 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:01,265 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:01,267 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:01,268 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:01,269 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:01,271 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:01,272 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:01,274 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:01,275 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:01,277 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:01,278 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:01,280 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:01,281 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:01,283 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:01,284 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:01,286 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:01,287 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:01,289 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:01,290 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:01,291 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:01,293 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:01,294 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:01,296 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:01,297 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:01,299 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:01,300 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:01,302 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:01,303 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:01,304 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:01,306 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:01,307 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:01,309 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:01,310 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:01,312 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:01,313 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:01,315 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:01,316 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:01,318 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:01,319 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:01,321 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:01,322 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:01,323 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:01,325 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:01,326 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:01,328 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:01,329 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:01,331 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:01,332 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:01,334 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:01,335 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:01,336 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:01,338 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:01,339 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:01,341 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:01,342 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:01,344 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:01,345 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:01,347 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:01,348 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:01,350 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:01,351 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:01,352 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:01,354 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:01,355 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:01,357 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:01,358 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:01,360 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:01,361 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:01,363 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:01,364 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:01,366 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:01,367 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:01,368 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:01,370 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:01,371 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:01,373 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:01,374 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:01,376 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:01,377 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:01,379 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:01,380 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:01,382 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:01,383 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:01,384 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:01,386 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:01,387 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:01,389 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:01,390 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:01,392 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:01,393 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:01,395 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:01,396 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:01,465 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:01,468 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:01,470 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:01,473 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:01,475 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:01,478 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:01,481 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:03,762 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:03,765 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:27:03,768 INFO     [__main__.py:376] Selected Tasks: ['mmlu']
2025-05-12:22:27:03,814 INFO     [evaluator.py:161] Setting random seed to 0 | Setting numpy seed to 1234 | Setting torch manual seed to 1234
2025-05-12:22:27:03,814 INFO     [evaluator.py:198] Initializing hf model, with arguments: {'pretrained': 'shengyuanhu/benchmark_whp_scrub_ckpt_70', 'tokenizer': 'meta-llama/Llama-2-7b-hf'}
2025-05-12:22:27:04,331 INFO     [huggingface.py:130] Using device 'cuda'
2025-05-12:22:27:04,541 INFO     [huggingface.py:366] Model parallel was set to False, max memory was not set, and device map was set to {'': 'cuda'}
Loading checkpoint shards:   0%|          | 0/3 [00:00<?, ?it/s]Loading checkpoint shards:  33%|███▎      | 1/3 [00:01<00:03,  1.82s/it]Loading checkpoint shards:  67%|██████▋   | 2/3 [00:03<00:01,  1.54s/it]Loading checkpoint shards: 100%|██████████| 3/3 [00:04<00:00,  1.25s/it]Loading checkpoint shards: 100%|██████████| 3/3 [00:04<00:00,  1.36s/it]
2025-05-12:22:27:25,362 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-12:22:27:25,362 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-12:22:27:25,362 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-12:22:27:25,362 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-12:22:27:25,362 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-12:22:27:25,362 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-12:22:27:25,362 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-12:22:27:25,362 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-12:22:27:25,362 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-12:22:27:25,362 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-12:22:27:25,363 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-12:22:27:25,363 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-12:22:27:25,363 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-12:22:27:25,363 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-12:22:27:25,363 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-12:22:27:25,363 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-12:22:27:25,363 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-12:22:27:25,363 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-12:22:27:25,363 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-12:22:27:25,363 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-12:22:27:25,363 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-12:22:27:25,363 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-12:22:27:25,363 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-12:22:27:25,363 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-12:22:27:25,363 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-12:22:27:25,363 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-12:22:27:25,363 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-12:22:27:25,363 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-12:22:27:25,363 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-12:22:27:25,363 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-12:22:27:25,363 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-12:22:27:25,363 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-12:22:27:25,363 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-12:22:27:25,364 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-12:22:27:25,364 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-12:22:27:25,364 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-12:22:27:25,364 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-12:22:27:25,364 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-12:22:27:25,364 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-12:22:27:25,364 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-12:22:27:25,364 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-12:22:27:25,364 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-12:22:27:25,364 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-12:22:27:25,364 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-12:22:27:25,364 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-12:22:27:25,364 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-12:22:27:25,364 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-12:22:27:25,364 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-12:22:27:25,364 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-12:22:27:25,364 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-12:22:27:25,364 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-12:22:27:25,364 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-12:22:27:25,364 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-12:22:27:25,364 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-12:22:27:25,364 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-12:22:27:25,365 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-12:22:27:25,365 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-12:22:27:25,365 WARNING  [model.py:422] model.chat_template was called with the chat_template set to False or None. Therefore no chat template will be applied. Make sure this is an intended behavior.
2025-05-12:22:27:25,370 INFO     [task.py:428] Building contexts for mmlu_high_school_computer_science on rank 0...
  0%|          | 0/100 [00:00<?, ?it/s] 84%|████████▍ | 84/100 [00:00<00:00, 839.30it/s]100%|██████████| 100/100 [00:00<00:00, 839.30it/s]
2025-05-12:22:27:25,493 INFO     [task.py:428] Building contexts for mmlu_high_school_biology on rank 0...
  0%|          | 0/310 [00:00<?, ?it/s] 28%|██▊       | 88/310 [00:00<00:00, 872.85it/s] 57%|█████▋    | 176/310 [00:00<00:00, 874.38it/s] 85%|████████▌ | 264/310 [00:00<00:00, 876.25it/s]100%|██████████| 310/310 [00:00<00:00, 876.35it/s]
2025-05-12:22:27:25,858 INFO     [task.py:428] Building contexts for mmlu_abstract_algebra on rank 0...
  0%|          | 0/100 [00:00<?, ?it/s] 88%|████████▊ | 88/100 [00:00<00:00, 874.78it/s]100%|██████████| 100/100 [00:00<00:00, 876.13it/s]
2025-05-12:22:27:25,976 INFO     [task.py:428] Building contexts for mmlu_electrical_engineering on rank 0...
  0%|          | 0/145 [00:00<?, ?it/s] 60%|██████    | 87/145 [00:00<00:00, 860.74it/s]100%|██████████| 145/145 [00:00<00:00, 865.78it/s]
2025-05-12:22:27:26,148 INFO     [task.py:428] Building contexts for mmlu_college_chemistry on rank 0...
  0%|          | 0/100 [00:00<?, ?it/s] 88%|████████▊ | 88/100 [00:00<00:00, 879.03it/s]100%|██████████| 100/100 [00:00<00:00, 879.00it/s]
2025-05-12:22:27:26,266 INFO     [task.py:428] Building contexts for mmlu_high_school_chemistry on rank 0...
  0%|          | 0/203 [00:00<?, ?it/s] 43%|████▎     | 88/203 [00:00<00:00, 875.14it/s] 87%|████████▋ | 176/203 [00:00<00:00, 877.40it/s]100%|██████████| 203/203 [00:00<00:00, 877.22it/s]
2025-05-12:22:27:26,504 INFO     [task.py:428] Building contexts for mmlu_astronomy on rank 0...
  0%|          | 0/152 [00:00<?, ?it/s] 57%|█████▋    | 87/152 [00:00<00:00, 866.67it/s]100%|██████████| 152/152 [00:00<00:00, 854.53it/s]
2025-05-12:22:27:26,688 INFO     [task.py:428] Building contexts for mmlu_college_physics on rank 0...
  0%|          | 0/102 [00:00<?, ?it/s] 80%|████████  | 82/102 [00:00<00:00, 818.69it/s]100%|██████████| 102/102 [00:00<00:00, 819.13it/s]
2025-05-12:22:27:26,817 INFO     [task.py:428] Building contexts for mmlu_college_computer_science on rank 0...
  0%|          | 0/100 [00:00<?, ?it/s] 82%|████████▏ | 82/100 [00:00<00:00, 811.21it/s]100%|██████████| 100/100 [00:00<00:00, 810.35it/s]
2025-05-12:22:27:26,945 INFO     [task.py:428] Building contexts for mmlu_college_biology on rank 0...
  0%|          | 0/144 [00:00<?, ?it/s] 56%|█████▋    | 81/144 [00:00<00:00, 806.04it/s]100%|██████████| 144/144 [00:00<00:00, 803.60it/s]
2025-05-12:22:27:27,129 INFO     [task.py:428] Building contexts for mmlu_conceptual_physics on rank 0...
  0%|          | 0/235 [00:00<?, ?it/s] 34%|███▍      | 81/235 [00:00<00:00, 808.94it/s] 69%|██████▉   | 162/235 [00:00<00:00, 801.00it/s]100%|██████████| 235/235 [00:00<00:00, 800.34it/s]
2025-05-12:22:27:27,432 INFO     [task.py:428] Building contexts for mmlu_machine_learning on rank 0...
  0%|          | 0/112 [00:00<?, ?it/s] 71%|███████▏  | 80/112 [00:00<00:00, 792.88it/s]100%|██████████| 112/112 [00:00<00:00, 790.90it/s]
2025-05-12:22:27:27,578 INFO     [task.py:428] Building contexts for mmlu_high_school_mathematics on rank 0...
  0%|          | 0/270 [00:00<?, ?it/s] 30%|██▉       | 80/270 [00:00<00:00, 799.35it/s] 60%|█████▉    | 161/270 [00:00<00:00, 802.02it/s] 90%|████████▉ | 242/270 [00:00<00:00, 802.55it/s]100%|██████████| 270/270 [00:00<00:00, 801.73it/s]
2025-05-12:22:27:27,925 INFO     [task.py:428] Building contexts for mmlu_computer_security on rank 0...
  0%|          | 0/100 [00:00<?, ?it/s] 80%|████████  | 80/100 [00:00<00:00, 790.70it/s]100%|██████████| 100/100 [00:00<00:00, 777.92it/s]
2025-05-12:22:27:28,058 INFO     [task.py:428] Building contexts for mmlu_college_mathematics on rank 0...
  0%|          | 0/100 [00:00<?, ?it/s] 80%|████████  | 80/100 [00:00<00:00, 796.18it/s]100%|██████████| 100/100 [00:00<00:00, 794.67it/s]
2025-05-12:22:27:28,189 INFO     [task.py:428] Building contexts for mmlu_anatomy on rank 0...
  0%|          | 0/135 [00:00<?, ?it/s] 60%|██████    | 81/135 [00:00<00:00, 804.23it/s]100%|██████████| 135/135 [00:00<00:00, 801.63it/s]
2025-05-12:22:27:28,363 INFO     [task.py:428] Building contexts for mmlu_elementary_mathematics on rank 0...
  0%|          | 0/378 [00:00<?, ?it/s] 21%|██        | 80/378 [00:00<00:00, 797.95it/s] 42%|████▏     | 160/378 [00:00<00:00, 799.02it/s] 64%|██████▍   | 241/378 [00:00<00:00, 801.27it/s] 85%|████████▌ | 322/378 [00:00<00:00, 802.70it/s]100%|██████████| 378/378 [00:00<00:00, 801.11it/s]
2025-05-12:22:27:28,848 INFO     [task.py:428] Building contexts for mmlu_high_school_physics on rank 0...
  0%|          | 0/151 [00:00<?, ?it/s] 54%|█████▎    | 81/151 [00:00<00:00, 805.97it/s]100%|██████████| 151/151 [00:00<00:00, 790.07it/s]
2025-05-12:22:27:29,046 INFO     [task.py:428] Building contexts for mmlu_high_school_statistics on rank 0...
  0%|          | 0/216 [00:00<?, ?it/s] 37%|███▋      | 79/216 [00:00<00:00, 789.60it/s] 73%|███████▎  | 158/216 [00:00<00:00, 783.11it/s]100%|██████████| 216/216 [00:00<00:00, 786.70it/s]
2025-05-12:22:27:29,330 INFO     [task.py:428] Building contexts for mmlu_clinical_knowledge on rank 0...
  0%|          | 0/265 [00:00<?, ?it/s] 30%|███       | 80/265 [00:00<00:00, 791.13it/s] 60%|██████    | 160/265 [00:00<00:00, 788.28it/s] 90%|█████████ | 239/265 [00:00<00:00, 785.47it/s]100%|██████████| 265/265 [00:00<00:00, 785.40it/s]
2025-05-12:22:27:29,677 INFO     [task.py:428] Building contexts for mmlu_business_ethics on rank 0...
  0%|          | 0/100 [00:00<?, ?it/s] 79%|███████▉  | 79/100 [00:00<00:00, 784.81it/s]100%|██████████| 100/100 [00:00<00:00, 785.16it/s]
2025-05-12:22:27:29,809 INFO     [task.py:428] Building contexts for mmlu_management on rank 0...
  0%|          | 0/103 [00:00<?, ?it/s] 77%|███████▋  | 79/103 [00:00<00:00, 784.18it/s]100%|██████████| 103/103 [00:00<00:00, 771.78it/s]
2025-05-12:22:27:29,947 INFO     [task.py:428] Building contexts for mmlu_nutrition on rank 0...
  0%|          | 0/306 [00:00<?, ?it/s] 25%|██▍       | 75/306 [00:00<00:00, 740.94it/s] 49%|████▉     | 150/306 [00:00<00:00, 740.19it/s] 74%|███████▎  | 225/306 [00:00<00:00, 741.43it/s] 98%|█████████▊| 300/306 [00:00<00:00, 742.10it/s]100%|██████████| 306/306 [00:00<00:00, 741.17it/s]
2025-05-12:22:27:30,372 INFO     [task.py:428] Building contexts for mmlu_college_medicine on rank 0...
  0%|          | 0/173 [00:00<?, ?it/s] 42%|████▏     | 73/173 [00:00<00:00, 727.06it/s] 86%|████████▌ | 148/173 [00:00<00:00, 737.30it/s]100%|██████████| 173/173 [00:00<00:00, 736.89it/s]
2025-05-12:22:27:30,615 INFO     [task.py:428] Building contexts for mmlu_virology on rank 0...
  0%|          | 0/166 [00:00<?, ?it/s] 45%|████▌     | 75/166 [00:00<00:00, 743.51it/s] 90%|█████████ | 150/166 [00:00<00:00, 747.27it/s]100%|██████████| 166/166 [00:00<00:00, 745.85it/s]
2025-05-12:22:27:30,844 INFO     [task.py:428] Building contexts for mmlu_professional_medicine on rank 0...
  0%|          | 0/272 [00:00<?, ?it/s] 27%|██▋       | 74/272 [00:00<00:00, 737.78it/s] 55%|█████▌    | 150/272 [00:00<00:00, 745.45it/s] 83%|████████▎ | 225/272 [00:00<00:00, 742.58it/s]100%|██████████| 272/272 [00:00<00:00, 734.83it/s]
2025-05-12:22:27:31,226 INFO     [task.py:428] Building contexts for mmlu_miscellaneous on rank 0...
  0%|          | 0/783 [00:00<?, ?it/s] 10%|▉         | 76/783 [00:00<00:00, 750.35it/s] 19%|█▉        | 152/783 [00:00<00:00, 752.17it/s] 29%|██▉       | 229/783 [00:00<00:00, 756.68it/s] 39%|███▉      | 305/783 [00:00<00:00, 753.44it/s] 49%|████▊     | 381/783 [00:00<00:00, 753.36it/s] 58%|█████▊    | 457/783 [00:00<00:00, 755.10it/s] 68%|██████▊   | 533/783 [00:00<00:00, 755.46it/s] 78%|███████▊  | 609/783 [00:00<00:00, 753.63it/s] 87%|████████▋ | 685/783 [00:00<00:00, 752.25it/s] 97%|█████████▋| 761/783 [00:01<00:00, 749.52it/s]100%|██████████| 783/783 [00:01<00:00, 752.01it/s]
2025-05-12:22:27:32,296 INFO     [task.py:428] Building contexts for mmlu_medical_genetics on rank 0...
  0%|          | 0/100 [00:00<?, ?it/s] 74%|███████▍  | 74/100 [00:00<00:00, 735.68it/s]100%|██████████| 100/100 [00:00<00:00, 738.47it/s]
2025-05-12:22:27:32,436 INFO     [task.py:428] Building contexts for mmlu_global_facts on rank 0...
  0%|          | 0/100 [00:00<?, ?it/s] 75%|███████▌  | 75/100 [00:00<00:00, 745.80it/s]100%|██████████| 100/100 [00:00<00:00, 750.13it/s]
2025-05-12:22:27:32,574 INFO     [task.py:428] Building contexts for mmlu_professional_accounting on rank 0...
  0%|          | 0/282 [00:00<?, ?it/s] 27%|██▋       | 77/282 [00:00<00:00, 761.04it/s] 55%|█████▍    | 154/282 [00:00<00:00, 764.85it/s] 82%|████████▏ | 232/282 [00:00<00:00, 768.21it/s]100%|██████████| 282/282 [00:00<00:00, 767.25it/s]
2025-05-12:22:27:32,953 INFO     [task.py:428] Building contexts for mmlu_marketing on rank 0...
  0%|          | 0/234 [00:00<?, ?it/s]  8%|▊         | 19/234 [00:00<00:02, 72.33it/s] 41%|████      | 95/234 [00:00<00:00, 313.18it/s] 73%|███████▎  | 171/234 [00:00<00:00, 461.89it/s]100%|██████████| 234/234 [00:00<00:00, 427.04it/s]
2025-05-12:22:27:33,510 INFO     [task.py:428] Building contexts for mmlu_human_aging on rank 0...
  0%|          | 0/223 [00:00<?, ?it/s] 35%|███▍      | 77/223 [00:00<00:00, 769.45it/s] 69%|██████▉   | 154/223 [00:00<00:00, 752.95it/s]100%|██████████| 223/223 [00:00<00:00, 755.82it/s]
2025-05-12:22:27:33,814 INFO     [task.py:428] Building contexts for mmlu_public_relations on rank 0...
  0%|          | 0/110 [00:00<?, ?it/s] 69%|██████▉   | 76/110 [00:00<00:00, 750.92it/s]100%|██████████| 110/110 [00:00<00:00, 752.95it/s]
2025-05-12:22:27:33,965 INFO     [task.py:428] Building contexts for mmlu_sociology on rank 0...
  0%|          | 0/201 [00:00<?, ?it/s] 38%|███▊      | 77/201 [00:00<00:00, 764.88it/s] 77%|███████▋  | 154/201 [00:00<00:00, 761.46it/s]100%|██████████| 201/201 [00:00<00:00, 758.77it/s]
2025-05-12:22:27:34,238 INFO     [task.py:428] Building contexts for mmlu_high_school_geography on rank 0...
  0%|          | 0/198 [00:00<?, ?it/s] 38%|███▊      | 75/198 [00:00<00:00, 747.78it/s] 76%|███████▌  | 150/198 [00:00<00:00, 748.93it/s]100%|██████████| 198/198 [00:00<00:00, 749.39it/s]
2025-05-12:22:27:34,510 INFO     [task.py:428] Building contexts for mmlu_security_studies on rank 0...
  0%|          | 0/245 [00:00<?, ?it/s] 31%|███       | 76/245 [00:00<00:00, 753.31it/s] 62%|██████▏   | 152/245 [00:00<00:00, 756.45it/s] 93%|█████████▎| 229/245 [00:00<00:00, 759.41it/s]100%|██████████| 245/245 [00:00<00:00, 757.68it/s]
2025-05-12:22:27:34,843 INFO     [task.py:428] Building contexts for mmlu_high_school_psychology on rank 0...
  0%|          | 0/545 [00:00<?, ?it/s] 14%|█▍        | 76/545 [00:00<00:00, 759.58it/s] 28%|██▊       | 154/545 [00:00<00:00, 768.47it/s] 43%|████▎     | 232/545 [00:00<00:00, 769.70it/s] 57%|█████▋    | 310/545 [00:00<00:00, 770.80it/s] 71%|███████   | 388/545 [00:00<00:00, 766.97it/s] 85%|████████▌ | 465/545 [00:00<00:00, 765.17it/s] 99%|█████████▉| 542/545 [00:00<00:00, 762.57it/s]100%|██████████| 545/545 [00:00<00:00, 764.95it/s]
2025-05-12:22:27:35,579 INFO     [task.py:428] Building contexts for mmlu_us_foreign_policy on rank 0...
  0%|          | 0/100 [00:00<?, ?it/s] 76%|███████▌  | 76/100 [00:00<00:00, 755.93it/s]100%|██████████| 100/100 [00:00<00:00, 758.44it/s]
2025-05-12:22:27:35,715 INFO     [task.py:428] Building contexts for mmlu_high_school_macroeconomics on rank 0...
  0%|          | 0/390 [00:00<?, ?it/s] 20%|█▉        | 77/390 [00:00<00:00, 760.30it/s] 39%|███▉      | 154/390 [00:00<00:00, 758.14it/s] 59%|█████▉    | 231/390 [00:00<00:00, 760.02it/s] 79%|███████▉  | 308/390 [00:00<00:00, 759.09it/s] 98%|█████████▊| 384/390 [00:00<00:00, 758.72it/s]100%|██████████| 390/390 [00:00<00:00, 758.55it/s]
2025-05-12:22:27:36,244 INFO     [task.py:428] Building contexts for mmlu_high_school_microeconomics on rank 0...
  0%|          | 0/238 [00:00<?, ?it/s] 32%|███▏      | 76/238 [00:00<00:00, 751.44it/s] 64%|██████▍   | 152/238 [00:00<00:00, 754.67it/s] 96%|█████████▌| 228/238 [00:00<00:00, 754.25it/s]100%|██████████| 238/238 [00:00<00:00, 753.16it/s]
2025-05-12:22:27:36,569 INFO     [task.py:428] Building contexts for mmlu_econometrics on rank 0...
  0%|          | 0/114 [00:00<?, ?it/s] 67%|██████▋   | 76/114 [00:00<00:00, 752.70it/s]100%|██████████| 114/114 [00:00<00:00, 749.13it/s]
2025-05-12:22:27:36,726 INFO     [task.py:428] Building contexts for mmlu_professional_psychology on rank 0...
  0%|          | 0/612 [00:00<?, ?it/s] 12%|█▏        | 76/612 [00:00<00:00, 754.62it/s] 25%|██▍       | 152/612 [00:00<00:00, 749.09it/s] 37%|███▋      | 229/612 [00:00<00:00, 754.46it/s] 50%|████▉     | 305/612 [00:00<00:00, 754.57it/s] 62%|██████▏   | 381/612 [00:00<00:00, 751.78it/s] 75%|███████▍  | 457/612 [00:00<00:00, 752.48it/s] 87%|████████▋ | 533/612 [00:00<00:00, 753.18it/s]100%|█████████▉| 609/612 [00:00<00:00, 727.90it/s]100%|██████████| 612/612 [00:00<00:00, 742.66it/s]
2025-05-12:22:27:37,574 INFO     [task.py:428] Building contexts for mmlu_human_sexuality on rank 0...
  0%|          | 0/131 [00:00<?, ?it/s] 58%|█████▊    | 76/131 [00:00<00:00, 754.82it/s]100%|██████████| 131/131 [00:00<00:00, 758.69it/s]
2025-05-12:22:27:37,752 INFO     [task.py:428] Building contexts for mmlu_high_school_government_and_politics on rank 0...
  0%|          | 0/193 [00:00<?, ?it/s] 40%|███▉      | 77/193 [00:00<00:00, 764.47it/s] 80%|███████▉  | 154/193 [00:00<00:00, 762.92it/s]100%|██████████| 193/193 [00:00<00:00, 762.45it/s]
2025-05-12:22:27:38,013 INFO     [task.py:428] Building contexts for mmlu_moral_scenarios on rank 0...
  0%|          | 0/895 [00:00<?, ?it/s]  8%|▊         | 73/895 [00:00<00:01, 729.02it/s] 17%|█▋        | 149/895 [00:00<00:01, 745.17it/s] 25%|██▌       | 226/895 [00:00<00:00, 754.72it/s] 34%|███▍      | 303/895 [00:00<00:00, 757.36it/s] 43%|████▎     | 381/895 [00:00<00:00, 763.70it/s] 51%|█████▏    | 460/895 [00:00<00:00, 769.31it/s] 60%|██████    | 538/895 [00:00<00:00, 769.88it/s] 69%|██████▊   | 615/895 [00:00<00:00, 768.11it/s] 77%|███████▋  | 693/895 [00:00<00:00, 770.38it/s] 86%|████████▋ | 772/895 [00:01<00:00, 773.50it/s] 95%|█████████▍| 850/895 [00:01<00:00, 773.35it/s]100%|██████████| 895/895 [00:01<00:00, 766.70it/s]
2025-05-12:22:27:39,214 INFO     [task.py:428] Building contexts for mmlu_high_school_world_history on rank 0...
  0%|          | 0/237 [00:00<?, ?it/s] 32%|███▏      | 76/237 [00:00<00:00, 750.31it/s] 64%|██████▍   | 152/237 [00:00<00:00, 755.79it/s] 97%|█████████▋| 229/237 [00:00<00:00, 757.92it/s]100%|██████████| 237/237 [00:00<00:00, 755.35it/s]
2025-05-12:22:27:39,538 INFO     [task.py:428] Building contexts for mmlu_high_school_european_history on rank 0...
  0%|          | 0/165 [00:00<?, ?it/s] 45%|████▌     | 75/165 [00:00<00:00, 729.83it/s] 90%|█████████ | 149/165 [00:00<00:00, 731.64it/s]100%|██████████| 165/165 [00:00<00:00, 731.38it/s]
2025-05-12:22:27:39,771 INFO     [task.py:428] Building contexts for mmlu_philosophy on rank 0...
  0%|          | 0/311 [00:00<?, ?it/s] 24%|██▍       | 76/311 [00:00<00:00, 758.57it/s] 50%|████▉     | 154/311 [00:00<00:00, 768.36it/s] 74%|███████▍  | 231/311 [00:00<00:00, 767.83it/s] 99%|█████████▉| 309/311 [00:00<00:00, 769.10it/s]100%|██████████| 311/311 [00:00<00:00, 767.58it/s]
2025-05-12:22:27:40,190 INFO     [task.py:428] Building contexts for mmlu_moral_disputes on rank 0...
  0%|          | 0/346 [00:00<?, ?it/s] 22%|██▏       | 77/346 [00:00<00:00, 760.56it/s] 45%|████▍     | 154/346 [00:00<00:00, 763.99it/s] 67%|██████▋   | 231/346 [00:00<00:00, 765.24it/s] 89%|████████▉ | 308/346 [00:00<00:00, 765.79it/s]100%|██████████| 346/346 [00:00<00:00, 765.69it/s]
2025-05-12:22:27:40,655 INFO     [task.py:428] Building contexts for mmlu_high_school_us_history on rank 0...
  0%|          | 0/204 [00:00<?, ?it/s] 38%|███▊      | 77/204 [00:00<00:00, 763.50it/s] 75%|███████▌  | 154/204 [00:00<00:00, 759.26it/s]100%|██████████| 204/204 [00:00<00:00, 757.43it/s]
2025-05-12:22:27:40,933 INFO     [task.py:428] Building contexts for mmlu_international_law on rank 0...
  0%|          | 0/121 [00:00<?, ?it/s] 63%|██████▎   | 76/121 [00:00<00:00, 752.79it/s]100%|██████████| 121/121 [00:00<00:00, 755.17it/s]
2025-05-12:22:27:41,098 INFO     [task.py:428] Building contexts for mmlu_professional_law on rank 0...
  0%|          | 0/1534 [00:00<?, ?it/s]  5%|▍         | 75/1534 [00:00<00:01, 749.93it/s] 10%|▉         | 152/1534 [00:00<00:01, 760.91it/s] 15%|█▌        | 231/1534 [00:00<00:01, 771.13it/s] 20%|██        | 309/1534 [00:00<00:01, 771.85it/s] 25%|██▌       | 387/1534 [00:00<00:01, 771.58it/s] 30%|███       | 465/1534 [00:00<00:01, 762.57it/s] 35%|███▌      | 542/1534 [00:00<00:01, 759.27it/s] 40%|████      | 618/1534 [00:00<00:01, 758.83it/s] 45%|████▌     | 694/1534 [00:00<00:01, 757.73it/s] 50%|█████     | 771/1534 [00:01<00:01, 760.01it/s] 55%|█████▌    | 848/1534 [00:01<00:00, 762.13it/s] 60%|██████    | 925/1534 [00:01<00:00, 763.28it/s] 65%|██████▌   | 1002/1534 [00:01<00:00, 762.76it/s] 70%|███████   | 1080/1534 [00:01<00:00, 765.92it/s] 75%|███████▌  | 1157/1534 [00:01<00:00, 765.87it/s] 80%|████████  | 1234/1534 [00:01<00:00, 766.08it/s] 85%|████████▌ | 1311/1534 [00:01<00:00, 760.00it/s] 90%|█████████ | 1388/1534 [00:01<00:00, 751.81it/s] 96%|█████████▌| 1465/1534 [00:01<00:00, 756.17it/s]100%|██████████| 1534/1534 [00:02<00:00, 761.74it/s]
2025-05-12:22:27:43,170 INFO     [task.py:428] Building contexts for mmlu_world_religions on rank 0...
  0%|          | 0/171 [00:00<?, ?it/s] 47%|████▋     | 80/171 [00:00<00:00, 795.33it/s] 94%|█████████▍| 161/171 [00:00<00:00, 798.50it/s]100%|██████████| 171/171 [00:00<00:00, 798.43it/s]
2025-05-12:22:27:43,392 INFO     [task.py:428] Building contexts for mmlu_jurisprudence on rank 0...
  0%|          | 0/108 [00:00<?, ?it/s] 75%|███████▌  | 81/108 [00:00<00:00, 808.46it/s]100%|██████████| 108/108 [00:00<00:00, 807.66it/s]
2025-05-12:22:27:43,530 INFO     [task.py:428] Building contexts for mmlu_formal_logic on rank 0...
  0%|          | 0/126 [00:00<?, ?it/s] 63%|██████▎   | 80/126 [00:00<00:00, 799.69it/s]100%|██████████| 126/126 [00:00<00:00, 802.07it/s]
2025-05-12:22:27:43,692 INFO     [task.py:428] Building contexts for mmlu_prehistory on rank 0...
  0%|          | 0/324 [00:00<?, ?it/s] 25%|██▍       | 80/324 [00:00<00:00, 790.83it/s] 49%|████▉     | 160/324 [00:00<00:00, 292.03it/s] 75%|███████▍  | 242/324 [00:00<00:00, 415.10it/s]100%|██████████| 324/324 [00:00<00:00, 515.74it/s]100%|██████████| 324/324 [00:00<00:00, 464.31it/s]
2025-05-12:22:27:44,402 INFO     [task.py:428] Building contexts for mmlu_logical_fallacies on rank 0...
  0%|          | 0/163 [00:00<?, ?it/s] 52%|█████▏    | 84/163 [00:00<00:00, 830.39it/s]100%|██████████| 163/163 [00:00<00:00, 831.86it/s]
2025-05-12:22:27:44,604 INFO     [evaluator.py:485] Running loglikelihood requests
Running loglikelihood requests:   0%|          | 0/56168 [00:00<?, ?it/s]Starting from v4.46, the `logits` model output will have the same type as the model (except at train time, where it will always be FP32)
Running loglikelihood requests:   0%|          | 1/56168 [00:02<32:59:06,  2.11s/it]Running loglikelihood requests:   0%|          | 65/56168 [00:03<34:45, 26.90it/s]  Running loglikelihood requests:   0%|          | 129/56168 [00:03<21:44, 42.96it/s]Running loglikelihood requests:   0%|          | 193/56168 [00:04<17:17, 53.93it/s]Running loglikelihood requests:   0%|          | 257/56168 [00:05<15:01, 62.05it/s]Running loglikelihood requests:   1%|          | 321/56168 [00:06<13:38, 68.23it/s]Running loglikelihood requests:   1%|          | 385/56168 [00:07<12:39, 73.47it/s]Running loglikelihood requests:   1%|          | 449/56168 [00:07<11:58, 77.57it/s]Running loglikelihood requests:   1%|          | 513/56168 [00:08<11:26, 81.09it/s]Running loglikelihood requests:   1%|          | 577/56168 [00:09<11:03, 83.83it/s]Running loglikelihood requests:   1%|          | 641/56168 [00:09<10:42, 86.41it/s]Running loglikelihood requests:   1%|▏         | 705/56168 [00:10<10:22, 89.04it/s]Running loglikelihood requests:   1%|▏         | 769/56168 [00:11<10:08, 91.09it/s]Running loglikelihood requests:   1%|▏         | 833/56168 [00:11<09:54, 93.06it/s]Running loglikelihood requests:   2%|▏         | 897/56168 [00:12<09:43, 94.75it/s]Running loglikelihood requests:   2%|▏         | 961/56168 [00:13<09:32, 96.43it/s]Running loglikelihood requests:   2%|▏         | 1025/56168 [00:13<09:24, 97.67it/s]Running loglikelihood requests:   2%|▏         | 1089/56168 [00:14<09:11, 99.95it/s]Running loglikelihood requests:   2%|▏         | 1153/56168 [00:14<09:00, 101.72it/s]Running loglikelihood requests:   2%|▏         | 1217/56168 [00:15<08:52, 103.16it/s]Running loglikelihood requests:   2%|▏         | 1281/56168 [00:16<08:45, 104.47it/s]Running loglikelihood requests:   2%|▏         | 1345/56168 [00:16<08:40, 105.39it/s]Running loglikelihood requests:   3%|▎         | 1409/56168 [00:17<08:32, 106.81it/s]Running loglikelihood requests:   3%|▎         | 1473/56168 [00:17<08:26, 107.90it/s]Running loglikelihood requests:   3%|▎         | 1537/56168 [00:18<08:22, 108.70it/s]Running loglikelihood requests:   3%|▎         | 1601/56168 [00:19<08:18, 109.42it/s]Running loglikelihood requests:   3%|▎         | 1665/56168 [00:19<08:08, 111.49it/s]Running loglikelihood requests:   3%|▎         | 1729/56168 [00:20<08:01, 113.13it/s]Running loglikelihood requests:   3%|▎         | 1793/56168 [00:20<07:55, 114.43it/s]Running loglikelihood requests:   3%|▎         | 1857/56168 [00:21<07:50, 115.49it/s]Running loglikelihood requests:   3%|▎         | 1921/56168 [00:21<07:45, 116.65it/s]Running loglikelihood requests:   4%|▎         | 1985/56168 [00:22<07:39, 117.80it/s]Running loglikelihood requests:   4%|▎         | 2049/56168 [00:22<07:36, 118.61it/s]Running loglikelihood requests:   4%|▍         | 2113/56168 [00:23<07:32, 119.35it/s]Running loglikelihood requests:   4%|▍         | 2177/56168 [00:23<07:28, 120.45it/s]Running loglikelihood requests:   4%|▍         | 2241/56168 [00:24<07:25, 121.13it/s]Running loglikelihood requests:   4%|▍         | 2305/56168 [00:24<07:21, 121.87it/s]Running loglikelihood requests:   4%|▍         | 2369/56168 [00:25<07:18, 122.59it/s]Running loglikelihood requests:   4%|▍         | 2433/56168 [00:25<07:16, 123.00it/s]Running loglikelihood requests:   4%|▍         | 2497/56168 [00:26<07:14, 123.56it/s]Running loglikelihood requests:   5%|▍         | 2561/56168 [00:27<07:10, 124.39it/s]Running loglikelihood requests:   5%|▍         | 2625/56168 [00:27<07:08, 125.07it/s]Running loglikelihood requests:   5%|▍         | 2689/56168 [00:28<07:05, 125.73it/s]Running loglikelihood requests:   5%|▍         | 2753/56168 [00:28<07:01, 126.73it/s]Running loglikelihood requests:   5%|▌         | 2817/56168 [00:29<06:58, 127.59it/s]Running loglikelihood requests:   5%|▌         | 2881/56168 [00:29<06:55, 128.12it/s]Running loglikelihood requests:   5%|▌         | 2945/56168 [00:29<06:53, 128.57it/s]Running loglikelihood requests:   5%|▌         | 3009/56168 [00:30<06:47, 130.43it/s]Running loglikelihood requests:   5%|▌         | 3073/56168 [00:30<06:42, 131.89it/s]Running loglikelihood requests:   6%|▌         | 3137/56168 [00:31<06:39, 132.88it/s]Running loglikelihood requests:   6%|▌         | 3201/56168 [00:31<06:36, 133.70it/s]Running loglikelihood requests:   6%|▌         | 3265/56168 [00:32<06:33, 134.42it/s]Running loglikelihood requests:   6%|▌         | 3329/56168 [00:32<06:31, 134.84it/s]Running loglikelihood requests:   6%|▌         | 3393/56168 [00:33<06:29, 135.37it/s]Running loglikelihood requests:   6%|▌         | 3457/56168 [00:33<06:28, 135.82it/s]Running loglikelihood requests:   6%|▋         | 3521/56168 [00:34<06:24, 136.85it/s]Running loglikelihood requests:   6%|▋         | 3585/56168 [00:34<06:22, 137.61it/s]Running loglikelihood requests:   6%|▋         | 3649/56168 [00:35<06:20, 138.18it/s]Running loglikelihood requests:   7%|▋         | 3713/56168 [00:35<06:18, 138.74it/s]Running loglikelihood requests:   7%|▋         | 3777/56168 [00:36<06:16, 139.21it/s]Running loglikelihood requests:   7%|▋         | 3841/56168 [00:36<06:15, 139.52it/s]Running loglikelihood requests:   7%|▋         | 3905/56168 [00:36<06:13, 140.07it/s]Running loglikelihood requests:   7%|▋         | 3969/56168 [00:37<06:09, 141.17it/s]Running loglikelihood requests:   7%|▋         | 4033/56168 [00:37<06:07, 142.01it/s]Running loglikelihood requests:   7%|▋         | 4097/56168 [00:38<06:04, 142.69it/s]Running loglikelihood requests:   7%|▋         | 4161/56168 [00:38<06:03, 143.13it/s]Running loglikelihood requests:   8%|▊         | 4225/56168 [00:39<06:01, 143.66it/s]Running loglikelihood requests:   8%|▊         | 4289/56168 [00:39<05:59, 144.22it/s]Running loglikelihood requests:   8%|▊         | 4353/56168 [00:40<05:58, 144.68it/s]Running loglikelihood requests:   8%|▊         | 4417/56168 [00:40<05:56, 145.06it/s]Running loglikelihood requests:   8%|▊         | 4481/56168 [00:40<05:55, 145.48it/s]Running loglikelihood requests:   8%|▊         | 4545/56168 [00:41<05:48, 148.31it/s]Running loglikelihood requests:   8%|▊         | 4609/56168 [00:41<05:42, 150.37it/s]Running loglikelihood requests:   8%|▊         | 4673/56168 [00:42<05:38, 152.15it/s]Running loglikelihood requests:   8%|▊         | 4737/56168 [00:42<05:35, 153.45it/s]Running loglikelihood requests:   9%|▊         | 4801/56168 [00:42<05:32, 154.29it/s]Running loglikelihood requests:   9%|▊         | 4865/56168 [00:43<05:30, 155.26it/s]Running loglikelihood requests:   9%|▉         | 4929/56168 [00:43<05:28, 156.03it/s]Running loglikelihood requests:   9%|▉         | 4993/56168 [00:44<05:26, 156.53it/s]Running loglikelihood requests:   9%|▉         | 5057/56168 [00:44<05:24, 157.48it/s]Running loglikelihood requests:   9%|▉         | 5121/56168 [00:45<05:22, 158.17it/s]Running loglikelihood requests:   9%|▉         | 5185/56168 [00:45<05:21, 158.56it/s]Running loglikelihood requests:   9%|▉         | 5249/56168 [00:45<05:20, 159.11it/s]Running loglikelihood requests:   9%|▉         | 5313/56168 [00:46<05:18, 159.77it/s]Running loglikelihood requests:  10%|▉         | 5377/56168 [00:46<05:17, 160.16it/s]Running loglikelihood requests:  10%|▉         | 5441/56168 [00:46<05:16, 160.38it/s]Running loglikelihood requests:  10%|▉         | 5505/56168 [00:47<05:14, 160.95it/s]Running loglikelihood requests:  10%|▉         | 5569/56168 [00:47<05:13, 161.51it/s]Running loglikelihood requests:  10%|█         | 5633/56168 [00:48<05:10, 162.65it/s]Running loglikelihood requests:  10%|█         | 5697/56168 [00:48<05:08, 163.85it/s]Running loglikelihood requests:  10%|█         | 5761/56168 [00:48<05:06, 164.64it/s]Running loglikelihood requests:  10%|█         | 5825/56168 [00:49<05:04, 165.33it/s]Running loglikelihood requests:  10%|█         | 5889/56168 [00:49<05:02, 166.07it/s]Running loglikelihood requests:  11%|█         | 5953/56168 [00:50<05:01, 166.53it/s]Running loglikelihood requests:  11%|█         | 6017/56168 [00:50<05:00, 166.67it/s]Running loglikelihood requests:  11%|█         | 6081/56168 [00:50<04:59, 167.18it/s]Running loglikelihood requests:  11%|█         | 6145/56168 [00:51<04:58, 167.46it/s]Running loglikelihood requests:  11%|█         | 6209/56168 [00:51<04:57, 168.04it/s]Running loglikelihood requests:  11%|█         | 6273/56168 [00:51<04:56, 168.38it/s]Running loglikelihood requests:  11%|█▏        | 6337/56168 [00:52<04:55, 168.37it/s]Running loglikelihood requests:  11%|█▏        | 6401/56168 [00:52<04:52, 169.89it/s]Running loglikelihood requests:  12%|█▏        | 6465/56168 [00:53<04:50, 170.97it/s]Running loglikelihood requests:  12%|█▏        | 6529/56168 [00:53<04:49, 171.38it/s]Running loglikelihood requests:  12%|█▏        | 6593/56168 [00:53<04:48, 171.99it/s]Running loglikelihood requests:  12%|█▏        | 6657/56168 [00:54<04:46, 173.00it/s]Running loglikelihood requests:  12%|█▏        | 6721/56168 [00:54<04:45, 173.47it/s]Running loglikelihood requests:  12%|█▏        | 6785/56168 [00:54<04:42, 174.65it/s]Running loglikelihood requests:  12%|█▏        | 6849/56168 [00:55<04:40, 175.79it/s]Running loglikelihood requests:  12%|█▏        | 6913/56168 [00:55<04:38, 176.83it/s]Running loglikelihood requests:  12%|█▏        | 6977/56168 [00:56<04:37, 177.47it/s]Running loglikelihood requests:  13%|█▎        | 7041/56168 [00:56<04:36, 177.86it/s]Running loglikelihood requests:  13%|█▎        | 7105/56168 [00:56<04:34, 178.50it/s]Running loglikelihood requests:  13%|█▎        | 7169/56168 [00:57<04:33, 179.10it/s]Running loglikelihood requests:  13%|█▎        | 7233/56168 [00:57<04:28, 182.32it/s]Running loglikelihood requests:  13%|█▎        | 7297/56168 [00:57<04:23, 185.30it/s]Running loglikelihood requests:  13%|█▎        | 7361/56168 [00:58<04:20, 187.29it/s]Running loglikelihood requests:  13%|█▎        | 7425/56168 [00:58<04:18, 188.80it/s]Running loglikelihood requests:  13%|█▎        | 7489/56168 [00:58<04:16, 189.95it/s]Running loglikelihood requests:  13%|█▎        | 7553/56168 [00:59<04:14, 190.88it/s]Running loglikelihood requests:  14%|█▎        | 7617/56168 [00:59<04:13, 191.65it/s]Running loglikelihood requests:  14%|█▎        | 7681/56168 [00:59<04:12, 192.29it/s]Running loglikelihood requests:  14%|█▍        | 7745/56168 [01:00<04:10, 193.01it/s]Running loglikelihood requests:  14%|█▍        | 7809/56168 [01:00<04:08, 194.78it/s]Running loglikelihood requests:  14%|█▍        | 7873/56168 [01:00<04:06, 196.27it/s]Running loglikelihood requests:  14%|█▍        | 7937/56168 [01:01<04:04, 197.46it/s]Running loglikelihood requests:  14%|█▍        | 8001/56168 [01:01<04:03, 197.98it/s]Running loglikelihood requests:  14%|█▍        | 8065/56168 [01:01<04:02, 198.39it/s]Running loglikelihood requests:  14%|█▍        | 8129/56168 [01:01<04:00, 199.39it/s]Running loglikelihood requests:  15%|█▍        | 8193/56168 [01:02<03:59, 200.21it/s]Running loglikelihood requests:  15%|█▍        | 8257/56168 [01:02<03:58, 201.02it/s]Running loglikelihood requests:  15%|█▍        | 8321/56168 [01:02<03:56, 201.94it/s]Running loglikelihood requests:  15%|█▍        | 8385/56168 [01:03<03:56, 202.46it/s]Running loglikelihood requests:  15%|█▌        | 8449/56168 [01:03<03:55, 203.02it/s]Running loglikelihood requests:  15%|█▌        | 8513/56168 [01:03<03:53, 204.11it/s]Running loglikelihood requests:  15%|█▌        | 8577/56168 [01:04<03:52, 204.89it/s]Running loglikelihood requests:  15%|█▌        | 8641/56168 [01:04<03:51, 205.64it/s]Running loglikelihood requests:  15%|█▌        | 8705/56168 [01:04<03:49, 206.65it/s]Running loglikelihood requests:  16%|█▌        | 8769/56168 [01:05<03:48, 207.24it/s]Running loglikelihood requests:  16%|█▌        | 8833/56168 [01:05<03:48, 207.41it/s]Running loglikelihood requests:  16%|█▌        | 8897/56168 [01:05<03:42, 212.79it/s]Running loglikelihood requests:  16%|█▌        | 8961/56168 [01:05<03:37, 217.04it/s]Running loglikelihood requests:  16%|█▌        | 9025/56168 [01:06<03:34, 219.96it/s]Running loglikelihood requests:  16%|█▌        | 9089/56168 [01:06<03:31, 222.28it/s]Running loglikelihood requests:  16%|█▋        | 9153/56168 [01:06<03:30, 223.74it/s]Running loglikelihood requests:  16%|█▋        | 9217/56168 [01:07<03:28, 225.19it/s]Running loglikelihood requests:  17%|█▋        | 9281/56168 [01:07<03:26, 226.61it/s]Running loglikelihood requests:  17%|█▋        | 9345/56168 [01:07<03:25, 228.08it/s]Running loglikelihood requests:  17%|█▋        | 9409/56168 [01:07<03:23, 229.50it/s]Running loglikelihood requests:  17%|█▋        | 9473/56168 [01:08<03:22, 230.18it/s]Running loglikelihood requests:  17%|█▋        | 9537/56168 [01:08<03:22, 230.79it/s]Running loglikelihood requests:  17%|█▋        | 9601/56168 [01:08<03:21, 231.44it/s]Running loglikelihood requests:  17%|█▋        | 9665/56168 [01:09<03:19, 233.27it/s]Running loglikelihood requests:  17%|█▋        | 9729/56168 [01:09<03:17, 235.19it/s]Running loglikelihood requests:  17%|█▋        | 9793/56168 [01:09<03:15, 236.95it/s]Running loglikelihood requests:  18%|█▊        | 9857/56168 [01:09<03:14, 238.46it/s]Running loglikelihood requests:  18%|█▊        | 9921/56168 [01:10<03:13, 239.10it/s]Running loglikelihood requests:  18%|█▊        | 9985/56168 [01:10<03:12, 239.78it/s]Running loglikelihood requests:  18%|█▊        | 10049/56168 [01:10<03:12, 240.12it/s]Running loglikelihood requests:  18%|█▊        | 10113/56168 [01:10<03:10, 241.57it/s]Running loglikelihood requests:  18%|█▊        | 10177/56168 [01:11<03:09, 242.90it/s]Running loglikelihood requests:  18%|█▊        | 10241/56168 [01:11<03:08, 243.78it/s]Running loglikelihood requests:  18%|█▊        | 10305/56168 [01:11<03:07, 244.42it/s]Running loglikelihood requests:  18%|█▊        | 10369/56168 [01:11<03:06, 245.04it/s]Running loglikelihood requests:  19%|█▊        | 10433/56168 [01:12<03:05, 246.08it/s]Running loglikelihood requests:  19%|█▊        | 10497/56168 [01:12<03:04, 246.94it/s]Running loglikelihood requests:  19%|█▉        | 10561/56168 [01:12<03:04, 247.57it/s]Running loglikelihood requests:  19%|█▉        | 10625/56168 [01:12<03:04, 247.49it/s]Running loglikelihood requests:  19%|█▉        | 10689/56168 [01:13<03:03, 248.18it/s]Running loglikelihood requests:  19%|█▉        | 10753/56168 [01:13<03:02, 249.19it/s]Running loglikelihood requests:  19%|█▉        | 10817/56168 [01:13<03:02, 249.09it/s]Running loglikelihood requests:  19%|█▉        | 10881/56168 [01:13<03:01, 249.86it/s]Running loglikelihood requests:  19%|█▉        | 10945/56168 [01:14<03:00, 250.29it/s]Running loglikelihood requests:  20%|█▉        | 11009/56168 [01:14<02:59, 251.10it/s]Running loglikelihood requests:  20%|█▉        | 11073/56168 [01:14<02:57, 253.40it/s]Running loglikelihood requests:  20%|█▉        | 11137/56168 [01:14<02:56, 255.41it/s]Running loglikelihood requests:  20%|█▉        | 11201/56168 [01:15<02:55, 256.00it/s]Running loglikelihood requests:  20%|██        | 11265/56168 [01:15<02:54, 257.30it/s]Running loglikelihood requests:  20%|██        | 11329/56168 [01:15<02:53, 258.51it/s]Running loglikelihood requests:  20%|██        | 11393/56168 [01:15<02:52, 259.71it/s]Running loglikelihood requests:  20%|██        | 11457/56168 [01:16<02:51, 260.98it/s]Running loglikelihood requests:  21%|██        | 11521/56168 [01:16<02:50, 261.83it/s]Running loglikelihood requests:  21%|██        | 11585/56168 [01:16<02:50, 261.97it/s]Running loglikelihood requests:  21%|██        | 11649/56168 [01:16<02:49, 262.43it/s]Running loglikelihood requests:  21%|██        | 11713/56168 [01:17<02:48, 263.36it/s]Running loglikelihood requests:  21%|██        | 11781/56168 [01:17<02:44, 269.30it/s]Running loglikelihood requests:  21%|██        | 11845/56168 [01:17<02:45, 268.07it/s]Running loglikelihood requests:  21%|██        | 11909/56168 [01:17<02:45, 267.31it/s]Running loglikelihood requests:  21%|██▏       | 11973/56168 [01:18<02:45, 266.74it/s]Running loglikelihood requests:  21%|██▏       | 12037/56168 [01:18<02:45, 267.08it/s]Running loglikelihood requests:  22%|██▏       | 12101/56168 [01:18<02:44, 267.67it/s]Running loglikelihood requests:  22%|██▏       | 12165/56168 [01:18<02:43, 268.76it/s]Running loglikelihood requests:  22%|██▏       | 12229/56168 [01:19<02:43, 269.07it/s]Running loglikelihood requests:  22%|██▏       | 12293/56168 [01:19<02:42, 269.22it/s]Running loglikelihood requests:  22%|██▏       | 12357/56168 [01:19<02:37, 277.51it/s]Running loglikelihood requests:  22%|██▏       | 12421/56168 [01:19<02:34, 283.97it/s]Running loglikelihood requests:  22%|██▏       | 12485/56168 [01:19<02:31, 288.44it/s]Running loglikelihood requests:  22%|██▏       | 12549/56168 [01:20<02:29, 291.53it/s]Running loglikelihood requests:  22%|██▏       | 12613/56168 [01:20<02:27, 294.81it/s]Running loglikelihood requests:  23%|██▎       | 12677/56168 [01:20<02:26, 296.30it/s]Running loglikelihood requests:  23%|██▎       | 12741/56168 [01:20<02:25, 297.61it/s]Running loglikelihood requests:  23%|██▎       | 12805/56168 [01:21<02:24, 299.14it/s]Running loglikelihood requests:  23%|██▎       | 12869/56168 [01:21<02:23, 300.79it/s]Running loglikelihood requests:  23%|██▎       | 12933/56168 [01:21<02:23, 301.42it/s]Running loglikelihood requests:  23%|██▎       | 12997/56168 [01:21<02:23, 301.15it/s]Running loglikelihood requests:  23%|██▎       | 13061/56168 [01:21<02:22, 301.50it/s]Running loglikelihood requests:  23%|██▎       | 13125/56168 [01:22<02:22, 301.88it/s]Running loglikelihood requests:  23%|██▎       | 13189/56168 [01:22<02:21, 303.11it/s]Running loglikelihood requests:  24%|██▎       | 13253/56168 [01:22<02:21, 304.28it/s]Running loglikelihood requests:  24%|██▎       | 13317/56168 [01:22<02:20, 304.85it/s]Running loglikelihood requests:  24%|██▍       | 13381/56168 [01:22<02:20, 305.47it/s]Running loglikelihood requests:  24%|██▍       | 13445/56168 [01:23<02:19, 306.16it/s]Running loglikelihood requests:  24%|██▍       | 13509/56168 [01:23<02:18, 307.14it/s]Running loglikelihood requests:  24%|██▍       | 13573/56168 [01:23<02:18, 307.92it/s]Running loglikelihood requests:  24%|██▍       | 13637/56168 [01:23<02:18, 307.78it/s]Running loglikelihood requests:  24%|██▍       | 13701/56168 [01:23<02:17, 307.84it/s]Running loglikelihood requests:  25%|██▍       | 13765/56168 [01:24<02:17, 308.23it/s]Running loglikelihood requests:  25%|██▍       | 13829/56168 [01:24<02:17, 308.95it/s]Running loglikelihood requests:  25%|██▍       | 13893/56168 [01:24<02:16, 308.63it/s]Running loglikelihood requests:  25%|██▍       | 13957/56168 [01:24<02:16, 309.09it/s]Running loglikelihood requests:  25%|██▍       | 14021/56168 [01:24<02:16, 309.24it/s]Running loglikelihood requests:  25%|██▌       | 14085/56168 [01:25<02:16, 309.18it/s]Running loglikelihood requests:  25%|██▌       | 14149/56168 [01:25<02:15, 309.40it/s]Running loglikelihood requests:  25%|██▌       | 14213/56168 [01:25<02:15, 309.25it/s]Running loglikelihood requests:  25%|██▌       | 14277/56168 [01:25<02:15, 309.88it/s]Running loglikelihood requests:  26%|██▌       | 14341/56168 [01:26<02:14, 309.91it/s]Running loglikelihood requests:  26%|██▌       | 14405/56168 [01:26<02:14, 310.48it/s]Running loglikelihood requests:  26%|██▌       | 14469/56168 [01:26<02:14, 310.28it/s]Running loglikelihood requests:  26%|██▌       | 14533/56168 [01:26<02:13, 311.29it/s]Running loglikelihood requests:  26%|██▌       | 14597/56168 [01:26<02:13, 311.77it/s]Running loglikelihood requests:  26%|██▌       | 14661/56168 [01:27<02:12, 312.73it/s]Running loglikelihood requests:  26%|██▌       | 14725/56168 [01:27<02:12, 312.98it/s]Running loglikelihood requests:  26%|██▋       | 14789/56168 [01:27<02:11, 314.00it/s]Running loglikelihood requests:  26%|██▋       | 14853/56168 [01:27<02:11, 314.46it/s]Running loglikelihood requests:  27%|██▋       | 14917/56168 [01:27<02:11, 314.27it/s]Running loglikelihood requests:  27%|██▋       | 14981/56168 [01:28<02:10, 314.89it/s]Running loglikelihood requests:  27%|██▋       | 15045/56168 [01:28<02:10, 314.29it/s]Running loglikelihood requests:  27%|██▋       | 15109/56168 [01:28<02:10, 314.78it/s]Running loglikelihood requests:  27%|██▋       | 15173/56168 [01:28<02:10, 314.32it/s]Running loglikelihood requests:  27%|██▋       | 15237/56168 [01:28<02:10, 314.69it/s]Running loglikelihood requests:  27%|██▋       | 15301/56168 [01:29<02:09, 315.42it/s]Running loglikelihood requests:  27%|██▋       | 15365/56168 [01:29<02:09, 314.36it/s]Running loglikelihood requests:  27%|██▋       | 15429/56168 [01:29<02:09, 314.34it/s]Running loglikelihood requests:  28%|██▊       | 15493/56168 [01:29<02:09, 314.13it/s]Running loglikelihood requests:  28%|██▊       | 15557/56168 [01:29<02:08, 315.25it/s]Running loglikelihood requests:  28%|██▊       | 15621/56168 [01:30<02:08, 316.44it/s]Running loglikelihood requests:  28%|██▊       | 15685/56168 [01:30<02:07, 317.15it/s]Running loglikelihood requests:  28%|██▊       | 15749/56168 [01:30<02:07, 317.56it/s]Running loglikelihood requests:  28%|██▊       | 15813/56168 [01:30<02:07, 317.41it/s]Running loglikelihood requests:  28%|██▊       | 15877/56168 [01:30<02:06, 317.42it/s]Running loglikelihood requests:  28%|██▊       | 15941/56168 [01:31<02:07, 316.63it/s]Running loglikelihood requests:  28%|██▊       | 16005/56168 [01:31<02:06, 316.81it/s]Running loglikelihood requests:  29%|██▊       | 16069/56168 [01:31<02:06, 317.27it/s]Running loglikelihood requests:  29%|██▊       | 16133/56168 [01:31<02:05, 318.03it/s]Running loglikelihood requests:  29%|██▉       | 16197/56168 [01:31<02:05, 318.13it/s]Running loglikelihood requests:  29%|██▉       | 16261/56168 [01:32<02:05, 317.63it/s]Running loglikelihood requests:  29%|██▉       | 16325/56168 [01:32<02:05, 317.43it/s]Running loglikelihood requests:  29%|██▉       | 16389/56168 [01:32<02:05, 317.77it/s]Running loglikelihood requests:  29%|██▉       | 16453/56168 [01:32<02:04, 318.00it/s]Running loglikelihood requests:  29%|██▉       | 16517/56168 [01:32<02:04, 318.72it/s]Running loglikelihood requests:  30%|██▉       | 16581/56168 [01:33<02:04, 319.16it/s]Running loglikelihood requests:  30%|██▉       | 16645/56168 [01:33<02:03, 319.60it/s]Running loglikelihood requests:  30%|██▉       | 16709/56168 [01:33<02:02, 323.13it/s]Running loglikelihood requests:  30%|██▉       | 16773/56168 [01:33<02:00, 325.67it/s]Running loglikelihood requests:  30%|██▉       | 16837/56168 [01:33<01:59, 328.01it/s]Running loglikelihood requests:  30%|███       | 16901/56168 [01:34<01:59, 329.29it/s]Running loglikelihood requests:  30%|███       | 16965/56168 [01:34<01:58, 330.45it/s]Running loglikelihood requests:  30%|███       | 17029/56168 [01:34<01:58, 330.53it/s]Running loglikelihood requests:  30%|███       | 17093/56168 [01:34<01:57, 331.18it/s]Running loglikelihood requests:  31%|███       | 17157/56168 [01:34<01:57, 331.62it/s]Running loglikelihood requests:  31%|███       | 17221/56168 [01:35<01:57, 332.49it/s]Running loglikelihood requests:  31%|███       | 17285/56168 [01:35<01:56, 332.99it/s]Running loglikelihood requests:  31%|███       | 17349/56168 [01:35<01:56, 333.44it/s]Running loglikelihood requests:  31%|███       | 17413/56168 [01:35<01:56, 333.30it/s]Running loglikelihood requests:  31%|███       | 17477/56168 [01:35<01:56, 333.31it/s]Running loglikelihood requests:  31%|███       | 17541/56168 [01:35<01:56, 332.40it/s]Running loglikelihood requests:  31%|███▏      | 17605/56168 [01:36<01:56, 332.42it/s]Running loglikelihood requests:  31%|███▏      | 17669/56168 [01:36<01:55, 332.95it/s]Running loglikelihood requests:  32%|███▏      | 17733/56168 [01:36<01:55, 333.32it/s]Running loglikelihood requests:  32%|███▏      | 17797/56168 [01:36<01:54, 334.01it/s]Running loglikelihood requests:  32%|███▏      | 17861/56168 [01:36<01:54, 333.58it/s]Running loglikelihood requests:  32%|███▏      | 17925/56168 [01:37<01:54, 333.82it/s]Running loglikelihood requests:  32%|███▏      | 17989/56168 [01:37<01:54, 334.02it/s]Running loglikelihood requests:  32%|███▏      | 18053/56168 [01:37<01:54, 334.15it/s]Running loglikelihood requests:  32%|███▏      | 18117/56168 [01:37<01:53, 334.83it/s]Running loglikelihood requests:  32%|███▏      | 18181/56168 [01:37<01:53, 334.60it/s]Running loglikelihood requests:  32%|███▏      | 18245/56168 [01:38<01:53, 334.54it/s]Running loglikelihood requests:  33%|███▎      | 18309/56168 [01:38<01:52, 335.12it/s]Running loglikelihood requests:  33%|███▎      | 18373/56168 [01:38<01:52, 334.94it/s]Running loglikelihood requests:  33%|███▎      | 18437/56168 [01:38<01:52, 334.50it/s]Running loglikelihood requests:  33%|███▎      | 18501/56168 [01:38<01:52, 334.86it/s]Running loglikelihood requests:  33%|███▎      | 18565/56168 [01:39<01:52, 334.04it/s]Running loglikelihood requests:  33%|███▎      | 18629/56168 [01:39<01:52, 334.66it/s]Running loglikelihood requests:  33%|███▎      | 18693/56168 [01:39<01:52, 334.49it/s]Running loglikelihood requests:  33%|███▎      | 18757/56168 [01:39<01:51, 334.96it/s]Running loglikelihood requests:  34%|███▎      | 18821/56168 [01:39<01:51, 334.89it/s]Running loglikelihood requests:  34%|███▎      | 18885/56168 [01:40<01:51, 335.78it/s]Running loglikelihood requests:  34%|███▎      | 18949/56168 [01:40<01:50, 335.80it/s]Running loglikelihood requests:  34%|███▍      | 19017/56168 [01:40<01:48, 342.07it/s]Running loglikelihood requests:  34%|███▍      | 19081/56168 [01:40<01:48, 340.69it/s]Running loglikelihood requests:  34%|███▍      | 19145/56168 [01:40<01:49, 337.89it/s]Running loglikelihood requests:  34%|███▍      | 19213/56168 [01:40<01:47, 343.63it/s]Running loglikelihood requests:  34%|███▍      | 19277/56168 [01:41<01:48, 341.58it/s]Running loglikelihood requests:  34%|███▍      | 19341/56168 [01:41<01:48, 340.32it/s]Running loglikelihood requests:  35%|███▍      | 19405/56168 [01:41<01:48, 339.32it/s]Running loglikelihood requests:  35%|███▍      | 19469/56168 [01:41<01:48, 338.49it/s]Running loglikelihood requests:  35%|███▍      | 19533/56168 [01:41<01:47, 339.56it/s]Running loglikelihood requests:  35%|███▍      | 19597/56168 [01:42<01:46, 342.51it/s]Running loglikelihood requests:  35%|███▌      | 19661/56168 [01:42<01:45, 344.68it/s]Running loglikelihood requests:  35%|███▌      | 19725/56168 [01:42<01:44, 347.08it/s]Running loglikelihood requests:  35%|███▌      | 19789/56168 [01:42<01:44, 348.25it/s]Running loglikelihood requests:  35%|███▌      | 19853/56168 [01:42<01:44, 348.98it/s]Running loglikelihood requests:  35%|███▌      | 19917/56168 [01:43<01:43, 350.17it/s]Running loglikelihood requests:  36%|███▌      | 19981/56168 [01:43<01:43, 350.77it/s]Running loglikelihood requests:  36%|███▌      | 20045/56168 [01:43<01:42, 350.73it/s]Running loglikelihood requests:  36%|███▌      | 20109/56168 [01:43<01:42, 351.10it/s]Running loglikelihood requests:  36%|███▌      | 20173/56168 [01:43<01:42, 351.45it/s]Running loglikelihood requests:  36%|███▌      | 20237/56168 [01:43<01:42, 351.83it/s]Running loglikelihood requests:  36%|███▌      | 20301/56168 [01:44<01:41, 352.49it/s]Running loglikelihood requests:  36%|███▋      | 20365/56168 [01:44<01:41, 352.36it/s]Running loglikelihood requests:  36%|███▋      | 20429/56168 [01:44<01:41, 352.79it/s]Running loglikelihood requests:  36%|███▋      | 20493/56168 [01:44<01:40, 354.00it/s]Running loglikelihood requests:  37%|███▋      | 20557/56168 [01:44<01:40, 354.93it/s]Running loglikelihood requests:  37%|███▋      | 20621/56168 [01:44<01:40, 355.30it/s]Running loglikelihood requests:  37%|███▋      | 20693/56168 [01:45<01:36, 368.66it/s]Running loglikelihood requests:  37%|███▋      | 20757/56168 [01:45<01:37, 364.23it/s]Running loglikelihood requests:  37%|███▋      | 20821/56168 [01:45<01:37, 361.59it/s]Running loglikelihood requests:  37%|███▋      | 20885/56168 [01:45<01:37, 360.26it/s]Running loglikelihood requests:  37%|███▋      | 20949/56168 [01:45<01:38, 358.94it/s]Running loglikelihood requests:  37%|███▋      | 21013/56168 [01:46<01:38, 358.09it/s]Running loglikelihood requests:  38%|███▊      | 21077/56168 [01:46<01:38, 356.90it/s]Running loglikelihood requests:  38%|███▊      | 21141/56168 [01:46<01:38, 356.85it/s]Running loglikelihood requests:  38%|███▊      | 21205/56168 [01:46<01:37, 356.96it/s]Running loglikelihood requests:  38%|███▊      | 21269/56168 [01:46<01:37, 357.16it/s]Running loglikelihood requests:  38%|███▊      | 21333/56168 [01:46<01:37, 356.67it/s]Running loglikelihood requests:  38%|███▊      | 21397/56168 [01:47<01:37, 357.00it/s]Running loglikelihood requests:  38%|███▊      | 21461/56168 [01:47<01:37, 357.26it/s]Running loglikelihood requests:  38%|███▊      | 21525/56168 [01:47<01:37, 356.56it/s]Running loglikelihood requests:  38%|███▊      | 21589/56168 [01:47<01:37, 356.22it/s]Running loglikelihood requests:  39%|███▊      | 21653/56168 [01:47<01:36, 356.42it/s]Running loglikelihood requests:  39%|███▊      | 21717/56168 [01:48<01:36, 357.52it/s]Running loglikelihood requests:  39%|███▉      | 21781/56168 [01:48<01:35, 358.32it/s]Running loglikelihood requests:  39%|███▉      | 21845/56168 [01:48<01:35, 358.92it/s]Running loglikelihood requests:  39%|███▉      | 21909/56168 [01:48<01:35, 358.48it/s]Running loglikelihood requests:  39%|███▉      | 21973/56168 [01:48<01:34, 361.73it/s]Running loglikelihood requests:  39%|███▉      | 22037/56168 [01:48<01:33, 364.12it/s]Running loglikelihood requests:  39%|███▉      | 22101/56168 [01:49<01:33, 364.52it/s]Running loglikelihood requests:  39%|███▉      | 22177/56168 [01:49<01:28, 385.02it/s]Running loglikelihood requests:  40%|███▉      | 22241/56168 [01:49<01:29, 380.08it/s]Running loglikelihood requests:  40%|███▉      | 22305/56168 [01:49<01:29, 376.59it/s]Running loglikelihood requests:  40%|███▉      | 22369/56168 [01:49<01:30, 374.27it/s]Running loglikelihood requests:  40%|███▉      | 22433/56168 [01:49<01:30, 372.42it/s]Running loglikelihood requests:  40%|████      | 22497/56168 [01:50<01:30, 371.82it/s]Running loglikelihood requests:  40%|████      | 22561/56168 [01:50<01:30, 372.23it/s]Running loglikelihood requests:  40%|████      | 22625/56168 [01:50<01:30, 370.78it/s]Running loglikelihood requests:  40%|████      | 22689/56168 [01:50<01:30, 370.65it/s]Running loglikelihood requests:  41%|████      | 22753/56168 [01:50<01:30, 370.81it/s]Running loglikelihood requests:  41%|████      | 22817/56168 [01:51<01:29, 371.10it/s]Running loglikelihood requests:  41%|████      | 22881/56168 [01:51<01:29, 370.40it/s]Running loglikelihood requests:  41%|████      | 22945/56168 [01:51<01:29, 370.13it/s]Running loglikelihood requests:  41%|████      | 23009/56168 [01:51<01:29, 370.52it/s]Running loglikelihood requests:  41%|████      | 23073/56168 [01:51<01:29, 370.64it/s]Running loglikelihood requests:  41%|████      | 23137/56168 [01:51<01:28, 371.39it/s]Running loglikelihood requests:  41%|████▏     | 23201/56168 [01:52<01:29, 369.99it/s]Running loglikelihood requests:  41%|████▏     | 23265/56168 [01:52<01:28, 370.40it/s]Running loglikelihood requests:  42%|████▏     | 23329/56168 [01:52<01:28, 370.28it/s]Running loglikelihood requests:  42%|████▏     | 23393/56168 [01:52<01:28, 371.12it/s]Running loglikelihood requests:  42%|████▏     | 23457/56168 [01:52<01:28, 370.94it/s]Running loglikelihood requests:  42%|████▏     | 23521/56168 [01:52<01:28, 370.59it/s]Running loglikelihood requests:  42%|████▏     | 23585/56168 [01:53<01:27, 371.24it/s]Running loglikelihood requests:  42%|████▏     | 23649/56168 [01:53<01:27, 371.00it/s]Running loglikelihood requests:  42%|████▏     | 23713/56168 [01:53<01:27, 371.79it/s]Running loglikelihood requests:  42%|████▏     | 23777/56168 [01:53<01:27, 370.55it/s]Running loglikelihood requests:  42%|████▏     | 23841/56168 [01:53<01:27, 371.30it/s]Running loglikelihood requests:  43%|████▎     | 23905/56168 [01:53<01:26, 372.48it/s]Running loglikelihood requests:  43%|████▎     | 23969/56168 [01:54<01:26, 372.87it/s]Running loglikelihood requests:  43%|████▎     | 24033/56168 [01:54<01:26, 373.59it/s]Running loglikelihood requests:  43%|████▎     | 24097/56168 [01:54<01:25, 374.06it/s]Running loglikelihood requests:  43%|████▎     | 24161/56168 [01:54<01:25, 375.50it/s]Running loglikelihood requests:  43%|████▎     | 24225/56168 [01:54<01:24, 377.10it/s]Running loglikelihood requests:  43%|████▎     | 24289/56168 [01:54<01:24, 377.41it/s]Running loglikelihood requests:  43%|████▎     | 24353/56168 [01:55<01:24, 378.05it/s]Running loglikelihood requests:  43%|████▎     | 24417/56168 [01:55<01:23, 378.54it/s]Running loglikelihood requests:  44%|████▎     | 24481/56168 [01:55<01:23, 380.84it/s]Running loglikelihood requests:  44%|████▎     | 24545/56168 [01:55<01:23, 380.98it/s]Running loglikelihood requests:  44%|████▍     | 24609/56168 [01:55<01:22, 380.32it/s]Running loglikelihood requests:  44%|████▍     | 24673/56168 [01:55<01:22, 379.58it/s]Running loglikelihood requests:  44%|████▍     | 24737/56168 [01:56<01:22, 380.75it/s]Running loglikelihood requests:  44%|████▍     | 24801/56168 [01:56<01:22, 381.68it/s]Running loglikelihood requests:  44%|████▍     | 24865/56168 [01:56<01:22, 381.66it/s]Running loglikelihood requests:  44%|████▍     | 24929/56168 [01:56<01:22, 380.86it/s]Running loglikelihood requests:  44%|████▍     | 24993/56168 [01:56<01:21, 382.40it/s]Running loglikelihood requests:  45%|████▍     | 25057/56168 [01:56<01:21, 381.61it/s]Running loglikelihood requests:  45%|████▍     | 25121/56168 [01:57<01:21, 381.51it/s]Running loglikelihood requests:  45%|████▍     | 25185/56168 [01:57<01:21, 382.49it/s]Running loglikelihood requests:  45%|████▍     | 25249/56168 [01:57<01:20, 383.49it/s]Running loglikelihood requests:  45%|████▌     | 25313/56168 [01:57<01:20, 382.27it/s]Running loglikelihood requests:  45%|████▌     | 25377/56168 [01:57<01:20, 382.63it/s]Running loglikelihood requests:  45%|████▌     | 25441/56168 [01:57<01:20, 383.43it/s]Running loglikelihood requests:  45%|████▌     | 25505/56168 [01:58<01:19, 383.89it/s]Running loglikelihood requests:  46%|████▌     | 25569/56168 [01:58<01:19, 384.28it/s]Running loglikelihood requests:  46%|████▌     | 25633/56168 [01:58<01:19, 385.08it/s]Running loglikelihood requests:  46%|████▌     | 25697/56168 [01:58<01:18, 386.04it/s]Running loglikelihood requests:  46%|████▌     | 25765/56168 [01:58<01:17, 393.90it/s]Running loglikelihood requests:  46%|████▌     | 25829/56168 [01:58<01:17, 391.90it/s]Running loglikelihood requests:  46%|████▌     | 25893/56168 [01:59<01:17, 390.80it/s]Running loglikelihood requests:  46%|████▌     | 25957/56168 [01:59<01:17, 389.80it/s]Running loglikelihood requests:  46%|████▋     | 26021/56168 [01:59<01:17, 388.21it/s]Running loglikelihood requests:  46%|████▋     | 26085/56168 [01:59<01:17, 388.21it/s]Running loglikelihood requests:  47%|████▋     | 26149/56168 [01:59<01:17, 387.98it/s]Running loglikelihood requests:  47%|████▋     | 26213/56168 [01:59<01:17, 388.30it/s]Running loglikelihood requests:  47%|████▋     | 26277/56168 [02:00<01:17, 388.06it/s]Running loglikelihood requests:  47%|████▋     | 26341/56168 [02:00<01:16, 388.36it/s]Running loglikelihood requests:  47%|████▋     | 26405/56168 [02:00<01:16, 388.56it/s]Running loglikelihood requests:  47%|████▋     | 26469/56168 [02:00<01:16, 388.42it/s]Running loglikelihood requests:  47%|████▋     | 26533/56168 [02:00<01:16, 389.82it/s]Running loglikelihood requests:  47%|████▋     | 26597/56168 [02:00<01:15, 390.09it/s]Running loglikelihood requests:  47%|████▋     | 26661/56168 [02:01<01:15, 390.61it/s]Running loglikelihood requests:  48%|████▊     | 26725/56168 [02:01<01:15, 390.73it/s]Running loglikelihood requests:  48%|████▊     | 26789/56168 [02:01<01:12, 403.14it/s]Running loglikelihood requests:  48%|████▊     | 26853/56168 [02:01<01:11, 412.59it/s]Running loglikelihood requests:  48%|████▊     | 26917/56168 [02:01<01:09, 420.64it/s]Running loglikelihood requests:  48%|████▊     | 26981/56168 [02:01<01:08, 425.32it/s]Running loglikelihood requests:  48%|████▊     | 27045/56168 [02:02<01:08, 427.58it/s]Running loglikelihood requests:  48%|████▊     | 27109/56168 [02:02<01:07, 428.27it/s]Running loglikelihood requests:  48%|████▊     | 27173/56168 [02:02<01:07, 430.84it/s]Running loglikelihood requests:  48%|████▊     | 27237/56168 [02:02<01:06, 432.52it/s]Running loglikelihood requests:  49%|████▊     | 27301/56168 [02:02<01:06, 433.63it/s]Running loglikelihood requests:  49%|████▊     | 27365/56168 [02:02<01:06, 433.93it/s]Running loglikelihood requests:  49%|████▉     | 27429/56168 [02:02<01:06, 435.24it/s]Running loglikelihood requests:  49%|████▉     | 27493/56168 [02:03<01:05, 437.10it/s]Running loglikelihood requests:  49%|████▉     | 27557/56168 [02:03<01:05, 437.34it/s]Running loglikelihood requests:  49%|████▉     | 27621/56168 [02:03<01:05, 436.97it/s]Running loglikelihood requests:  49%|████▉     | 27685/56168 [02:03<01:05, 437.36it/s]Running loglikelihood requests:  49%|████▉     | 27749/56168 [02:03<01:05, 436.92it/s]Running loglikelihood requests:  50%|████▉     | 27813/56168 [02:03<01:04, 436.86it/s]Running loglikelihood requests:  50%|████▉     | 27877/56168 [02:03<01:04, 437.68it/s]Running loglikelihood requests:  50%|████▉     | 27945/56168 [02:04<01:03, 445.16it/s]Running loglikelihood requests:  50%|████▉     | 28009/56168 [02:04<01:03, 443.37it/s]Running loglikelihood requests:  50%|████▉     | 28073/56168 [02:04<01:03, 439.76it/s]Running loglikelihood requests:  50%|█████     | 28137/56168 [02:04<01:03, 439.32it/s]Running loglikelihood requests:  50%|█████     | 28201/56168 [02:04<01:03, 439.96it/s]Running loglikelihood requests:  50%|█████     | 28265/56168 [02:04<01:03, 440.16it/s]Running loglikelihood requests:  50%|█████     | 28329/56168 [02:04<01:03, 439.91it/s]Running loglikelihood requests:  51%|█████     | 28393/56168 [02:05<01:03, 439.66it/s]Running loglikelihood requests:  51%|█████     | 28457/56168 [02:05<01:02, 440.51it/s]Running loglikelihood requests:  51%|█████     | 28521/56168 [02:05<01:02, 440.75it/s]Running loglikelihood requests:  51%|█████     | 28585/56168 [02:05<01:02, 441.33it/s]Running loglikelihood requests:  51%|█████     | 28649/56168 [02:05<01:02, 441.29it/s]Running loglikelihood requests:  51%|█████     | 28713/56168 [02:05<01:02, 440.31it/s]Running loglikelihood requests:  51%|█████     | 28777/56168 [02:05<01:02, 439.45it/s]Running loglikelihood requests:  51%|█████▏    | 28841/56168 [02:06<01:01, 441.70it/s]Running loglikelihood requests:  51%|█████▏    | 28905/56168 [02:06<01:01, 441.07it/s]Running loglikelihood requests:  52%|█████▏    | 28973/56168 [02:06<01:00, 448.93it/s]Running loglikelihood requests:  52%|█████▏    | 29037/56168 [02:06<01:00, 445.37it/s]Running loglikelihood requests:  52%|█████▏    | 29101/56168 [02:06<01:00, 445.03it/s]Running loglikelihood requests:  52%|█████▏    | 29165/56168 [02:06<01:00, 444.07it/s]Running loglikelihood requests:  52%|█████▏    | 29229/56168 [02:06<01:00, 444.04it/s]Running loglikelihood requests:  52%|█████▏    | 29293/56168 [02:07<01:00, 444.14it/s]Running loglikelihood requests:  52%|█████▏    | 29357/56168 [02:07<01:00, 442.81it/s]Running loglikelihood requests:  52%|█████▏    | 29421/56168 [02:07<01:00, 441.31it/s]Running loglikelihood requests:  52%|█████▏    | 29485/56168 [02:07<01:00, 440.60it/s]Running loglikelihood requests:  53%|█████▎    | 29549/56168 [02:07<01:00, 440.96it/s]Running loglikelihood requests:  53%|█████▎    | 29613/56168 [02:07<00:59, 443.17it/s]Running loglikelihood requests:  53%|█████▎    | 29677/56168 [02:07<00:59, 443.78it/s]Running loglikelihood requests:  53%|█████▎    | 29741/56168 [02:08<00:59, 442.88it/s]Running loglikelihood requests:  53%|█████▎    | 29805/56168 [02:08<00:59, 442.60it/s]Running loglikelihood requests:  53%|█████▎    | 29869/56168 [02:08<00:59, 442.40it/s]Running loglikelihood requests:  53%|█████▎    | 29933/56168 [02:08<00:58, 449.75it/s]Running loglikelihood requests:  53%|█████▎    | 29997/56168 [02:08<00:57, 454.91it/s]Running loglikelihood requests:  54%|█████▎    | 30061/56168 [02:08<00:56, 458.46it/s]Running loglikelihood requests:  54%|█████▎    | 30125/56168 [02:08<00:56, 462.74it/s]Running loglikelihood requests:  54%|█████▎    | 30189/56168 [02:09<00:55, 465.47it/s]Running loglikelihood requests:  54%|█████▍    | 30253/56168 [02:09<00:55, 465.35it/s]Running loglikelihood requests:  54%|█████▍    | 30317/56168 [02:09<00:55, 465.82it/s]Running loglikelihood requests:  54%|█████▍    | 30381/56168 [02:09<00:55, 465.92it/s]Running loglikelihood requests:  54%|█████▍    | 30445/56168 [02:09<00:55, 467.38it/s]Running loglikelihood requests:  54%|█████▍    | 30509/56168 [02:09<00:54, 467.96it/s]Running loglikelihood requests:  54%|█████▍    | 30573/56168 [02:09<00:54, 468.06it/s]Running loglikelihood requests:  55%|█████▍    | 30637/56168 [02:10<00:54, 468.88it/s]Running loglikelihood requests:  55%|█████▍    | 30701/56168 [02:10<00:54, 469.79it/s]Running loglikelihood requests:  55%|█████▍    | 30765/56168 [02:10<00:54, 469.98it/s]Running loglikelihood requests:  55%|█████▍    | 30829/56168 [02:10<00:53, 470.46it/s]Running loglikelihood requests:  55%|█████▌    | 30893/56168 [02:10<00:53, 471.00it/s]Running loglikelihood requests:  55%|█████▌    | 30957/56168 [02:10<00:53, 471.51it/s]Running loglikelihood requests:  55%|█████▌    | 31021/56168 [02:10<00:53, 470.84it/s]Running loglikelihood requests:  55%|█████▌    | 31085/56168 [02:11<00:53, 471.40it/s]Running loglikelihood requests:  55%|█████▌    | 31149/56168 [02:11<00:53, 471.35it/s]Running loglikelihood requests:  56%|█████▌    | 31213/56168 [02:11<00:52, 471.99it/s]Running loglikelihood requests:  56%|█████▌    | 31277/56168 [02:11<00:52, 472.49it/s]Running loglikelihood requests:  56%|█████▌    | 31341/56168 [02:11<00:52, 474.34it/s]Running loglikelihood requests:  56%|█████▌    | 31405/56168 [02:11<00:52, 475.06it/s]Running loglikelihood requests:  56%|█████▌    | 31469/56168 [02:11<00:52, 474.44it/s]Running loglikelihood requests:  56%|█████▌    | 31533/56168 [02:11<00:51, 475.20it/s]Running loglikelihood requests:  56%|█████▋    | 31597/56168 [02:12<00:51, 474.71it/s]Running loglikelihood requests:  56%|█████▋    | 31661/56168 [02:12<00:51, 474.57it/s]Running loglikelihood requests:  56%|█████▋    | 31725/56168 [02:12<00:51, 475.28it/s]Running loglikelihood requests:  57%|█████▋    | 31789/56168 [02:12<00:51, 474.95it/s]Running loglikelihood requests:  57%|█████▋    | 31853/56168 [02:12<00:51, 475.28it/s]Running loglikelihood requests:  57%|█████▋    | 31917/56168 [02:12<00:50, 476.98it/s]Running loglikelihood requests:  57%|█████▋    | 31981/56168 [02:12<00:50, 475.98it/s]Running loglikelihood requests:  57%|█████▋    | 32045/56168 [02:13<00:50, 476.49it/s]Running loglikelihood requests:  57%|█████▋    | 32109/56168 [02:13<00:50, 476.73it/s]Running loglikelihood requests:  57%|█████▋    | 32177/56168 [02:13<00:49, 484.55it/s]Running loglikelihood requests:  57%|█████▋    | 32241/56168 [02:13<00:49, 482.64it/s]Running loglikelihood requests:  58%|█████▊    | 32305/56168 [02:13<00:49, 481.43it/s]Running loglikelihood requests:  58%|█████▊    | 32369/56168 [02:13<00:49, 480.28it/s]Running loglikelihood requests:  58%|█████▊    | 32433/56168 [02:13<00:49, 480.77it/s]Running loglikelihood requests:  58%|█████▊    | 32497/56168 [02:13<00:49, 480.08it/s]Running loglikelihood requests:  58%|█████▊    | 32561/56168 [02:14<00:49, 480.57it/s]Running loglikelihood requests:  58%|█████▊    | 32625/56168 [02:14<00:48, 480.57it/s]Running loglikelihood requests:  58%|█████▊    | 32689/56168 [02:14<00:49, 479.08it/s]Running loglikelihood requests:  58%|█████▊    | 32757/56168 [02:14<00:47, 488.28it/s]Running loglikelihood requests:  58%|█████▊    | 32821/56168 [02:14<00:48, 485.87it/s]Running loglikelihood requests:  59%|█████▊    | 32885/56168 [02:14<00:48, 484.73it/s]Running loglikelihood requests:  59%|█████▊    | 32953/56168 [02:14<00:47, 493.25it/s]Running loglikelihood requests:  59%|█████▉    | 33017/56168 [02:15<00:47, 489.33it/s]Running loglikelihood requests:  59%|█████▉    | 33081/56168 [02:15<00:47, 486.99it/s]Running loglikelihood requests:  59%|█████▉    | 33145/56168 [02:15<00:47, 486.02it/s]Running loglikelihood requests:  59%|█████▉    | 33209/56168 [02:15<00:47, 484.98it/s]Running loglikelihood requests:  59%|█████▉    | 33273/56168 [02:15<00:47, 484.11it/s]Running loglikelihood requests:  59%|█████▉    | 33337/56168 [02:15<00:47, 483.84it/s]Running loglikelihood requests:  59%|█████▉    | 33401/56168 [02:15<00:47, 484.36it/s]Running loglikelihood requests:  60%|█████▉    | 33465/56168 [02:15<00:46, 483.24it/s]Running loglikelihood requests:  60%|█████▉    | 33529/56168 [02:16<00:46, 483.82it/s]Running loglikelihood requests:  60%|█████▉    | 33593/56168 [02:16<00:46, 482.20it/s]Running loglikelihood requests:  60%|█████▉    | 33657/56168 [02:16<00:46, 483.42it/s]Running loglikelihood requests:  60%|██████    | 33721/56168 [02:16<00:46, 483.08it/s]Running loglikelihood requests:  60%|██████    | 33785/56168 [02:16<00:46, 485.62it/s]Running loglikelihood requests:  60%|██████    | 33849/56168 [02:16<00:45, 487.77it/s]Running loglikelihood requests:  60%|██████    | 33913/56168 [02:16<00:45, 490.09it/s]Running loglikelihood requests:  60%|██████    | 33977/56168 [02:17<00:45, 490.22it/s]Running loglikelihood requests:  61%|██████    | 34041/56168 [02:17<00:45, 490.84it/s]Running loglikelihood requests:  61%|██████    | 34109/56168 [02:17<00:44, 498.89it/s]Running loglikelihood requests:  61%|██████    | 34173/56168 [02:17<00:44, 497.16it/s]Running loglikelihood requests:  61%|██████    | 34237/56168 [02:17<00:44, 495.20it/s]Running loglikelihood requests:  61%|██████    | 34301/56168 [02:17<00:44, 494.64it/s]Running loglikelihood requests:  61%|██████    | 34365/56168 [02:17<00:43, 496.14it/s]Running loglikelihood requests:  61%|██████▏   | 34429/56168 [02:17<00:43, 495.58it/s]Running loglikelihood requests:  61%|██████▏   | 34493/56168 [02:18<00:43, 495.99it/s]Running loglikelihood requests:  62%|██████▏   | 34557/56168 [02:18<00:43, 495.26it/s]Running loglikelihood requests:  62%|██████▏   | 34621/56168 [02:18<00:43, 495.10it/s]Running loglikelihood requests:  62%|██████▏   | 34685/56168 [02:18<00:43, 495.12it/s]Running loglikelihood requests:  62%|██████▏   | 34749/56168 [02:18<00:43, 493.70it/s]Running loglikelihood requests:  62%|██████▏   | 34813/56168 [02:18<00:43, 494.12it/s]Running loglikelihood requests:  62%|██████▏   | 34877/56168 [02:18<00:43, 494.09it/s]Running loglikelihood requests:  62%|██████▏   | 34941/56168 [02:18<00:42, 494.62it/s]Running loglikelihood requests:  62%|██████▏   | 35005/56168 [02:19<00:42, 495.55it/s]Running loglikelihood requests:  62%|██████▏   | 35069/56168 [02:19<00:42, 496.02it/s]Running loglikelihood requests:  63%|██████▎   | 35133/56168 [02:19<00:42, 496.46it/s]Running loglikelihood requests:  63%|██████▎   | 35197/56168 [02:19<00:42, 496.26it/s]Running loglikelihood requests:  63%|██████▎   | 35261/56168 [02:19<00:42, 495.06it/s]Running loglikelihood requests:  63%|██████▎   | 35325/56168 [02:19<00:41, 496.91it/s]Running loglikelihood requests:  63%|██████▎   | 35389/56168 [02:19<00:41, 497.03it/s]Running loglikelihood requests:  63%|██████▎   | 35453/56168 [02:19<00:41, 497.50it/s]Running loglikelihood requests:  63%|██████▎   | 35517/56168 [02:20<00:41, 499.21it/s]Running loglikelihood requests:  63%|██████▎   | 35581/56168 [02:20<00:41, 498.69it/s]Running loglikelihood requests:  63%|██████▎   | 35645/56168 [02:20<00:41, 498.64it/s]Running loglikelihood requests:  64%|██████▎   | 35709/56168 [02:20<00:41, 498.55it/s]Running loglikelihood requests:  64%|██████▎   | 35773/56168 [02:20<00:40, 499.17it/s]Running loglikelihood requests:  64%|██████▍   | 35837/56168 [02:20<00:40, 498.92it/s]Running loglikelihood requests:  64%|██████▍   | 35901/56168 [02:20<00:40, 499.54it/s]Running loglikelihood requests:  64%|██████▍   | 35965/56168 [02:21<00:40, 499.77it/s]Running loglikelihood requests:  64%|██████▍   | 36029/56168 [02:21<00:40, 499.71it/s]Running loglikelihood requests:  64%|██████▍   | 36093/56168 [02:21<00:40, 500.38it/s]Running loglikelihood requests:  64%|██████▍   | 36157/56168 [02:21<00:39, 501.68it/s]Running loglikelihood requests:  64%|██████▍   | 36221/56168 [02:21<00:39, 502.63it/s]Running loglikelihood requests:  65%|██████▍   | 36285/56168 [02:21<00:39, 502.44it/s]Running loglikelihood requests:  65%|██████▍   | 36349/56168 [02:21<00:39, 501.16it/s]Running loglikelihood requests:  65%|██████▍   | 36413/56168 [02:21<00:39, 500.77it/s]Running loglikelihood requests:  65%|██████▍   | 36477/56168 [02:22<00:39, 501.91it/s]Running loglikelihood requests:  65%|██████▌   | 36541/56168 [02:22<00:39, 500.25it/s]Running loglikelihood requests:  65%|██████▌   | 36605/56168 [02:22<00:39, 501.14it/s]Running loglikelihood requests:  65%|██████▌   | 36669/56168 [02:22<00:38, 502.62it/s]Running loglikelihood requests:  65%|██████▌   | 36733/56168 [02:22<00:38, 502.79it/s]Running loglikelihood requests:  66%|██████▌   | 36797/56168 [02:22<00:38, 501.72it/s]Running loglikelihood requests:  66%|██████▌   | 36861/56168 [02:22<00:38, 501.78it/s]Running loglikelihood requests:  66%|██████▌   | 36925/56168 [02:22<00:38, 502.27it/s]Running loglikelihood requests:  66%|██████▌   | 36989/56168 [02:23<00:38, 501.29it/s]Running loglikelihood requests:  66%|██████▌   | 37053/56168 [02:23<00:38, 502.29it/s]Running loglikelihood requests:  66%|██████▌   | 37117/56168 [02:23<00:37, 501.51it/s]Running loglikelihood requests:  66%|██████▌   | 37189/56168 [02:23<00:36, 518.39it/s]Running loglikelihood requests:  66%|██████▋   | 37253/56168 [02:23<00:36, 514.03it/s]Running loglikelihood requests:  66%|██████▋   | 37317/56168 [02:23<00:36, 511.34it/s]Running loglikelihood requests:  67%|██████▋   | 37381/56168 [02:23<00:37, 507.42it/s]Running loglikelihood requests:  67%|██████▋   | 37445/56168 [02:23<00:36, 506.58it/s]Running loglikelihood requests:  67%|██████▋   | 37509/56168 [02:24<00:36, 505.97it/s]Running loglikelihood requests:  67%|██████▋   | 37573/56168 [02:24<00:36, 504.19it/s]Running loglikelihood requests:  67%|██████▋   | 37637/56168 [02:24<00:36, 503.79it/s]Running loglikelihood requests:  67%|██████▋   | 37701/56168 [02:24<00:36, 504.70it/s]Running loglikelihood requests:  67%|██████▋   | 37765/56168 [02:24<00:36, 504.10it/s]Running loglikelihood requests:  67%|██████▋   | 37829/56168 [02:24<00:36, 501.80it/s]Running loglikelihood requests:  67%|██████▋   | 37893/56168 [02:24<00:36, 501.24it/s]Running loglikelihood requests:  68%|██████▊   | 37957/56168 [02:24<00:36, 501.50it/s]Running loglikelihood requests:  68%|██████▊   | 38021/56168 [02:25<00:36, 500.71it/s]Running loglikelihood requests:  68%|██████▊   | 38085/56168 [02:25<00:36, 500.69it/s]Running loglikelihood requests:  68%|██████▊   | 38149/56168 [02:25<00:35, 501.15it/s]Running loglikelihood requests:  68%|██████▊   | 38213/56168 [02:25<00:35, 512.18it/s]Running loglikelihood requests:  68%|██████▊   | 38277/56168 [02:25<00:34, 520.90it/s]Running loglikelihood requests:  68%|██████▊   | 38341/56168 [02:25<00:33, 527.29it/s]Running loglikelihood requests:  68%|██████▊   | 38405/56168 [02:25<00:33, 531.33it/s]Running loglikelihood requests:  68%|██████▊   | 38469/56168 [02:25<00:33, 534.29it/s]Running loglikelihood requests:  69%|██████▊   | 38533/56168 [02:26<00:32, 536.36it/s]Running loglikelihood requests:  69%|██████▊   | 38597/56168 [02:26<00:32, 537.47it/s]Running loglikelihood requests:  69%|██████▉   | 38661/56168 [02:26<00:32, 536.14it/s]Running loglikelihood requests:  69%|██████▉   | 38725/56168 [02:26<00:32, 535.84it/s]Running loglikelihood requests:  69%|██████▉   | 38789/56168 [02:26<00:32, 537.75it/s]Running loglikelihood requests:  69%|██████▉   | 38853/56168 [02:26<00:31, 541.30it/s]Running loglikelihood requests:  69%|██████▉   | 38917/56168 [02:26<00:31, 542.97it/s]Running loglikelihood requests:  69%|██████▉   | 38981/56168 [02:26<00:31, 544.31it/s]Running loglikelihood requests:  70%|██████▉   | 39045/56168 [02:26<00:31, 544.01it/s]Running loglikelihood requests:  70%|██████▉   | 39109/56168 [02:27<00:31, 543.50it/s]Running loglikelihood requests:  70%|██████▉   | 39173/56168 [02:27<00:31, 544.33it/s]Running loglikelihood requests:  70%|██████▉   | 39237/56168 [02:27<00:31, 544.30it/s]Running loglikelihood requests:  70%|██████▉   | 39301/56168 [02:27<00:30, 545.31it/s]Running loglikelihood requests:  70%|███████   | 39365/56168 [02:27<00:30, 542.55it/s]Running loglikelihood requests:  70%|███████   | 39429/56168 [02:27<00:30, 540.00it/s]Running loglikelihood requests:  70%|███████   | 39493/56168 [02:27<00:30, 541.35it/s]Running loglikelihood requests:  70%|███████   | 39557/56168 [02:27<00:30, 544.21it/s]Running loglikelihood requests:  71%|███████   | 39621/56168 [02:28<00:30, 545.26it/s]Running loglikelihood requests:  71%|███████   | 39685/56168 [02:28<00:30, 545.40it/s]Running loglikelihood requests:  71%|███████   | 39749/56168 [02:28<00:30, 544.16it/s]Running loglikelihood requests:  71%|███████   | 39813/56168 [02:28<00:30, 543.00it/s]Running loglikelihood requests:  71%|███████   | 39877/56168 [02:28<00:30, 542.60it/s]Running loglikelihood requests:  71%|███████   | 39941/56168 [02:28<00:29, 542.21it/s]Running loglikelihood requests:  71%|███████   | 40005/56168 [02:28<00:29, 542.79it/s]Running loglikelihood requests:  71%|███████▏  | 40069/56168 [02:28<00:29, 543.47it/s]Running loglikelihood requests:  71%|███████▏  | 40133/56168 [02:28<00:29, 544.31it/s]Running loglikelihood requests:  72%|███████▏  | 40201/56168 [02:29<00:28, 555.59it/s]Running loglikelihood requests:  72%|███████▏  | 40265/56168 [02:29<00:28, 554.11it/s]Running loglikelihood requests:  72%|███████▏  | 40329/56168 [02:29<00:28, 551.34it/s]Running loglikelihood requests:  72%|███████▏  | 40393/56168 [02:29<00:28, 550.23it/s]Running loglikelihood requests:  72%|███████▏  | 40457/56168 [02:29<00:28, 548.26it/s]Running loglikelihood requests:  72%|███████▏  | 40525/56168 [02:29<00:28, 558.23it/s]Running loglikelihood requests:  72%|███████▏  | 40589/56168 [02:29<00:28, 556.07it/s]Running loglikelihood requests:  72%|███████▏  | 40653/56168 [02:29<00:27, 554.61it/s]Running loglikelihood requests:  72%|███████▏  | 40717/56168 [02:30<00:27, 552.10it/s]Running loglikelihood requests:  73%|███████▎  | 40781/56168 [02:30<00:27, 550.37it/s]Running loglikelihood requests:  73%|███████▎  | 40845/56168 [02:30<00:27, 549.56it/s]Running loglikelihood requests:  73%|███████▎  | 40909/56168 [02:30<00:27, 548.40it/s]Running loglikelihood requests:  73%|███████▎  | 40973/56168 [02:30<00:27, 547.30it/s]Running loglikelihood requests:  73%|███████▎  | 41037/56168 [02:30<00:27, 545.69it/s]Running loglikelihood requests:  73%|███████▎  | 41101/56168 [02:30<00:27, 545.85it/s]Running loglikelihood requests:  73%|███████▎  | 41165/56168 [02:30<00:27, 547.01it/s]Running loglikelihood requests:  73%|███████▎  | 41229/56168 [02:30<00:27, 545.52it/s]Running loglikelihood requests:  74%|███████▎  | 41293/56168 [02:31<00:27, 546.85it/s]Running loglikelihood requests:  74%|███████▎  | 41357/56168 [02:31<00:27, 548.00it/s]Running loglikelihood requests:  74%|███████▎  | 41421/56168 [02:31<00:26, 549.76it/s]Running loglikelihood requests:  74%|███████▍  | 41485/56168 [02:31<00:26, 549.84it/s]Running loglikelihood requests:  74%|███████▍  | 41549/56168 [02:31<00:26, 549.76it/s]Running loglikelihood requests:  74%|███████▍  | 41613/56168 [02:31<00:26, 549.09it/s]Running loglikelihood requests:  74%|███████▍  | 41677/56168 [02:31<00:26, 549.58it/s]Running loglikelihood requests:  74%|███████▍  | 41741/56168 [02:31<00:26, 550.12it/s]Running loglikelihood requests:  74%|███████▍  | 41805/56168 [02:32<00:26, 549.20it/s]Running loglikelihood requests:  75%|███████▍  | 41869/56168 [02:32<00:26, 548.52it/s]Running loglikelihood requests:  75%|███████▍  | 41933/56168 [02:32<00:25, 551.57it/s]Running loglikelihood requests:  75%|███████▍  | 41997/56168 [02:32<00:25, 551.77it/s]Running loglikelihood requests:  75%|███████▍  | 42061/56168 [02:32<00:25, 550.57it/s]Running loglikelihood requests:  75%|███████▍  | 42125/56168 [02:32<00:25, 551.60it/s]Running loglikelihood requests:  75%|███████▌  | 42189/56168 [02:32<00:25, 553.89it/s]Running loglikelihood requests:  75%|███████▌  | 42253/56168 [02:32<00:25, 555.48it/s]Running loglikelihood requests:  75%|███████▌  | 42317/56168 [02:32<00:24, 554.58it/s]Running loglikelihood requests:  75%|███████▌  | 42381/56168 [02:33<00:24, 555.21it/s]Running loglikelihood requests:  76%|███████▌  | 42445/56168 [02:33<00:24, 554.87it/s]Running loglikelihood requests:  76%|███████▌  | 42509/56168 [02:33<00:24, 552.51it/s]Running loglikelihood requests:  76%|███████▌  | 42573/56168 [02:33<00:24, 552.81it/s]Running loglikelihood requests:  76%|███████▌  | 42637/56168 [02:33<00:24, 554.26it/s]Running loglikelihood requests:  76%|███████▌  | 42701/56168 [02:33<00:24, 554.58it/s]Running loglikelihood requests:  76%|███████▌  | 42765/56168 [02:33<00:24, 553.93it/s]Running loglikelihood requests:  76%|███████▋  | 42829/56168 [02:33<00:24, 554.15it/s]Running loglikelihood requests:  76%|███████▋  | 42893/56168 [02:33<00:24, 552.88it/s]Running loglikelihood requests:  76%|███████▋  | 42957/56168 [02:34<00:23, 552.98it/s]Running loglikelihood requests:  77%|███████▋  | 43021/56168 [02:34<00:23, 553.72it/s]Running loglikelihood requests:  77%|███████▋  | 43085/56168 [02:34<00:23, 554.44it/s]Running loglikelihood requests:  77%|███████▋  | 43149/56168 [02:34<00:23, 559.26it/s]Running loglikelihood requests:  77%|███████▋  | 43213/56168 [02:34<00:23, 562.83it/s]Running loglikelihood requests:  77%|███████▋  | 43277/56168 [02:34<00:22, 565.35it/s]Running loglikelihood requests:  77%|███████▋  | 43345/56168 [02:34<00:22, 575.88it/s]Running loglikelihood requests:  77%|███████▋  | 43409/56168 [02:34<00:22, 574.77it/s]Running loglikelihood requests:  77%|███████▋  | 43473/56168 [02:35<00:22, 572.70it/s]Running loglikelihood requests:  78%|███████▊  | 43537/56168 [02:35<00:22, 573.31it/s]Running loglikelihood requests:  78%|███████▊  | 43601/56168 [02:35<00:21, 571.33it/s]Running loglikelihood requests:  78%|███████▊  | 43665/56168 [02:35<00:21, 572.53it/s]Running loglikelihood requests:  78%|███████▊  | 43729/56168 [02:35<00:21, 571.29it/s]Running loglikelihood requests:  78%|███████▊  | 43793/56168 [02:35<00:21, 572.24it/s]Running loglikelihood requests:  78%|███████▊  | 43857/56168 [02:35<00:21, 570.95it/s]Running loglikelihood requests:  78%|███████▊  | 43921/56168 [02:35<00:21, 571.53it/s]Running loglikelihood requests:  78%|███████▊  | 43985/56168 [02:35<00:21, 571.49it/s]Running loglikelihood requests:  78%|███████▊  | 44049/56168 [02:36<00:21, 571.85it/s]Running loglikelihood requests:  79%|███████▊  | 44121/56168 [02:36<00:20, 591.18it/s]Running loglikelihood requests:  79%|███████▊  | 44185/56168 [02:36<00:20, 584.60it/s]Running loglikelihood requests:  79%|███████▉  | 44249/56168 [02:36<00:20, 582.66it/s]Running loglikelihood requests:  79%|███████▉  | 44313/56168 [02:36<00:20, 579.73it/s]Running loglikelihood requests:  79%|███████▉  | 44377/56168 [02:36<00:20, 578.73it/s]Running loglikelihood requests:  79%|███████▉  | 44441/56168 [02:36<00:20, 576.40it/s]Running loglikelihood requests:  79%|███████▉  | 44505/56168 [02:36<00:20, 573.74it/s]Running loglikelihood requests:  79%|███████▉  | 44569/56168 [02:36<00:20, 570.61it/s]Running loglikelihood requests:  79%|███████▉  | 44633/56168 [02:37<00:20, 569.27it/s]Running loglikelihood requests:  80%|███████▉  | 44697/56168 [02:37<00:20, 571.35it/s]Running loglikelihood requests:  80%|███████▉  | 44761/56168 [02:37<00:19, 571.97it/s]Running loglikelihood requests:  80%|███████▉  | 44825/56168 [02:37<00:19, 573.45it/s]Running loglikelihood requests:  80%|███████▉  | 44889/56168 [02:37<00:19, 573.64it/s]Running loglikelihood requests:  80%|████████  | 44953/56168 [02:37<00:19, 575.74it/s]Running loglikelihood requests:  80%|████████  | 45017/56168 [02:37<00:19, 575.77it/s]Running loglikelihood requests:  80%|████████  | 45081/56168 [02:37<00:19, 575.86it/s]Running loglikelihood requests:  80%|████████  | 45145/56168 [02:37<00:19, 575.26it/s]Running loglikelihood requests:  80%|████████  | 45209/56168 [02:38<00:19, 575.23it/s]Running loglikelihood requests:  81%|████████  | 45273/56168 [02:38<00:18, 574.22it/s]Running loglikelihood requests:  81%|████████  | 45337/56168 [02:38<00:18, 575.53it/s]Running loglikelihood requests:  81%|████████  | 45401/56168 [02:38<00:18, 576.14it/s]Running loglikelihood requests:  81%|████████  | 45465/56168 [02:38<00:18, 576.46it/s]Running loglikelihood requests:  81%|████████  | 45529/56168 [02:38<00:18, 576.71it/s]Running loglikelihood requests:  81%|████████  | 45593/56168 [02:38<00:18, 578.05it/s]Running loglikelihood requests:  81%|████████▏ | 45657/56168 [02:38<00:18, 579.01it/s]Running loglikelihood requests:  81%|████████▏ | 45721/56168 [02:38<00:18, 578.83it/s]Running loglikelihood requests:  82%|████████▏ | 45785/56168 [02:39<00:17, 580.01it/s]Running loglikelihood requests:  82%|████████▏ | 45849/56168 [02:39<00:17, 579.14it/s]Running loglikelihood requests:  82%|████████▏ | 45913/56168 [02:39<00:17, 580.08it/s]Running loglikelihood requests:  82%|████████▏ | 45977/56168 [02:39<00:17, 579.12it/s]Running loglikelihood requests:  82%|████████▏ | 46041/56168 [02:39<00:17, 579.99it/s]Running loglikelihood requests:  82%|████████▏ | 46105/56168 [02:39<00:17, 578.63it/s]Running loglikelihood requests:  82%|████████▏ | 46169/56168 [02:39<00:17, 580.76it/s]Running loglikelihood requests:  82%|████████▏ | 46233/56168 [02:39<00:17, 580.24it/s]Running loglikelihood requests:  82%|████████▏ | 46297/56168 [02:39<00:17, 580.29it/s]Running loglikelihood requests:  83%|████████▎ | 46361/56168 [02:40<00:16, 580.51it/s]Running loglikelihood requests:  83%|████████▎ | 46425/56168 [02:40<00:16, 580.97it/s]Running loglikelihood requests:  83%|████████▎ | 46489/56168 [02:40<00:16, 581.08it/s]Running loglikelihood requests:  83%|████████▎ | 46553/56168 [02:40<00:16, 579.91it/s]Running loglikelihood requests:  83%|████████▎ | 46617/56168 [02:40<00:16, 580.59it/s]Running loglikelihood requests:  83%|████████▎ | 46681/56168 [02:40<00:16, 580.10it/s]Running loglikelihood requests:  83%|████████▎ | 46745/56168 [02:40<00:16, 581.80it/s]Running loglikelihood requests:  83%|████████▎ | 46809/56168 [02:40<00:16, 580.01it/s]Running loglikelihood requests:  83%|████████▎ | 46873/56168 [02:40<00:15, 581.78it/s]Running loglikelihood requests:  84%|████████▎ | 46937/56168 [02:41<00:15, 582.15it/s]Running loglikelihood requests:  84%|████████▎ | 47001/56168 [02:41<00:15, 583.17it/s]Running loglikelihood requests:  84%|████████▍ | 47065/56168 [02:41<00:15, 584.02it/s]Running loglikelihood requests:  84%|████████▍ | 47129/56168 [02:41<00:15, 582.75it/s]Running loglikelihood requests:  84%|████████▍ | 47193/56168 [02:41<00:15, 583.79it/s]Running loglikelihood requests:  84%|████████▍ | 47257/56168 [02:41<00:15, 582.66it/s]Running loglikelihood requests:  84%|████████▍ | 47321/56168 [02:41<00:15, 584.28it/s]Running loglikelihood requests:  84%|████████▍ | 47385/56168 [02:41<00:15, 584.77it/s]Running loglikelihood requests:  84%|████████▍ | 47449/56168 [02:41<00:14, 585.04it/s]Running loglikelihood requests:  85%|████████▍ | 47513/56168 [02:41<00:14, 586.31it/s]Running loglikelihood requests:  85%|████████▍ | 47577/56168 [02:42<00:14, 585.77it/s]Running loglikelihood requests:  85%|████████▍ | 47641/56168 [02:42<00:14, 587.17it/s]Running loglikelihood requests:  85%|████████▍ | 47705/56168 [02:42<00:14, 586.07it/s]Running loglikelihood requests:  85%|████████▌ | 47773/56168 [02:42<00:14, 596.67it/s]Running loglikelihood requests:  85%|████████▌ | 47837/56168 [02:42<00:14, 594.81it/s]Running loglikelihood requests:  85%|████████▌ | 47901/56168 [02:42<00:13, 591.28it/s]Running loglikelihood requests:  85%|████████▌ | 47965/56168 [02:42<00:13, 590.02it/s]Running loglikelihood requests:  86%|████████▌ | 48029/56168 [02:42<00:13, 588.76it/s]Running loglikelihood requests:  86%|████████▌ | 48093/56168 [02:42<00:13, 588.91it/s]Running loglikelihood requests:  86%|████████▌ | 48157/56168 [02:43<00:13, 590.10it/s]Running loglikelihood requests:  86%|████████▌ | 48225/56168 [02:43<00:13, 599.00it/s]Running loglikelihood requests:  86%|████████▌ | 48289/56168 [02:43<00:13, 597.32it/s]Running loglikelihood requests:  86%|████████▌ | 48353/56168 [02:43<00:13, 594.16it/s]Running loglikelihood requests:  86%|████████▌ | 48417/56168 [02:43<00:13, 591.94it/s]Running loglikelihood requests:  86%|████████▋ | 48481/56168 [02:43<00:12, 591.48it/s]Running loglikelihood requests:  86%|████████▋ | 48545/56168 [02:43<00:12, 589.82it/s]Running loglikelihood requests:  87%|████████▋ | 48609/56168 [02:43<00:12, 590.07it/s]Running loglikelihood requests:  87%|████████▋ | 48673/56168 [02:43<00:12, 589.43it/s]Running loglikelihood requests:  87%|████████▋ | 48737/56168 [02:44<00:12, 593.43it/s]Running loglikelihood requests:  87%|████████▋ | 48805/56168 [02:44<00:12, 607.99it/s]Running loglikelihood requests:  87%|████████▋ | 48869/56168 [02:44<00:12, 608.23it/s]Running loglikelihood requests:  87%|████████▋ | 48933/56168 [02:44<00:11, 606.48it/s]Running loglikelihood requests:  87%|████████▋ | 48997/56168 [02:44<00:11, 606.68it/s]Running loglikelihood requests:  87%|████████▋ | 49061/56168 [02:44<00:11, 606.49it/s]Running loglikelihood requests:  87%|████████▋ | 49125/56168 [02:44<00:11, 607.51it/s]Running loglikelihood requests:  88%|████████▊ | 49189/56168 [02:44<00:11, 607.31it/s]Running loglikelihood requests:  88%|████████▊ | 49253/56168 [02:44<00:11, 606.46it/s]Running loglikelihood requests:  88%|████████▊ | 49317/56168 [02:45<00:11, 606.21it/s]Running loglikelihood requests:  88%|████████▊ | 49381/56168 [02:45<00:11, 605.27it/s]Running loglikelihood requests:  88%|████████▊ | 49445/56168 [02:45<00:11, 606.72it/s]Running loglikelihood requests:  88%|████████▊ | 49509/56168 [02:45<00:10, 606.56it/s]Running loglikelihood requests:  88%|████████▊ | 49573/56168 [02:45<00:10, 606.95it/s]Running loglikelihood requests:  88%|████████▊ | 49637/56168 [02:45<00:10, 607.58it/s]Running loglikelihood requests:  88%|████████▊ | 49701/56168 [02:45<00:10, 608.49it/s]Running loglikelihood requests:  89%|████████▊ | 49765/56168 [02:45<00:10, 609.49it/s]Running loglikelihood requests:  89%|████████▊ | 49829/56168 [02:45<00:10, 609.66it/s]Running loglikelihood requests:  89%|████████▉ | 49893/56168 [02:45<00:10, 609.14it/s]Running loglikelihood requests:  89%|████████▉ | 49957/56168 [02:46<00:10, 609.43it/s]Running loglikelihood requests:  89%|████████▉ | 50021/56168 [02:46<00:10, 609.56it/s]Running loglikelihood requests:  89%|████████▉ | 50085/56168 [02:46<00:09, 611.91it/s]Running loglikelihood requests:  89%|████████▉ | 50153/56168 [02:46<00:09, 622.29it/s]Running loglikelihood requests:  89%|████████▉ | 50217/56168 [02:46<00:09, 618.46it/s]Running loglikelihood requests:  90%|████████▉ | 50281/56168 [02:46<00:09, 616.81it/s]Running loglikelihood requests:  90%|████████▉ | 50345/56168 [02:46<00:09, 615.23it/s]Running loglikelihood requests:  90%|████████▉ | 50409/56168 [02:46<00:09, 614.48it/s]Running loglikelihood requests:  90%|████████▉ | 50473/56168 [02:46<00:09, 615.05it/s]Running loglikelihood requests:  90%|████████▉ | 50537/56168 [02:47<00:09, 613.97it/s]Running loglikelihood requests:  90%|█████████ | 50601/56168 [02:47<00:09, 613.81it/s]Running loglikelihood requests:  90%|█████████ | 50665/56168 [02:47<00:08, 614.07it/s]Running loglikelihood requests:  90%|█████████ | 50729/56168 [02:47<00:08, 614.94it/s]Running loglikelihood requests:  90%|█████████ | 50793/56168 [02:47<00:08, 615.38it/s]Running loglikelihood requests:  91%|█████████ | 50857/56168 [02:47<00:08, 615.56it/s]Running loglikelihood requests:  91%|█████████ | 50921/56168 [02:47<00:08, 615.77it/s]Running loglikelihood requests:  91%|█████████ | 50985/56168 [02:47<00:08, 615.29it/s]Running loglikelihood requests:  91%|█████████ | 51049/56168 [02:47<00:08, 615.33it/s]Running loglikelihood requests:  91%|█████████ | 51113/56168 [02:47<00:08, 615.93it/s]Running loglikelihood requests:  91%|█████████ | 51177/56168 [02:48<00:08, 616.48it/s]Running loglikelihood requests:  91%|█████████ | 51241/56168 [02:48<00:07, 616.54it/s]Running loglikelihood requests:  91%|█████████▏| 51305/56168 [02:48<00:07, 612.80it/s]Running loglikelihood requests:  91%|█████████▏| 51369/56168 [02:48<00:07, 612.46it/s]Running loglikelihood requests:  92%|█████████▏| 51433/56168 [02:48<00:07, 614.22it/s]Running loglikelihood requests:  92%|█████████▏| 51497/56168 [02:48<00:07, 614.99it/s]Running loglikelihood requests:  92%|█████████▏| 51561/56168 [02:48<00:07, 616.17it/s]Running loglikelihood requests:  92%|█████████▏| 51625/56168 [02:48<00:07, 617.52it/s]Running loglikelihood requests:  92%|█████████▏| 51689/56168 [02:48<00:07, 618.19it/s]Running loglikelihood requests:  92%|█████████▏| 51753/56168 [02:48<00:07, 618.63it/s]Running loglikelihood requests:  92%|█████████▏| 51817/56168 [02:49<00:07, 618.67it/s]Running loglikelihood requests:  92%|█████████▏| 51881/56168 [02:49<00:06, 618.03it/s]Running loglikelihood requests:  92%|█████████▏| 51945/56168 [02:49<00:06, 617.13it/s]Running loglikelihood requests:  93%|█████████▎| 52009/56168 [02:49<00:06, 617.92it/s]Running loglikelihood requests:  93%|█████████▎| 52077/56168 [02:49<00:06, 629.80it/s]Running loglikelihood requests:  93%|█████████▎| 52141/56168 [02:49<00:06, 627.43it/s]Running loglikelihood requests:  93%|█████████▎| 52205/56168 [02:49<00:06, 626.61it/s]Running loglikelihood requests:  93%|█████████▎| 52269/56168 [02:49<00:06, 625.77it/s]Running loglikelihood requests:  93%|█████████▎| 52333/56168 [02:49<00:06, 625.16it/s]Running loglikelihood requests:  93%|█████████▎| 52397/56168 [02:50<00:06, 624.41it/s]Running loglikelihood requests:  93%|█████████▎| 52461/56168 [02:50<00:05, 622.95it/s]Running loglikelihood requests:  94%|█████████▎| 52525/56168 [02:50<00:05, 621.56it/s]Running loglikelihood requests:  94%|█████████▎| 52589/56168 [02:50<00:05, 622.61it/s]Running loglikelihood requests:  94%|█████████▎| 52653/56168 [02:50<00:05, 624.54it/s]Running loglikelihood requests:  94%|█████████▍| 52717/56168 [02:50<00:05, 625.76it/s]Running loglikelihood requests:  94%|█████████▍| 52781/56168 [02:50<00:05, 625.10it/s]Running loglikelihood requests:  94%|█████████▍| 52845/56168 [02:50<00:05, 625.51it/s]Running loglikelihood requests:  94%|█████████▍| 52909/56168 [02:50<00:05, 625.33it/s]Running loglikelihood requests:  94%|█████████▍| 52973/56168 [02:50<00:05, 625.66it/s]Running loglikelihood requests:  94%|█████████▍| 53037/56168 [02:51<00:05, 625.08it/s]Running loglikelihood requests:  95%|█████████▍| 53101/56168 [02:51<00:04, 626.13it/s]Running loglikelihood requests:  95%|█████████▍| 53165/56168 [02:51<00:04, 627.21it/s]Running loglikelihood requests:  95%|█████████▍| 53229/56168 [02:51<00:04, 627.96it/s]Running loglikelihood requests:  95%|█████████▍| 53293/56168 [02:51<00:04, 628.30it/s]Running loglikelihood requests:  95%|█████████▍| 53357/56168 [02:51<00:04, 628.53it/s]Running loglikelihood requests:  95%|█████████▌| 53421/56168 [02:51<00:04, 628.16it/s]Running loglikelihood requests:  95%|█████████▌| 53485/56168 [02:51<00:04, 628.21it/s]Running loglikelihood requests:  95%|█████████▌| 53549/56168 [02:51<00:04, 628.23it/s]Running loglikelihood requests:  95%|█████████▌| 53613/56168 [02:51<00:04, 627.78it/s]Running loglikelihood requests:  96%|█████████▌| 53698/56168 [02:52<00:03, 693.45it/s]Running loglikelihood requests:  96%|█████████▌| 53788/56168 [02:52<00:03, 754.68it/s]Running loglikelihood requests:  96%|█████████▌| 53869/56168 [02:52<00:03, 615.51it/s]Running loglikelihood requests:  96%|█████████▌| 53956/56168 [02:52<00:03, 680.04it/s]Running loglikelihood requests:  96%|█████████▌| 54044/56168 [02:52<00:02, 733.21it/s]Running loglikelihood requests:  96%|█████████▋| 54125/56168 [02:52<00:03, 612.63it/s]Running loglikelihood requests:  97%|█████████▋| 54215/56168 [02:52<00:02, 682.09it/s]Running loglikelihood requests:  97%|█████████▋| 54310/56168 [02:52<00:02, 750.77it/s]Running loglikelihood requests:  97%|█████████▋| 54391/56168 [02:53<00:02, 625.11it/s]Running loglikelihood requests:  97%|█████████▋| 54484/56168 [02:53<00:02, 697.54it/s]Running loglikelihood requests:  97%|█████████▋| 54573/56168 [02:53<00:02, 614.29it/s]Running loglikelihood requests:  97%|█████████▋| 54665/56168 [02:53<00:02, 684.55it/s]Running loglikelihood requests:  97%|█████████▋| 54758/56168 [02:53<00:01, 745.02it/s]Running loglikelihood requests:  98%|█████████▊| 54839/56168 [02:53<00:02, 626.39it/s]Running loglikelihood requests:  98%|█████████▊| 54933/56168 [02:53<00:01, 699.85it/s]Running loglikelihood requests:  98%|█████████▊| 55021/56168 [02:54<00:01, 616.70it/s]Running loglikelihood requests:  98%|█████████▊| 55114/56168 [02:54<00:01, 688.21it/s]Running loglikelihood requests:  98%|█████████▊| 55213/56168 [02:54<00:01, 632.11it/s]Running loglikelihood requests:  98%|█████████▊| 55313/56168 [02:54<00:01, 715.00it/s]Running loglikelihood requests:  99%|█████████▊| 55405/56168 [02:54<00:01, 637.31it/s]Running loglikelihood requests:  99%|█████████▉| 55510/56168 [02:54<00:00, 730.12it/s]Running loglikelihood requests:  99%|█████████▉| 55597/56168 [02:54<00:00, 636.87it/s]Running loglikelihood requests:  99%|█████████▉| 55712/56168 [02:55<00:00, 751.96it/s]Running loglikelihood requests:  99%|█████████▉| 55796/56168 [02:55<00:00, 650.91it/s]Running loglikelihood requests: 100%|█████████▉| 55917/56168 [02:55<00:00, 676.92it/s]Running loglikelihood requests: 100%|█████████▉| 56045/56168 [02:55<00:00, 724.45it/s]Running loglikelihood requests: 100%|██████████| 56168/56168 [02:55<00:00, 319.88it/s]
2025-05-12:22:31:16,995 INFO     [evaluation_tracker.py:269] Output path not provided, skipping saving results aggregated
hf (pretrained=shengyuanhu/benchmark_whp_scrub_ckpt_70,tokenizer=meta-llama/Llama-2-7b-hf), gen_kwargs: (None), limit: None, num_fewshot: None, batch_size: 16
|                 Tasks                 |Version|Filter|n-shot|Metric|   |Value |   |Stderr|
|---------------------------------------|------:|------|-----:|------|---|-----:|---|-----:|
|mmlu                                   |      2|none  |      |acc   |↑  |0.3680|±  |0.0040|
| - humanities                          |      2|none  |      |acc   |↑  |0.3556|±  |0.0069|
|  - formal_logic                       |      1|none  |     0|acc   |↑  |0.3095|±  |0.0413|
|  - high_school_european_history       |      1|none  |     0|acc   |↑  |0.4545|±  |0.0389|
|  - high_school_us_history             |      1|none  |     0|acc   |↑  |0.4510|±  |0.0349|
|  - high_school_world_history          |      1|none  |     0|acc   |↑  |0.4979|±  |0.0325|
|  - international_law                  |      1|none  |     0|acc   |↑  |0.4298|±  |0.0452|
|  - jurisprudence                      |      1|none  |     0|acc   |↑  |0.3889|±  |0.0471|
|  - logical_fallacies                  |      1|none  |     0|acc   |↑  |0.4417|±  |0.0390|
|  - moral_disputes                     |      1|none  |     0|acc   |↑  |0.3555|±  |0.0258|
|  - moral_scenarios                    |      1|none  |     0|acc   |↑  |0.2380|±  |0.0142|
|  - philosophy                         |      1|none  |     0|acc   |↑  |0.3698|±  |0.0274|
|  - prehistory                         |      1|none  |     0|acc   |↑  |0.3951|±  |0.0272|
|  - professional_law                   |      1|none  |     0|acc   |↑  |0.3390|±  |0.0121|
|  - world_religions                    |      1|none  |     0|acc   |↑  |0.4912|±  |0.0383|
| - other                               |      2|none  |      |acc   |↑  |0.4091|±  |0.0088|
|  - business_ethics                    |      1|none  |     0|acc   |↑  |0.4400|±  |0.0499|
|  - clinical_knowledge                 |      1|none  |     0|acc   |↑  |0.3660|±  |0.0296|
|  - college_medicine                   |      1|none  |     0|acc   |↑  |0.3121|±  |0.0353|
|  - global_facts                       |      1|none  |     0|acc   |↑  |0.2300|±  |0.0423|
|  - human_aging                        |      1|none  |     0|acc   |↑  |0.4305|±  |0.0332|
|  - management                         |      1|none  |     0|acc   |↑  |0.3495|±  |0.0472|
|  - marketing                          |      1|none  |     0|acc   |↑  |0.5342|±  |0.0327|
|  - medical_genetics                   |      1|none  |     0|acc   |↑  |0.4200|±  |0.0496|
|  - miscellaneous                      |      1|none  |     0|acc   |↑  |0.4534|±  |0.0178|
|  - nutrition                          |      1|none  |     0|acc   |↑  |0.4281|±  |0.0283|
|  - professional_accounting            |      1|none  |     0|acc   |↑  |0.3404|±  |0.0283|
|  - professional_medicine              |      1|none  |     0|acc   |↑  |0.3934|±  |0.0297|
|  - virology                           |      1|none  |     0|acc   |↑  |0.3916|±  |0.0380|
| - social sciences                     |      2|none  |      |acc   |↑  |0.4033|±  |0.0088|
|  - econometrics                       |      1|none  |     0|acc   |↑  |0.2456|±  |0.0405|
|  - high_school_geography              |      1|none  |     0|acc   |↑  |0.3586|±  |0.0342|
|  - high_school_government_and_politics|      1|none  |     0|acc   |↑  |0.4197|±  |0.0356|
|  - high_school_macroeconomics         |      1|none  |     0|acc   |↑  |0.3308|±  |0.0239|
|  - high_school_microeconomics         |      1|none  |     0|acc   |↑  |0.3361|±  |0.0307|
|  - high_school_psychology             |      1|none  |     0|acc   |↑  |0.4587|±  |0.0214|
|  - human_sexuality                    |      1|none  |     0|acc   |↑  |0.5038|±  |0.0439|
|  - professional_psychology            |      1|none  |     0|acc   |↑  |0.3840|±  |0.0197|
|  - public_relations                   |      1|none  |     0|acc   |↑  |0.3727|±  |0.0463|
|  - security_studies                   |      1|none  |     0|acc   |↑  |0.4204|±  |0.0316|
|  - sociology                          |      1|none  |     0|acc   |↑  |0.5423|±  |0.0352|
|  - us_foreign_policy                  |      1|none  |     0|acc   |↑  |0.4800|±  |0.0502|
| - stem                                |      2|none  |      |acc   |↑  |0.3114|±  |0.0082|
|  - abstract_algebra                   |      1|none  |     0|acc   |↑  |0.2700|±  |0.0446|
|  - anatomy                            |      1|none  |     0|acc   |↑  |0.3852|±  |0.0420|
|  - astronomy                          |      1|none  |     0|acc   |↑  |0.3553|±  |0.0389|
|  - college_biology                    |      1|none  |     0|acc   |↑  |0.4444|±  |0.0416|
|  - college_chemistry                  |      1|none  |     0|acc   |↑  |0.2900|±  |0.0456|
|  - college_computer_science           |      1|none  |     0|acc   |↑  |0.3000|±  |0.0461|
|  - college_mathematics                |      1|none  |     0|acc   |↑  |0.2600|±  |0.0441|
|  - college_physics                    |      1|none  |     0|acc   |↑  |0.2745|±  |0.0444|
|  - computer_security                  |      1|none  |     0|acc   |↑  |0.4600|±  |0.0501|
|  - conceptual_physics                 |      1|none  |     0|acc   |↑  |0.3489|±  |0.0312|
|  - electrical_engineering             |      1|none  |     0|acc   |↑  |0.3793|±  |0.0404|
|  - elementary_mathematics             |      1|none  |     0|acc   |↑  |0.2354|±  |0.0219|
|  - high_school_biology                |      1|none  |     0|acc   |↑  |0.3645|±  |0.0274|
|  - high_school_chemistry              |      1|none  |     0|acc   |↑  |0.2660|±  |0.0311|
|  - high_school_computer_science       |      1|none  |     0|acc   |↑  |0.3200|±  |0.0469|
|  - high_school_mathematics            |      1|none  |     0|acc   |↑  |0.2444|±  |0.0262|
|  - high_school_physics                |      1|none  |     0|acc   |↑  |0.2781|±  |0.0366|
|  - high_school_statistics             |      1|none  |     0|acc   |↑  |0.2407|±  |0.0292|
|  - machine_learning                   |      1|none  |     0|acc   |↑  |0.3661|±  |0.0457|

|      Groups      |Version|Filter|n-shot|Metric|   |Value |   |Stderr|
|------------------|------:|------|------|------|---|-----:|---|-----:|
|mmlu              |      2|none  |      |acc   |↑  |0.3680|±  |0.0040|
| - humanities     |      2|none  |      |acc   |↑  |0.3556|±  |0.0069|
| - other          |      2|none  |      |acc   |↑  |0.4091|±  |0.0088|
| - social sciences|      2|none  |      |acc   |↑  |0.4033|±  |0.0088|
| - stem           |      2|none  |      |acc   |↑  |0.3114|±  |0.0082|

2025-05-12:22:31:22,937 INFO     [__main__.py:279] Verbosity set to INFO
2025-05-12:22:31:23,071 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:23,074 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:23,077 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:23,080 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:23,083 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:23,086 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:23,089 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:23,092 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:23,095 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:23,098 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:23,101 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:23,103 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:23,106 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:23,109 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:23,113 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:23,116 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:23,119 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:23,122 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:23,124 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:23,127 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:23,130 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:23,133 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:23,136 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:23,139 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:23,142 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:23,144 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:23,147 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:23,150 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:23,153 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:23,156 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:23,159 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:23,161 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:23,164 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:23,167 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:23,170 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:23,173 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:23,890 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:23,894 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:23,898 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:23,901 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:23,905 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:23,908 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:23,912 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:23,916 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:23,919 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:23,923 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:23,927 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:23,931 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:23,935 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:23,939 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:23,944 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:23,948 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:23,952 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:23,957 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:23,961 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:23,965 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:23,969 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:23,974 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:23,977 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:23,981 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:23,985 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:23,989 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:23,992 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:23,996 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:24,000 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:24,004 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:24,007 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:24,011 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:24,015 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:24,770 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:24,773 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:24,775 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:24,778 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:24,781 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:24,783 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:24,786 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:24,788 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:24,791 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:24,793 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:24,796 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:24,798 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:24,801 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:24,803 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:24,806 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:24,808 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:25,127 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:25,129 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:25,130 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:25,132 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:25,134 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:25,135 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:25,171 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:25,196 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:25,199 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:25,203 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:25,207 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:25,210 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:25,214 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:25,218 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:25,221 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:25,225 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:25,228 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:25,232 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:25,236 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:25,239 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:25,243 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:25,247 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:25,250 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:25,254 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:25,257 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:25,261 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:25,265 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:25,269 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:25,272 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:25,276 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:25,280 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:25,283 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:25,287 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:25,291 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:25,294 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:25,298 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:25,302 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:25,306 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:25,309 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:25,313 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:25,317 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:25,321 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:25,324 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:25,329 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:25,332 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:25,336 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:25,340 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:25,344 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:25,348 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:25,352 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:25,356 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:25,360 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:25,364 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:25,368 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:25,372 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:25,375 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:25,379 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:25,383 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:25,387 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:25,391 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:25,395 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:25,395 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:25,396 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:25,396 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:25,396 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:25,397 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:25,397 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:25,398 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:25,479 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:25,481 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:25,484 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:25,487 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:25,490 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:25,492 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:25,495 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:25,498 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:25,501 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:25,503 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:25,506 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:25,509 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:25,511 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:25,514 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:25,517 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:25,520 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:25,522 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:25,526 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:25,529 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:25,531 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:25,534 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:25,537 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:25,539 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:25,542 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:25,544 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:25,547 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:25,550 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:25,552 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:25,555 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:25,557 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:25,560 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:25,563 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:25,565 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:25,568 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:25,570 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:25,573 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:25,575 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:25,578 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:25,580 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:25,583 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:25,585 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:25,588 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:25,590 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:25,592 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:25,595 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:25,597 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:25,600 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:25,602 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:25,605 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:25,607 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:25,609 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:25,612 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:25,614 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:25,617 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:25,620 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:25,622 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:25,625 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:25,628 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:25,630 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:25,633 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:25,636 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:25,638 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:25,641 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:25,644 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:25,646 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:25,649 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:25,652 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:25,655 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:25,657 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:25,660 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:25,662 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:25,665 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:25,667 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:25,670 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:25,673 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:25,675 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:25,678 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:25,680 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:25,683 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:25,685 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:25,688 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:25,690 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:25,693 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:25,695 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:25,698 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:25,700 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:25,703 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:25,705 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:26,731 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:26,765 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:26,767 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:26,769 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:26,770 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:26,772 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:26,774 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:26,776 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:27,680 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:27,682 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:27,684 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:27,685 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:27,687 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:27,689 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:27,691 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:27,692 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:27,694 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:27,696 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:27,698 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:27,699 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:27,701 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:27,703 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:27,705 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:27,706 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:27,708 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:27,710 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:27,712 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:27,713 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:27,715 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:27,717 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:27,719 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:27,720 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:27,722 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:27,723 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:27,725 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:27,727 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:27,729 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:27,730 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:27,732 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:27,734 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:27,735 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:27,737 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:27,739 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:27,741 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:27,742 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:27,744 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:27,746 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:27,747 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:27,749 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:27,751 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:27,753 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:27,754 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:27,756 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:27,758 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:27,760 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:27,761 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:27,763 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:27,765 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:27,766 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:27,768 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:27,770 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:27,772 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:27,773 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:27,775 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:27,777 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:27,778 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:27,780 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:27,782 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:27,784 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:27,785 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:27,787 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:27,789 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:27,790 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:27,792 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:27,794 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:27,796 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:27,797 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:27,799 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:27,801 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:27,802 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:27,804 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:27,806 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:27,808 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:27,809 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:27,811 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:27,813 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:27,814 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:27,816 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:27,818 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:27,819 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:27,821 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:27,823 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:27,825 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:27,826 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:27,828 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:27,830 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:27,831 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:27,833 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:27,835 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:27,837 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:27,838 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:27,840 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:27,842 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:27,843 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:27,845 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:27,847 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:27,848 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:27,850 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:27,852 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:27,854 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:27,855 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:27,857 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:27,859 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:27,860 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:27,862 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:27,864 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:27,866 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:27,867 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:27,869 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:27,871 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:27,872 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:27,874 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:27,876 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:27,878 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:27,879 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:27,881 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:27,883 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:27,884 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:27,886 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:27,888 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:27,890 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:27,891 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:27,893 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:27,895 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:27,896 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:27,898 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:27,900 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:27,901 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:27,903 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:27,905 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:27,907 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:27,908 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:27,910 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:27,912 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:27,913 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:27,915 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:27,917 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:27,918 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:27,920 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:27,922 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:27,923 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:27,925 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:27,927 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:27,929 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:27,930 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:27,932 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:27,934 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:27,935 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:27,937 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:27,939 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:27,940 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:27,942 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:27,944 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:27,945 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:27,947 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:27,949 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:27,951 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:27,952 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:27,954 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:27,956 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:27,957 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:27,959 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:27,961 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:27,962 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:27,964 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:27,966 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:27,967 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:27,969 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:27,970 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:27,972 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:27,973 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:27,975 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:27,976 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:27,978 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:27,979 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:27,980 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:27,982 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:27,983 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:27,985 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:27,986 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:27,988 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:27,989 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:27,991 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:27,992 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:27,994 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:27,995 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:27,997 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:27,998 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:27,999 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:28,001 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:28,002 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:28,004 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:28,005 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:28,007 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:28,008 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:28,010 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:28,011 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:28,013 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:28,014 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:28,016 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:28,017 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:28,019 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:28,020 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:28,022 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:28,023 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:28,025 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:28,026 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:28,027 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:28,029 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:28,030 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:28,032 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:28,033 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:28,035 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:28,036 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:28,038 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:28,039 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:28,041 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:28,042 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:28,044 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:28,046 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:28,047 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:28,049 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:28,050 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:28,052 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:28,053 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:28,055 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:28,056 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:28,057 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:28,059 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:28,060 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:28,062 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:28,063 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:28,065 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:28,066 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:28,068 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:28,069 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:28,071 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:28,072 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:28,074 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:28,075 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:28,077 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:28,078 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:28,080 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:28,081 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:28,083 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:28,084 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:28,086 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:28,087 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:28,088 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:28,090 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:28,091 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:28,093 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:28,094 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:28,096 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:28,097 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:28,099 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:28,100 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:28,102 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:28,103 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:28,104 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:28,106 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:28,107 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:28,109 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:28,110 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:28,112 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:28,113 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:28,115 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:28,116 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:28,118 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:28,119 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:28,121 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:28,122 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:28,124 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:28,125 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:28,127 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:28,128 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:28,130 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:28,131 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:28,133 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:28,134 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:28,136 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:28,137 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:28,138 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:28,140 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:28,209 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:28,212 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:28,215 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:28,217 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:28,220 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:28,223 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:28,225 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:30,596 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:30,599 INFO     [__init__.py:449] `group` and `group_alias` keys in TaskConfigs are deprecated and will be removed in v0.4.5 of lm_eval. The new `tag` field will be used to allow for a shortcut to a group of tasks one does not wish to aggregate metrics across. `group`s which aggregate across subtasks must be only defined in a separate group config file, which will be the official way to create groups that support cross-task aggregation as in `mmlu`. Please see the v0.4.4 patch notes and our documentation: https://github.com/EleutherAI/lm-evaluation-harness/blob/main/docs/new_task_guide.md#advanced-group-configs for more information.
2025-05-12:22:31:30,602 INFO     [__main__.py:376] Selected Tasks: ['mmlu']
2025-05-12:22:31:30,605 INFO     [evaluator.py:161] Setting random seed to 0 | Setting numpy seed to 1234 | Setting torch manual seed to 1234
2025-05-12:22:31:30,605 INFO     [evaluator.py:198] Initializing hf model, with arguments: {'pretrained': 'meta-llama/Llama-2-7b-chat-hf', 'tokenizer': 'meta-llama/Llama-2-7b-hf'}
2025-05-12:22:31:31,172 INFO     [huggingface.py:130] Using device 'cuda'
2025-05-12:22:31:31,368 INFO     [huggingface.py:366] Model parallel was set to False, max memory was not set, and device map was set to {'': 'cuda'}
Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s]Loading checkpoint shards:  50%|█████     | 1/2 [00:03<00:03,  3.00s/it]Loading checkpoint shards: 100%|██████████| 2/2 [00:03<00:00,  1.74s/it]Loading checkpoint shards: 100%|██████████| 2/2 [00:03<00:00,  1.93s/it]
2025-05-12:22:31:49,862 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-12:22:31:49,862 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-12:22:31:49,862 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-12:22:31:49,862 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-12:22:31:49,862 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-12:22:31:49,862 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-12:22:31:49,862 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-12:22:31:49,862 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-12:22:31:49,863 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-12:22:31:49,863 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-12:22:31:49,863 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-12:22:31:49,863 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-12:22:31:49,863 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-12:22:31:49,863 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-12:22:31:49,863 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-12:22:31:49,863 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-12:22:31:49,863 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-12:22:31:49,863 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-12:22:31:49,863 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-12:22:31:49,863 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-12:22:31:49,863 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-12:22:31:49,863 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-12:22:31:49,863 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-12:22:31:49,863 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-12:22:31:49,863 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-12:22:31:49,863 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-12:22:31:49,863 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-12:22:31:49,863 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-12:22:31:49,863 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-12:22:31:49,863 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-12:22:31:49,863 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-12:22:31:49,863 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-12:22:31:49,863 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-12:22:31:49,863 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-12:22:31:49,863 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-12:22:31:49,863 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-12:22:31:49,863 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-12:22:31:49,864 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-12:22:31:49,864 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-12:22:31:49,864 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-12:22:31:49,864 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-12:22:31:49,864 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-12:22:31:49,864 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-12:22:31:49,864 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-12:22:31:49,864 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-12:22:31:49,864 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-12:22:31:49,864 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-12:22:31:49,864 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-12:22:31:49,864 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-12:22:31:49,864 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-12:22:31:49,864 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-12:22:31:49,864 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-12:22:31:49,864 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-12:22:31:49,864 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-12:22:31:49,864 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-12:22:31:49,864 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-12:22:31:49,864 INFO     [evaluator.py:279] Setting fewshot random generator seed to 1234
2025-05-12:22:31:49,864 WARNING  [model.py:422] model.chat_template was called with the chat_template set to False or None. Therefore no chat template will be applied. Make sure this is an intended behavior.
2025-05-12:22:31:49,869 INFO     [task.py:428] Building contexts for mmlu_high_school_computer_science on rank 0...
  0%|          | 0/100 [00:00<?, ?it/s] 86%|████████▌ | 86/100 [00:00<00:00, 859.50it/s]100%|██████████| 100/100 [00:00<00:00, 855.38it/s]
2025-05-12:22:31:49,990 INFO     [task.py:428] Building contexts for mmlu_high_school_biology on rank 0...
  0%|          | 0/310 [00:00<?, ?it/s] 28%|██▊       | 87/310 [00:00<00:00, 863.79it/s] 56%|█████▌    | 174/310 [00:00<00:00, 855.65it/s] 85%|████████▍ | 262/310 [00:00<00:00, 862.34it/s]100%|██████████| 310/310 [00:00<00:00, 863.57it/s]
2025-05-12:22:31:50,360 INFO     [task.py:428] Building contexts for mmlu_abstract_algebra on rank 0...
  0%|          | 0/100 [00:00<?, ?it/s] 87%|████████▋ | 87/100 [00:00<00:00, 869.91it/s]100%|██████████| 100/100 [00:00<00:00, 871.32it/s]
2025-05-12:22:31:50,478 INFO     [task.py:428] Building contexts for mmlu_electrical_engineering on rank 0...
  0%|          | 0/145 [00:00<?, ?it/s] 61%|██████▏   | 89/145 [00:00<00:00, 879.64it/s]100%|██████████| 145/145 [00:00<00:00, 879.92it/s]
2025-05-12:22:31:50,648 INFO     [task.py:428] Building contexts for mmlu_college_chemistry on rank 0...
  0%|          | 0/100 [00:00<?, ?it/s] 88%|████████▊ | 88/100 [00:00<00:00, 879.36it/s]100%|██████████| 100/100 [00:00<00:00, 880.30it/s]
2025-05-12:22:31:50,765 INFO     [task.py:428] Building contexts for mmlu_high_school_chemistry on rank 0...
  0%|          | 0/203 [00:00<?, ?it/s] 43%|████▎     | 88/203 [00:00<00:00, 879.57it/s] 87%|████████▋ | 177/203 [00:00<00:00, 880.61it/s]100%|██████████| 203/203 [00:00<00:00, 879.38it/s]
2025-05-12:22:31:51,003 INFO     [task.py:428] Building contexts for mmlu_astronomy on rank 0...
  0%|          | 0/152 [00:00<?, ?it/s] 59%|█████▊    | 89/152 [00:00<00:00, 882.43it/s]100%|██████████| 152/152 [00:00<00:00, 877.02it/s]
2025-05-12:22:31:51,182 INFO     [task.py:428] Building contexts for mmlu_college_physics on rank 0...
  0%|          | 0/102 [00:00<?, ?it/s] 88%|████████▊ | 90/102 [00:00<00:00, 891.68it/s]100%|██████████| 102/102 [00:00<00:00, 891.03it/s]
2025-05-12:22:31:51,300 INFO     [task.py:428] Building contexts for mmlu_college_computer_science on rank 0...
  0%|          | 0/100 [00:00<?, ?it/s] 90%|█████████ | 90/100 [00:00<00:00, 890.83it/s]100%|██████████| 100/100 [00:00<00:00, 890.41it/s]
2025-05-12:22:31:51,416 INFO     [task.py:428] Building contexts for mmlu_college_biology on rank 0...
  0%|          | 0/144 [00:00<?, ?it/s] 62%|██████▏   | 89/144 [00:00<00:00, 889.43it/s]100%|██████████| 144/144 [00:00<00:00, 872.96it/s]
2025-05-12:22:31:51,586 INFO     [task.py:428] Building contexts for mmlu_conceptual_physics on rank 0...
  0%|          | 0/235 [00:00<?, ?it/s] 38%|███▊      | 89/235 [00:00<00:00, 889.28it/s] 76%|███████▌  | 178/235 [00:00<00:00, 887.68it/s]100%|██████████| 235/235 [00:00<00:00, 888.53it/s]
2025-05-12:22:31:51,858 INFO     [task.py:428] Building contexts for mmlu_machine_learning on rank 0...
  0%|          | 0/112 [00:00<?, ?it/s] 80%|████████  | 90/112 [00:00<00:00, 890.74it/s]100%|██████████| 112/112 [00:00<00:00, 889.71it/s]
2025-05-12:22:31:51,988 INFO     [task.py:428] Building contexts for mmlu_high_school_mathematics on rank 0...
  0%|          | 0/270 [00:00<?, ?it/s] 33%|███▎      | 88/270 [00:00<00:00, 877.96it/s] 66%|██████▌   | 178/270 [00:00<00:00, 885.34it/s] 99%|█████████▉| 268/270 [00:00<00:00, 889.15it/s]100%|██████████| 270/270 [00:00<00:00, 886.87it/s]
2025-05-12:22:31:52,301 INFO     [task.py:428] Building contexts for mmlu_computer_security on rank 0...
  0%|          | 0/100 [00:00<?, ?it/s] 89%|████████▉ | 89/100 [00:00<00:00, 886.42it/s]100%|██████████| 100/100 [00:00<00:00, 884.90it/s]
2025-05-12:22:31:52,418 INFO     [task.py:428] Building contexts for mmlu_college_mathematics on rank 0...
  0%|          | 0/100 [00:00<?, ?it/s] 89%|████████▉ | 89/100 [00:00<00:00, 888.93it/s]100%|██████████| 100/100 [00:00<00:00, 887.41it/s]
2025-05-12:22:31:52,535 INFO     [task.py:428] Building contexts for mmlu_anatomy on rank 0...
  0%|          | 0/135 [00:00<?, ?it/s] 66%|██████▌   | 89/135 [00:00<00:00, 888.27it/s]100%|██████████| 135/135 [00:00<00:00, 887.44it/s]
2025-05-12:22:31:52,692 INFO     [task.py:428] Building contexts for mmlu_elementary_mathematics on rank 0...
  0%|          | 0/378 [00:00<?, ?it/s] 21%|██        | 79/378 [00:00<00:00, 786.20it/s] 42%|████▏     | 158/378 [00:00<00:00, 744.85it/s] 62%|██████▏   | 233/378 [00:00<00:00, 732.36it/s] 81%|████████  | 307/378 [00:00<00:00, 725.75it/s]100%|██████████| 378/378 [00:00<00:00, 729.20it/s]
2025-05-12:22:31:53,222 INFO     [task.py:428] Building contexts for mmlu_high_school_physics on rank 0...
  0%|          | 0/151 [00:00<?, ?it/s] 47%|████▋     | 71/151 [00:00<00:00, 703.37it/s] 95%|█████████▌| 144/151 [00:00<00:00, 714.64it/s]100%|██████████| 151/151 [00:00<00:00, 711.97it/s]
2025-05-12:22:31:53,441 INFO     [task.py:428] Building contexts for mmlu_high_school_statistics on rank 0...
  0%|          | 0/216 [00:00<?, ?it/s] 33%|███▎      | 72/216 [00:00<00:00, 719.54it/s] 68%|██████▊   | 146/216 [00:00<00:00, 727.58it/s]100%|██████████| 216/216 [00:00<00:00, 728.47it/s]
2025-05-12:22:31:53,748 INFO     [task.py:428] Building contexts for mmlu_clinical_knowledge on rank 0...
  0%|          | 0/265 [00:00<?, ?it/s] 28%|██▊       | 74/265 [00:00<00:00, 739.13it/s] 56%|█████▌    | 148/265 [00:00<00:00, 736.88it/s] 84%|████████▍ | 222/265 [00:00<00:00, 736.01it/s]100%|██████████| 265/265 [00:00<00:00, 735.41it/s]
2025-05-12:22:31:54,119 INFO     [task.py:428] Building contexts for mmlu_business_ethics on rank 0...
  0%|          | 0/100 [00:00<?, ?it/s] 73%|███████▎  | 73/100 [00:00<00:00, 725.64it/s]100%|██████████| 100/100 [00:00<00:00, 725.87it/s]
2025-05-12:22:31:54,261 INFO     [task.py:428] Building contexts for mmlu_management on rank 0...
  0%|          | 0/103 [00:00<?, ?it/s] 72%|███████▏  | 74/103 [00:00<00:00, 730.14it/s]100%|██████████| 103/103 [00:00<00:00, 706.21it/s]
2025-05-12:22:31:54,412 INFO     [task.py:428] Building contexts for mmlu_nutrition on rank 0...
  0%|          | 0/306 [00:00<?, ?it/s] 24%|██▍       | 73/306 [00:00<00:00, 724.04it/s] 48%|████▊     | 146/306 [00:00<00:00, 718.84it/s] 71%|███████   | 218/306 [00:00<00:00, 716.36it/s] 95%|█████████▌| 291/306 [00:00<00:00, 720.91it/s]100%|██████████| 306/306 [00:00<00:00, 719.47it/s]
2025-05-12:22:31:54,851 INFO     [task.py:428] Building contexts for mmlu_college_medicine on rank 0...
  0%|          | 0/173 [00:00<?, ?it/s] 43%|████▎     | 74/173 [00:00<00:00, 733.97it/s] 86%|████████▌ | 148/173 [00:00<00:00, 735.58it/s]100%|██████████| 173/173 [00:00<00:00, 734.64it/s]
2025-05-12:22:31:55,094 INFO     [task.py:428] Building contexts for mmlu_virology on rank 0...
  0%|          | 0/166 [00:00<?, ?it/s] 45%|████▌     | 75/166 [00:00<00:00, 747.39it/s] 90%|█████████ | 150/166 [00:00<00:00, 748.37it/s]100%|██████████| 166/166 [00:00<00:00, 746.21it/s]
2025-05-12:22:31:55,325 INFO     [task.py:428] Building contexts for mmlu_professional_medicine on rank 0...
  0%|          | 0/272 [00:00<?, ?it/s] 26%|██▋       | 72/272 [00:00<00:00, 710.81it/s] 54%|█████▎    | 146/272 [00:00<00:00, 725.36it/s] 81%|████████  | 220/272 [00:00<00:00, 731.85it/s]100%|██████████| 272/272 [00:00<00:00, 728.11it/s]
2025-05-12:22:31:55,710 INFO     [task.py:428] Building contexts for mmlu_miscellaneous on rank 0...
  0%|          | 0/783 [00:00<?, ?it/s] 10%|▉         | 75/783 [00:00<00:00, 744.92it/s] 19%|█▉        | 150/783 [00:00<00:00, 741.97it/s] 29%|██▊       | 225/783 [00:00<00:00, 741.14it/s] 38%|███▊      | 300/783 [00:00<00:00, 744.15it/s] 48%|████▊     | 375/783 [00:00<00:00, 744.14it/s] 57%|█████▋    | 450/783 [00:00<00:00, 743.93it/s] 67%|██████▋   | 525/783 [00:00<00:00, 742.24it/s] 77%|███████▋  | 600/783 [00:00<00:00, 743.13it/s] 86%|████████▌ | 675/783 [00:00<00:00, 742.52it/s] 96%|█████████▌| 750/783 [00:01<00:00, 739.36it/s]100%|██████████| 783/783 [00:01<00:00, 741.80it/s]
2025-05-12:22:31:56,795 INFO     [task.py:428] Building contexts for mmlu_medical_genetics on rank 0...
  0%|          | 0/100 [00:00<?, ?it/s] 75%|███████▌  | 75/100 [00:00<00:00, 745.15it/s]100%|██████████| 100/100 [00:00<00:00, 743.39it/s]
2025-05-12:22:31:56,935 INFO     [task.py:428] Building contexts for mmlu_global_facts on rank 0...
  0%|          | 0/100 [00:00<?, ?it/s] 75%|███████▌  | 75/100 [00:00<00:00, 743.17it/s]100%|██████████| 100/100 [00:00<00:00, 742.24it/s]
2025-05-12:22:31:57,074 INFO     [task.py:428] Building contexts for mmlu_professional_accounting on rank 0...
  0%|          | 0/282 [00:00<?, ?it/s] 26%|██▌       | 74/282 [00:00<00:00, 737.91it/s] 52%|█████▏    | 148/282 [00:00<00:00, 725.28it/s] 78%|███████▊  | 221/282 [00:00<00:00, 723.99it/s]100%|██████████| 282/282 [00:00<00:00, 722.69it/s]
2025-05-12:22:31:57,476 INFO     [task.py:428] Building contexts for mmlu_marketing on rank 0...
  0%|          | 0/234 [00:00<?, ?it/s]  8%|▊         | 19/234 [00:00<00:03, 66.78it/s] 39%|███▉      | 91/234 [00:00<00:00, 285.07it/s] 70%|███████   | 164/234 [00:00<00:00, 427.66it/s]100%|██████████| 234/234 [00:00<00:00, 402.86it/s]
2025-05-12:22:31:58,068 INFO     [task.py:428] Building contexts for mmlu_human_aging on rank 0...
  0%|          | 0/223 [00:00<?, ?it/s] 33%|███▎      | 74/223 [00:00<00:00, 731.46it/s] 66%|██████▋   | 148/223 [00:00<00:00, 731.15it/s]100%|█████████▉| 222/223 [00:00<00:00, 726.57it/s]100%|██████████| 223/223 [00:00<00:00, 726.91it/s]
2025-05-12:22:31:58,384 INFO     [task.py:428] Building contexts for mmlu_public_relations on rank 0...
  0%|          | 0/110 [00:00<?, ?it/s] 65%|██████▍   | 71/110 [00:00<00:00, 704.56it/s]100%|██████████| 110/110 [00:00<00:00, 705.98it/s]
2025-05-12:22:31:58,545 INFO     [task.py:428] Building contexts for mmlu_sociology on rank 0...
  0%|          | 0/201 [00:00<?, ?it/s] 36%|███▋      | 73/201 [00:00<00:00, 720.80it/s] 73%|███████▎  | 146/201 [00:00<00:00, 718.35it/s]100%|██████████| 201/201 [00:00<00:00, 715.86it/s]
2025-05-12:22:31:58,835 INFO     [task.py:428] Building contexts for mmlu_high_school_geography on rank 0...
  0%|          | 0/198 [00:00<?, ?it/s] 36%|███▋      | 72/198 [00:00<00:00, 714.81it/s] 73%|███████▎  | 144/198 [00:00<00:00, 716.68it/s]100%|██████████| 198/198 [00:00<00:00, 717.39it/s]
2025-05-12:22:31:59,120 INFO     [task.py:428] Building contexts for mmlu_security_studies on rank 0...
  0%|          | 0/245 [00:00<?, ?it/s] 29%|██▉       | 71/245 [00:00<00:00, 705.85it/s] 58%|█████▊    | 143/245 [00:00<00:00, 709.87it/s] 87%|████████▋ | 214/245 [00:00<00:00, 709.40it/s]100%|██████████| 245/245 [00:00<00:00, 709.44it/s]
2025-05-12:22:31:59,476 INFO     [task.py:428] Building contexts for mmlu_high_school_psychology on rank 0...
  0%|          | 0/545 [00:00<?, ?it/s] 13%|█▎        | 72/545 [00:00<00:00, 713.59it/s] 27%|██▋       | 145/545 [00:00<00:00, 721.19it/s] 40%|████      | 218/545 [00:00<00:00, 719.37it/s] 53%|█████▎    | 290/545 [00:00<00:00, 716.80it/s] 67%|██████▋   | 363/545 [00:00<00:00, 721.11it/s] 80%|████████  | 436/545 [00:00<00:00, 721.17it/s] 93%|█████████▎| 509/545 [00:00<00:00, 708.97it/s]100%|██████████| 545/545 [00:00<00:00, 714.57it/s]
2025-05-12:22:32:00,261 INFO     [task.py:428] Building contexts for mmlu_us_foreign_policy on rank 0...
  0%|          | 0/100 [00:00<?, ?it/s] 72%|███████▏  | 72/100 [00:00<00:00, 718.55it/s]100%|██████████| 100/100 [00:00<00:00, 715.52it/s]
2025-05-12:22:32:00,406 INFO     [task.py:428] Building contexts for mmlu_high_school_macroeconomics on rank 0...
  0%|          | 0/390 [00:00<?, ?it/s] 18%|█▊        | 72/390 [00:00<00:00, 719.27it/s] 37%|███▋      | 144/390 [00:00<00:00, 715.22it/s] 56%|█████▌    | 217/390 [00:00<00:00, 719.00it/s] 74%|███████▍  | 290/390 [00:00<00:00, 721.10it/s] 93%|█████████▎| 363/390 [00:00<00:00, 721.92it/s]100%|██████████| 390/390 [00:00<00:00, 720.06it/s]
2025-05-12:22:32:00,963 INFO     [task.py:428] Building contexts for mmlu_high_school_microeconomics on rank 0...
  0%|          | 0/238 [00:00<?, ?it/s] 30%|███       | 72/238 [00:00<00:00, 717.16it/s] 61%|██████    | 145/238 [00:00<00:00, 721.16it/s] 92%|█████████▏| 218/238 [00:00<00:00, 722.24it/s]100%|██████████| 238/238 [00:00<00:00, 721.00it/s]
2025-05-12:22:32:01,303 INFO     [task.py:428] Building contexts for mmlu_econometrics on rank 0...
  0%|          | 0/114 [00:00<?, ?it/s] 64%|██████▍   | 73/114 [00:00<00:00, 726.69it/s]100%|██████████| 114/114 [00:00<00:00, 722.55it/s]
2025-05-12:22:32:01,466 INFO     [task.py:428] Building contexts for mmlu_professional_psychology on rank 0...
  0%|          | 0/612 [00:00<?, ?it/s] 12%|█▏        | 73/612 [00:00<00:00, 722.58it/s] 24%|██▍       | 146/612 [00:00<00:00, 719.03it/s] 36%|███▌      | 219/612 [00:00<00:00, 720.00it/s] 48%|████▊     | 292/612 [00:00<00:00, 717.14it/s] 59%|█████▉    | 364/612 [00:00<00:00, 716.53it/s] 71%|███████▏  | 437/612 [00:00<00:00, 719.11it/s] 83%|████████▎ | 510/612 [00:00<00:00, 721.31it/s] 95%|█████████▌| 583/612 [00:00<00:00, 722.86it/s]100%|██████████| 612/612 [00:00<00:00, 713.02it/s]
2025-05-12:22:32:02,348 INFO     [task.py:428] Building contexts for mmlu_human_sexuality on rank 0...
  0%|          | 0/131 [00:00<?, ?it/s] 56%|█████▌    | 73/131 [00:00<00:00, 728.94it/s]100%|██████████| 131/131 [00:00<00:00, 728.62it/s]
2025-05-12:22:32:02,534 INFO     [task.py:428] Building contexts for mmlu_high_school_government_and_politics on rank 0...
  0%|          | 0/193 [00:00<?, ?it/s] 37%|███▋      | 72/193 [00:00<00:00, 717.63it/s] 75%|███████▍  | 144/193 [00:00<00:00, 717.59it/s]100%|██████████| 193/193 [00:00<00:00, 717.70it/s]
2025-05-12:22:32:02,811 INFO     [task.py:428] Building contexts for mmlu_moral_scenarios on rank 0...
  0%|          | 0/895 [00:00<?, ?it/s]  8%|▊         | 72/895 [00:00<00:01, 712.75it/s] 16%|█▌        | 144/895 [00:00<00:01, 714.97it/s] 24%|██▍       | 217/895 [00:00<00:00, 719.54it/s] 33%|███▎      | 291/895 [00:00<00:00, 727.47it/s] 41%|████      | 364/895 [00:00<00:00, 727.94it/s] 49%|████▉     | 439/895 [00:00<00:00, 734.63it/s] 57%|█████▋    | 514/895 [00:00<00:00, 738.85it/s] 66%|██████▌   | 589/895 [00:00<00:00, 739.49it/s] 76%|███████▌  | 677/895 [00:00<00:00, 781.21it/s] 86%|████████▌ | 768/895 [00:01<00:00, 818.89it/s] 96%|█████████▌| 858/895 [00:01<00:00, 842.13it/s]100%|██████████| 895/895 [00:01<00:00, 779.84it/s]
2025-05-12:22:32:04,000 INFO     [task.py:428] Building contexts for mmlu_high_school_world_history on rank 0...
  0%|          | 0/237 [00:00<?, ?it/s] 32%|███▏      | 75/237 [00:00<00:00, 749.34it/s] 64%|██████▍   | 152/237 [00:00<00:00, 757.32it/s] 97%|█████████▋| 229/237 [00:00<00:00, 761.03it/s]100%|██████████| 237/237 [00:00<00:00, 756.63it/s]
2025-05-12:22:32:04,324 INFO     [task.py:428] Building contexts for mmlu_high_school_european_history on rank 0...
  0%|          | 0/165 [00:00<?, ?it/s] 47%|████▋     | 78/165 [00:00<00:00, 770.69it/s] 95%|█████████▍| 156/165 [00:00<00:00, 768.30it/s]100%|██████████| 165/165 [00:00<00:00, 767.89it/s]
2025-05-12:22:32:04,546 INFO     [task.py:428] Building contexts for mmlu_philosophy on rank 0...
  0%|          | 0/311 [00:00<?, ?it/s] 25%|██▍       | 77/311 [00:00<00:00, 761.68it/s] 54%|█████▍    | 168/311 [00:00<00:00, 843.82it/s] 83%|████████▎ | 259/311 [00:00<00:00, 866.07it/s]100%|██████████| 311/311 [00:00<00:00, 836.17it/s]
2025-05-12:22:32:04,931 INFO     [task.py:428] Building contexts for mmlu_moral_disputes on rank 0...
  0%|          | 0/346 [00:00<?, ?it/s] 23%|██▎       | 78/346 [00:00<00:00, 770.16it/s] 45%|████▌     | 157/346 [00:00<00:00, 776.72it/s] 68%|██████▊   | 235/346 [00:00<00:00, 768.43it/s] 91%|█████████ | 314/346 [00:00<00:00, 776.33it/s]100%|██████████| 346/346 [00:00<00:00, 775.49it/s]
2025-05-12:22:32:05,390 INFO     [task.py:428] Building contexts for mmlu_high_school_us_history on rank 0...
  0%|          | 0/204 [00:00<?, ?it/s] 39%|███▊      | 79/204 [00:00<00:00, 782.90it/s] 77%|███████▋  | 158/204 [00:00<00:00, 766.72it/s]100%|██████████| 204/204 [00:00<00:00, 769.56it/s]
2025-05-12:22:32:05,664 INFO     [task.py:428] Building contexts for mmlu_international_law on rank 0...
  0%|          | 0/121 [00:00<?, ?it/s] 67%|██████▋   | 81/121 [00:00<00:00, 800.76it/s]100%|██████████| 121/121 [00:00<00:00, 797.65it/s]
2025-05-12:22:32:05,821 INFO     [task.py:428] Building contexts for mmlu_professional_law on rank 0...
  0%|          | 0/1534 [00:00<?, ?it/s]  5%|▌         | 80/1534 [00:00<00:01, 798.38it/s] 11%|█         | 162/1534 [00:00<00:01, 806.08it/s] 16%|█▌        | 243/1534 [00:00<00:01, 800.73it/s] 21%|██        | 324/1534 [00:00<00:01, 802.20it/s] 26%|██▋       | 406/1534 [00:00<00:01, 807.11it/s] 32%|███▏      | 488/1534 [00:00<00:01, 811.14it/s] 37%|███▋      | 570/1534 [00:00<00:01, 811.65it/s] 43%|████▎     | 653/1534 [00:00<00:01, 816.15it/s] 48%|████▊     | 736/1534 [00:00<00:00, 819.65it/s] 53%|█████▎    | 820/1534 [00:01<00:00, 825.39it/s] 59%|█████▉    | 903/1534 [00:01<00:00, 823.70it/s] 64%|██████▍   | 987/1534 [00:01<00:00, 827.77it/s] 70%|██████▉   | 1071/1534 [00:01<00:00, 830.17it/s] 75%|███████▌  | 1156/1534 [00:01<00:00, 833.37it/s] 81%|████████  | 1240/1534 [00:01<00:00, 830.71it/s] 86%|████████▋ | 1324/1534 [00:01<00:00, 832.79it/s] 92%|█████████▏| 1409/1534 [00:01<00:00, 837.18it/s] 97%|█████████▋| 1494/1534 [00:01<00:00, 839.87it/s]100%|██████████| 1534/1534 [00:01<00:00, 824.89it/s]
2025-05-12:22:32:07,739 INFO     [task.py:428] Building contexts for mmlu_world_religions on rank 0...
  0%|          | 0/171 [00:00<?, ?it/s] 49%|████▉     | 84/171 [00:00<00:00, 837.13it/s] 98%|█████████▊| 168/171 [00:00<00:00, 833.94it/s]100%|██████████| 171/171 [00:00<00:00, 833.61it/s]
2025-05-12:22:32:07,951 INFO     [task.py:428] Building contexts for mmlu_jurisprudence on rank 0...
  0%|          | 0/108 [00:00<?, ?it/s] 81%|████████  | 87/108 [00:00<00:00, 861.44it/s]100%|██████████| 108/108 [00:00<00:00, 859.68it/s]
2025-05-12:22:32:08,081 INFO     [task.py:428] Building contexts for mmlu_formal_logic on rank 0...
  0%|          | 0/126 [00:00<?, ?it/s] 68%|██████▊   | 86/126 [00:00<00:00, 851.97it/s]100%|██████████| 126/126 [00:00<00:00, 850.73it/s]
2025-05-12:22:32:08,234 INFO     [task.py:428] Building contexts for mmlu_prehistory on rank 0...
  0%|          | 0/324 [00:00<?, ?it/s] 27%|██▋       | 86/324 [00:00<00:00, 858.93it/s] 53%|█████▎    | 172/324 [00:00<00:00, 297.37it/s] 79%|███████▉  | 257/324 [00:00<00:00, 421.54it/s]100%|██████████| 324/324 [00:00<00:00, 462.17it/s]
2025-05-12:22:32:08,947 INFO     [task.py:428] Building contexts for mmlu_logical_fallacies on rank 0...
  0%|          | 0/163 [00:00<?, ?it/s] 52%|█████▏    | 85/163 [00:00<00:00, 849.26it/s]100%|██████████| 163/163 [00:00<00:00, 848.41it/s]
2025-05-12:22:32:09,145 INFO     [evaluator.py:485] Running loglikelihood requests
Running loglikelihood requests:   0%|          | 0/56168 [00:00<?, ?it/s]Starting from v4.46, the `logits` model output will have the same type as the model (except at train time, where it will always be FP32)
Running loglikelihood requests:   0%|          | 1/56168 [00:02<38:15:38,  2.45s/it]Running loglikelihood requests:   0%|          | 65/56168 [00:03<39:13, 23.83it/s]  Running loglikelihood requests:   0%|          | 129/56168 [00:04<24:03, 38.81it/s]Running loglikelihood requests:   0%|          | 193/56168 [00:05<18:53, 49.39it/s]Running loglikelihood requests:   0%|          | 257/56168 [00:06<16:15, 57.33it/s]Running loglikelihood requests:   1%|          | 321/56168 [00:06<14:40, 63.41it/s]Running loglikelihood requests:   1%|          | 385/56168 [00:07<13:37, 68.28it/s]Running loglikelihood requests:   1%|          | 449/56168 [00:08<12:54, 71.98it/s]Running loglikelihood requests:   1%|          | 513/56168 [00:09<12:17, 75.48it/s]Running loglikelihood requests:   1%|          | 577/56168 [00:09<11:49, 78.37it/s]Running loglikelihood requests:   1%|          | 641/56168 [00:10<11:25, 80.97it/s]Running loglikelihood requests:   1%|▏         | 705/56168 [00:11<11:08, 82.95it/s]Running loglikelihood requests:   1%|▏         | 769/56168 [00:12<10:52, 84.96it/s]Running loglikelihood requests:   1%|▏         | 833/56168 [00:12<10:34, 87.19it/s]Running loglikelihood requests:   2%|▏         | 897/56168 [00:13<10:19, 89.24it/s]Running loglikelihood requests:   2%|▏         | 961/56168 [00:14<10:07, 90.86it/s]Running loglikelihood requests:   2%|▏         | 1025/56168 [00:14<09:57, 92.29it/s]Running loglikelihood requests:   2%|▏         | 1089/56168 [00:15<09:45, 94.07it/s]Running loglikelihood requests:   2%|▏         | 1153/56168 [00:16<09:38, 95.09it/s]Running loglikelihood requests:   2%|▏         | 1217/56168 [00:16<09:27, 96.89it/s]Running loglikelihood requests:   2%|▏         | 1281/56168 [00:17<09:26, 96.92it/s]Running loglikelihood requests:   2%|▏         | 1345/56168 [00:18<09:17, 98.41it/s]Running loglikelihood requests:   3%|▎         | 1409/56168 [00:18<09:06, 100.18it/s]Running loglikelihood requests:   3%|▎         | 1473/56168 [00:19<08:59, 101.40it/s]Running loglikelihood requests:   3%|▎         | 1537/56168 [00:19<08:52, 102.57it/s]Running loglikelihood requests:   3%|▎         | 1601/56168 [00:20<08:46, 103.60it/s]Running loglikelihood requests:   3%|▎         | 1665/56168 [00:21<08:37, 105.23it/s]Running loglikelihood requests:   3%|▎         | 1729/56168 [00:21<08:31, 106.50it/s]Running loglikelihood requests:   3%|▎         | 1793/56168 [00:22<08:25, 107.53it/s]Running loglikelihood requests:   3%|▎         | 1857/56168 [00:22<08:20, 108.46it/s]Running loglikelihood requests:   3%|▎         | 1921/56168 [00:23<08:17, 109.09it/s]Running loglikelihood requests:   4%|▎         | 1985/56168 [00:24<08:11, 110.14it/s]Running loglikelihood requests:   4%|▎         | 2049/56168 [00:24<08:07, 111.06it/s]Running loglikelihood requests:   4%|▍         | 2113/56168 [00:25<08:03, 111.76it/s]Running loglikelihood requests:   4%|▍         | 2177/56168 [00:25<07:56, 113.23it/s]Running loglikelihood requests:   4%|▍         | 2241/56168 [00:26<07:52, 114.01it/s]Running loglikelihood requests:   4%|▍         | 2305/56168 [00:26<08:01, 111.94it/s]Running loglikelihood requests:   4%|▍         | 2369/56168 [00:27<08:00, 111.87it/s]Running loglikelihood requests:   4%|▍         | 2433/56168 [00:27<07:55, 113.05it/s]Running loglikelihood requests:   4%|▍         | 2497/56168 [00:28<07:48, 114.50it/s]Running loglikelihood requests:   5%|▍         | 2561/56168 [00:29<07:40, 116.31it/s]Running loglikelihood requests:   5%|▍         | 2625/56168 [00:29<07:34, 117.75it/s]Running loglikelihood requests:   5%|▍         | 2689/56168 [00:30<07:30, 118.84it/s]Running loglikelihood requests:   5%|▍         | 2753/56168 [00:30<07:29, 118.95it/s]Running loglikelihood requests:   5%|▌         | 2817/56168 [00:31<07:24, 120.14it/s]Running loglikelihood requests:   5%|▌         | 2881/56168 [00:31<07:19, 121.29it/s]Running loglikelihood requests:   5%|▌         | 2945/56168 [00:32<07:15, 122.24it/s]Running loglikelihood requests:   5%|▌         | 3009/56168 [00:32<07:11, 123.12it/s]Running loglikelihood requests:   5%|▌         | 3073/56168 [00:33<07:08, 123.92it/s]Running loglikelihood requests:   6%|▌         | 3137/56168 [00:33<07:04, 124.85it/s]Running loglikelihood requests:   6%|▌         | 3201/56168 [00:34<07:03, 125.04it/s]Running loglikelihood requests:   6%|▌         | 3265/56168 [00:34<07:04, 124.74it/s]Running loglikelihood requests:   6%|▌         | 3329/56168 [00:35<07:00, 125.61it/s]Running loglikelihood requests:   6%|▌         | 3393/56168 [00:35<06:57, 126.37it/s]Running loglikelihood requests:   6%|▌         | 3457/56168 [00:36<06:56, 126.63it/s]Running loglikelihood requests:   6%|▋         | 3521/56168 [00:36<06:56, 126.34it/s]Running loglikelihood requests:   6%|▋         | 3585/56168 [00:37<06:52, 127.37it/s]Running loglikelihood requests:   6%|▋         | 3649/56168 [00:37<06:49, 128.39it/s]Running loglikelihood requests:   7%|▋         | 3713/56168 [00:38<06:45, 129.22it/s]Running loglikelihood requests:   7%|▋         | 3777/56168 [00:38<06:47, 128.45it/s]Running loglikelihood requests:   7%|▋         | 3841/56168 [00:39<06:46, 128.65it/s]Running loglikelihood requests:   7%|▋         | 3905/56168 [00:39<06:41, 130.31it/s]Running loglikelihood requests:   7%|▋         | 3969/56168 [00:40<06:35, 132.12it/s]Running loglikelihood requests:   7%|▋         | 4033/56168 [00:40<06:30, 133.62it/s]Running loglikelihood requests:   7%|▋         | 4097/56168 [00:41<06:32, 132.83it/s]Running loglikelihood requests:   7%|▋         | 4161/56168 [00:41<06:27, 134.15it/s]Running loglikelihood requests:   8%|▊         | 4225/56168 [00:42<06:24, 135.15it/s]Running loglikelihood requests:   8%|▊         | 4289/56168 [00:42<06:21, 135.86it/s]Running loglikelihood requests:   8%|▊         | 4353/56168 [00:42<06:18, 136.87it/s]Running loglikelihood requests:   8%|▊         | 4417/56168 [00:43<06:15, 137.74it/s]Running loglikelihood requests:   8%|▊         | 4481/56168 [00:43<06:12, 138.71it/s]Running loglikelihood requests:   8%|▊         | 4545/56168 [00:44<06:07, 140.46it/s]Running loglikelihood requests:   8%|▊         | 4609/56168 [00:44<06:06, 140.62it/s]Running loglikelihood requests:   8%|▊         | 4673/56168 [00:45<06:02, 142.00it/s]Running loglikelihood requests:   8%|▊         | 4737/56168 [00:45<05:59, 142.94it/s]Running loglikelihood requests:   9%|▊         | 4801/56168 [00:46<05:56, 143.90it/s]Running loglikelihood requests:   9%|▊         | 4865/56168 [00:46<05:55, 144.16it/s]Running loglikelihood requests:   9%|▉         | 4929/56168 [00:46<05:56, 143.58it/s]Running loglikelihood requests:   9%|▉         | 4993/56168 [00:47<05:57, 143.24it/s]Running loglikelihood requests:   9%|▉         | 5057/56168 [00:47<05:51, 145.43it/s]Running loglikelihood requests:   9%|▉         | 5121/56168 [00:48<05:47, 146.83it/s]Running loglikelihood requests:   9%|▉         | 5185/56168 [00:48<05:44, 147.97it/s]Running loglikelihood requests:   9%|▉         | 5249/56168 [00:49<05:48, 146.31it/s]Running loglikelihood requests:   9%|▉         | 5313/56168 [00:49<05:47, 146.30it/s]Running loglikelihood requests:  10%|▉         | 5377/56168 [00:50<05:41, 148.65it/s]Running loglikelihood requests:  10%|▉         | 5441/56168 [00:50<05:38, 150.07it/s]Running loglikelihood requests:  10%|▉         | 5505/56168 [00:50<05:34, 151.27it/s]Running loglikelihood requests:  10%|▉         | 5569/56168 [00:51<05:31, 152.49it/s]Running loglikelihood requests:  10%|█         | 5633/56168 [00:51<05:28, 153.84it/s]Running loglikelihood requests:  10%|█         | 5697/56168 [00:52<05:28, 153.77it/s]Running loglikelihood requests:  10%|█         | 5761/56168 [00:52<05:24, 155.28it/s]Running loglikelihood requests:  10%|█         | 5825/56168 [00:52<05:21, 156.42it/s]Running loglikelihood requests:  10%|█         | 5889/56168 [00:53<05:19, 157.37it/s]Running loglikelihood requests:  11%|█         | 5953/56168 [00:53<05:16, 158.89it/s]Running loglikelihood requests:  11%|█         | 6017/56168 [00:54<05:17, 157.88it/s]Running loglikelihood requests:  11%|█         | 6081/56168 [00:54<05:14, 159.50it/s]Running loglikelihood requests:  11%|█         | 6145/56168 [00:54<05:11, 160.46it/s]Running loglikelihood requests:  11%|█         | 6209/56168 [00:55<05:13, 159.37it/s]Running loglikelihood requests:  11%|█         | 6273/56168 [00:55<05:09, 160.98it/s]Running loglikelihood requests:  11%|█▏        | 6337/56168 [00:56<05:10, 160.30it/s]Running loglikelihood requests:  11%|█▏        | 6401/56168 [00:56<05:10, 160.46it/s]Running loglikelihood requests:  12%|█▏        | 6465/56168 [00:56<05:06, 162.15it/s]Running loglikelihood requests:  12%|█▏        | 6529/56168 [00:57<05:03, 163.42it/s]Running loglikelihood requests:  12%|█▏        | 6593/56168 [00:57<05:01, 164.61it/s]Running loglikelihood requests:  12%|█▏        | 6657/56168 [00:58<05:00, 164.77it/s]Running loglikelihood requests:  12%|█▏        | 6721/56168 [00:58<04:58, 165.69it/s]Running loglikelihood requests:  12%|█▏        | 6785/56168 [00:58<04:55, 166.92it/s]Running loglikelihood requests:  12%|█▏        | 6849/56168 [00:59<04:53, 167.82it/s]Running loglikelihood requests:  12%|█▏        | 6913/56168 [00:59<04:52, 168.53it/s]Running loglikelihood requests:  12%|█▏        | 6977/56168 [00:59<04:53, 167.81it/s]Running loglikelihood requests:  13%|█▎        | 7041/56168 [01:00<04:55, 166.48it/s]Running loglikelihood requests:  13%|█▎        | 7105/56168 [01:00<04:51, 168.03it/s]Running loglikelihood requests:  13%|█▎        | 7169/56168 [01:01<04:50, 168.78it/s]Running loglikelihood requests:  13%|█▎        | 7233/56168 [01:01<04:45, 171.56it/s]Running loglikelihood requests:  13%|█▎        | 7297/56168 [01:01<04:40, 174.00it/s]Running loglikelihood requests:  13%|█▎        | 7361/56168 [01:02<04:39, 174.67it/s]Running loglikelihood requests:  13%|█▎        | 7425/56168 [01:02<04:40, 173.98it/s]Running loglikelihood requests:  13%|█▎        | 7489/56168 [01:02<04:37, 175.29it/s]Running loglikelihood requests:  13%|█▎        | 7553/56168 [01:03<04:33, 177.48it/s]Running loglikelihood requests:  14%|█▎        | 7617/56168 [01:03<04:31, 178.58it/s]Running loglikelihood requests:  14%|█▎        | 7681/56168 [01:03<04:29, 180.23it/s]Running loglikelihood requests:  14%|█▍        | 7745/56168 [01:04<04:26, 181.64it/s]Running loglikelihood requests:  14%|█▍        | 7809/56168 [01:04<04:22, 184.01it/s]Running loglikelihood requests:  14%|█▍        | 7873/56168 [01:04<04:18, 186.72it/s]Running loglikelihood requests:  14%|█▍        | 7937/56168 [01:05<04:15, 188.48it/s]Running loglikelihood requests:  14%|█▍        | 8001/56168 [01:05<04:15, 188.37it/s]Running loglikelihood requests:  14%|█▍        | 8065/56168 [01:05<04:17, 186.90it/s]Running loglikelihood requests:  14%|█▍        | 8129/56168 [01:06<04:17, 186.75it/s]Running loglikelihood requests:  15%|█▍        | 8193/56168 [01:06<04:17, 186.04it/s]Running loglikelihood requests:  15%|█▍        | 8257/56168 [01:06<04:13, 188.64it/s]Running loglikelihood requests:  15%|█▍        | 8321/56168 [01:07<04:11, 190.34it/s]Running loglikelihood requests:  15%|█▍        | 8385/56168 [01:07<04:09, 191.83it/s]Running loglikelihood requests:  15%|█▌        | 8449/56168 [01:07<04:06, 193.53it/s]Running loglikelihood requests:  15%|█▌        | 8513/56168 [01:08<04:03, 195.79it/s]Running loglikelihood requests:  15%|█▌        | 8577/56168 [01:08<04:00, 197.65it/s]Running loglikelihood requests:  15%|█▌        | 8641/56168 [01:08<03:59, 198.46it/s]Running loglikelihood requests:  15%|█▌        | 8705/56168 [01:09<03:58, 199.19it/s]Running loglikelihood requests:  16%|█▌        | 8769/56168 [01:09<03:56, 200.25it/s]Running loglikelihood requests:  16%|█▌        | 8833/56168 [01:09<03:55, 201.09it/s]Running loglikelihood requests:  16%|█▌        | 8897/56168 [01:10<03:55, 201.09it/s]Running loglikelihood requests:  16%|█▌        | 8961/56168 [01:10<03:57, 198.43it/s]Running loglikelihood requests:  16%|█▌        | 9025/56168 [01:10<03:53, 202.01it/s]Running loglikelihood requests:  16%|█▌        | 9089/56168 [01:11<03:52, 202.13it/s]Running loglikelihood requests:  16%|█▋        | 9153/56168 [01:11<03:49, 204.90it/s]Running loglikelihood requests:  16%|█▋        | 9217/56168 [01:11<03:47, 206.72it/s]Running loglikelihood requests:  17%|█▋        | 9281/56168 [01:12<03:45, 208.03it/s]Running loglikelihood requests:  17%|█▋        | 9345/56168 [01:12<03:41, 211.19it/s]Running loglikelihood requests:  17%|█▋        | 9409/56168 [01:12<03:41, 211.10it/s]Running loglikelihood requests:  17%|█▋        | 9473/56168 [01:12<03:43, 208.63it/s]Running loglikelihood requests:  17%|█▋        | 9537/56168 [01:13<03:43, 208.33it/s]Running loglikelihood requests:  17%|█▋        | 9601/56168 [01:13<03:39, 212.04it/s]Running loglikelihood requests:  17%|█▋        | 9665/56168 [01:13<03:35, 216.11it/s]Running loglikelihood requests:  17%|█▋        | 9729/56168 [01:14<03:31, 219.19it/s]Running loglikelihood requests:  17%|█▋        | 9793/56168 [01:14<03:30, 220.73it/s]Running loglikelihood requests:  18%|█▊        | 9857/56168 [01:14<03:28, 222.20it/s]Running loglikelihood requests:  18%|█▊        | 9921/56168 [01:14<03:27, 222.90it/s]Running loglikelihood requests:  18%|█▊        | 9985/56168 [01:15<03:26, 223.98it/s]Running loglikelihood requests:  18%|█▊        | 10049/56168 [01:15<03:26, 223.34it/s]Running loglikelihood requests:  18%|█▊        | 10113/56168 [01:15<03:24, 225.54it/s]Running loglikelihood requests:  18%|█▊        | 10177/56168 [01:16<03:22, 227.34it/s]Running loglikelihood requests:  18%|█▊        | 10241/56168 [01:16<03:20, 229.01it/s]Running loglikelihood requests:  18%|█▊        | 10305/56168 [01:16<03:19, 230.16it/s]Running loglikelihood requests:  18%|█▊        | 10369/56168 [01:16<03:19, 229.28it/s]Running loglikelihood requests:  19%|█▊        | 10433/56168 [01:17<03:20, 228.20it/s]Running loglikelihood requests:  19%|█▊        | 10497/56168 [01:17<03:19, 228.53it/s]Running loglikelihood requests:  19%|█▉        | 10561/56168 [01:17<03:21, 226.81it/s]Running loglikelihood requests:  19%|█▉        | 10625/56168 [01:18<03:17, 230.34it/s]Running loglikelihood requests:  19%|█▉        | 10689/56168 [01:18<03:14, 233.31it/s]Running loglikelihood requests:  19%|█▉        | 10753/56168 [01:18<03:12, 235.76it/s]Running loglikelihood requests:  19%|█▉        | 10817/56168 [01:18<03:14, 233.49it/s]Running loglikelihood requests:  19%|█▉        | 10881/56168 [01:19<03:11, 236.19it/s]Running loglikelihood requests:  19%|█▉        | 10945/56168 [01:19<03:11, 236.72it/s]Running loglikelihood requests:  20%|█▉        | 11009/56168 [01:19<03:10, 236.60it/s]Running loglikelihood requests:  20%|█▉        | 11073/56168 [01:19<03:08, 238.84it/s]Running loglikelihood requests:  20%|█▉        | 11137/56168 [01:20<03:05, 242.83it/s]Running loglikelihood requests:  20%|█▉        | 11201/56168 [01:20<03:02, 246.16it/s]Running loglikelihood requests:  20%|██        | 11265/56168 [01:20<03:00, 248.62it/s]Running loglikelihood requests:  20%|██        | 11329/56168 [01:20<03:05, 242.20it/s]Running loglikelihood requests:  20%|██        | 11393/56168 [01:21<03:01, 246.37it/s]Running loglikelihood requests:  20%|██        | 11457/56168 [01:21<03:02, 244.43it/s]Running loglikelihood requests:  21%|██        | 11521/56168 [01:21<02:59, 248.38it/s]Running loglikelihood requests:  21%|██        | 11585/56168 [01:21<02:57, 250.78it/s]Running loglikelihood requests:  21%|██        | 11649/56168 [01:22<02:55, 253.63it/s]Running loglikelihood requests:  21%|██        | 11713/56168 [01:22<02:53, 255.89it/s]Running loglikelihood requests:  21%|██        | 11781/56168 [01:22<02:49, 261.83it/s]Running loglikelihood requests:  21%|██        | 11845/56168 [01:22<02:49, 261.69it/s]Running loglikelihood requests:  21%|██        | 11909/56168 [01:23<02:52, 256.66it/s]Running loglikelihood requests:  21%|██▏       | 11973/56168 [01:23<02:50, 258.61it/s]Running loglikelihood requests:  21%|██▏       | 12037/56168 [01:23<02:49, 259.89it/s]Running loglikelihood requests:  22%|██▏       | 12101/56168 [01:23<02:50, 258.34it/s]Running loglikelihood requests:  22%|██▏       | 12165/56168 [01:24<02:52, 255.55it/s]Running loglikelihood requests:  22%|██▏       | 12229/56168 [01:24<02:50, 258.14it/s]Running loglikelihood requests:  22%|██▏       | 12293/56168 [01:24<02:48, 259.92it/s]Running loglikelihood requests:  22%|██▏       | 12357/56168 [01:24<02:44, 266.26it/s]Running loglikelihood requests:  22%|██▏       | 12421/56168 [01:25<02:40, 271.93it/s]Running loglikelihood requests:  22%|██▏       | 12485/56168 [01:25<02:38, 276.14it/s]Running loglikelihood requests:  22%|██▏       | 12549/56168 [01:25<02:36, 279.25it/s]Running loglikelihood requests:  22%|██▏       | 12613/56168 [01:25<02:34, 281.01it/s]Running loglikelihood requests:  23%|██▎       | 12677/56168 [01:26<02:36, 278.26it/s]Running loglikelihood requests:  23%|██▎       | 12741/56168 [01:26<02:34, 281.67it/s]Running loglikelihood requests:  23%|██▎       | 12805/56168 [01:26<02:32, 284.20it/s]Running loglikelihood requests:  23%|██▎       | 12869/56168 [01:26<02:31, 285.68it/s]Running loglikelihood requests:  23%|██▎       | 12933/56168 [01:26<02:30, 287.51it/s]Running loglikelihood requests:  23%|██▎       | 12997/56168 [01:27<02:29, 288.51it/s]Running loglikelihood requests:  23%|██▎       | 13061/56168 [01:27<02:29, 288.81it/s]Running loglikelihood requests:  23%|██▎       | 13125/56168 [01:27<02:30, 285.08it/s]Running loglikelihood requests:  23%|██▎       | 13189/56168 [01:27<02:29, 287.00it/s]Running loglikelihood requests:  24%|██▎       | 13253/56168 [01:28<02:28, 288.58it/s]Running loglikelihood requests:  24%|██▎       | 13317/56168 [01:28<02:27, 290.31it/s]Running loglikelihood requests:  24%|██▍       | 13381/56168 [01:28<02:26, 291.30it/s]Running loglikelihood requests:  24%|██▍       | 13445/56168 [01:28<02:26, 292.03it/s]Running loglikelihood requests:  24%|██▍       | 13509/56168 [01:28<02:25, 292.72it/s]Running loglikelihood requests:  24%|██▍       | 13573/56168 [01:29<02:26, 291.56it/s]Running loglikelihood requests:  24%|██▍       | 13637/56168 [01:29<02:25, 292.79it/s]Running loglikelihood requests:  24%|██▍       | 13701/56168 [01:29<02:24, 293.39it/s]Running loglikelihood requests:  25%|██▍       | 13765/56168 [01:29<02:25, 292.19it/s]Running loglikelihood requests:  25%|██▍       | 13829/56168 [01:29<02:24, 293.34it/s]Running loglikelihood requests:  25%|██▍       | 13893/56168 [01:30<02:23, 294.33it/s]Running loglikelihood requests:  25%|██▍       | 13957/56168 [01:30<02:23, 294.86it/s]Running loglikelihood requests:  25%|██▍       | 14021/56168 [01:30<02:22, 295.74it/s]Running loglikelihood requests:  25%|██▌       | 14085/56168 [01:30<02:22, 296.19it/s]Running loglikelihood requests:  25%|██▌       | 14149/56168 [01:31<02:21, 296.85it/s]Running loglikelihood requests:  25%|██▌       | 14213/56168 [01:31<02:21, 297.30it/s]Running loglikelihood requests:  25%|██▌       | 14277/56168 [01:31<02:21, 295.27it/s]Running loglikelihood requests:  26%|██▌       | 14341/56168 [01:31<02:21, 296.53it/s]Running loglikelihood requests:  26%|██▌       | 14405/56168 [01:31<02:20, 297.15it/s]Running loglikelihood requests:  26%|██▌       | 14469/56168 [01:32<02:19, 298.22it/s]Running loglikelihood requests:  26%|██▌       | 14533/56168 [01:32<02:19, 299.04it/s]Running loglikelihood requests:  26%|██▌       | 14597/56168 [01:32<02:18, 299.55it/s]Running loglikelihood requests:  26%|██▌       | 14661/56168 [01:32<02:18, 299.82it/s]Running loglikelihood requests:  26%|██▌       | 14725/56168 [01:32<02:18, 299.81it/s]Running loglikelihood requests:  26%|██▋       | 14789/56168 [01:33<02:18, 299.80it/s]Running loglikelihood requests:  26%|██▋       | 14853/56168 [01:33<02:18, 299.20it/s]Running loglikelihood requests:  27%|██▋       | 14917/56168 [01:33<02:17, 299.52it/s]Running loglikelihood requests:  27%|██▋       | 14981/56168 [01:33<02:17, 300.25it/s]Running loglikelihood requests:  27%|██▋       | 15045/56168 [01:34<02:16, 301.05it/s]Running loglikelihood requests:  27%|██▋       | 15109/56168 [01:34<02:16, 300.93it/s]Running loglikelihood requests:  27%|██▋       | 15173/56168 [01:34<02:16, 299.73it/s]Running loglikelihood requests:  27%|██▋       | 15237/56168 [01:34<02:16, 300.87it/s]Running loglikelihood requests:  27%|██▋       | 15301/56168 [01:34<02:15, 302.02it/s]Running loglikelihood requests:  27%|██▋       | 15365/56168 [01:35<02:15, 301.44it/s]Running loglikelihood requests:  27%|██▋       | 15429/56168 [01:35<02:15, 300.87it/s]Running loglikelihood requests:  28%|██▊       | 15493/56168 [01:35<02:14, 301.36it/s]Running loglikelihood requests:  28%|██▊       | 15557/56168 [01:35<02:14, 302.91it/s]Running loglikelihood requests:  28%|██▊       | 15621/56168 [01:35<02:13, 302.69it/s]Running loglikelihood requests:  28%|██▊       | 15685/56168 [01:36<02:13, 303.36it/s]Running loglikelihood requests:  28%|██▊       | 15749/56168 [01:36<02:13, 302.82it/s]Running loglikelihood requests:  28%|██▊       | 15813/56168 [01:36<02:13, 303.27it/s]Running loglikelihood requests:  28%|██▊       | 15877/56168 [01:36<02:12, 304.08it/s]Running loglikelihood requests:  28%|██▊       | 15941/56168 [01:37<02:12, 303.62it/s]Running loglikelihood requests:  28%|██▊       | 16005/56168 [01:37<02:12, 303.91it/s]Running loglikelihood requests:  29%|██▊       | 16069/56168 [01:37<02:12, 303.59it/s]Running loglikelihood requests:  29%|██▊       | 16133/56168 [01:37<02:11, 304.06it/s]Running loglikelihood requests:  29%|██▉       | 16197/56168 [01:37<02:11, 304.25it/s]Running loglikelihood requests:  29%|██▉       | 16261/56168 [01:38<02:11, 304.52it/s]Running loglikelihood requests:  29%|██▉       | 16325/56168 [01:38<02:10, 304.94it/s]Running loglikelihood requests:  29%|██▉       | 16389/56168 [01:38<02:10, 305.29it/s]Running loglikelihood requests:  29%|██▉       | 16453/56168 [01:38<02:09, 305.85it/s]Running loglikelihood requests:  29%|██▉       | 16517/56168 [01:38<02:11, 302.66it/s]Running loglikelihood requests:  30%|██▉       | 16581/56168 [01:39<02:10, 304.38it/s]Running loglikelihood requests:  30%|██▉       | 16645/56168 [01:39<02:09, 304.51it/s]Running loglikelihood requests:  30%|██▉       | 16709/56168 [01:39<02:08, 307.33it/s]Running loglikelihood requests:  30%|██▉       | 16773/56168 [01:39<02:07, 309.40it/s]Running loglikelihood requests:  30%|██▉       | 16837/56168 [01:39<02:06, 311.08it/s]Running loglikelihood requests:  30%|███       | 16901/56168 [01:40<02:05, 311.99it/s]Running loglikelihood requests:  30%|███       | 16965/56168 [01:40<02:05, 312.56it/s]Running loglikelihood requests:  30%|███       | 17029/56168 [01:40<02:05, 311.44it/s]Running loglikelihood requests:  30%|███       | 17093/56168 [01:40<02:05, 311.29it/s]Running loglikelihood requests:  31%|███       | 17157/56168 [01:40<02:05, 311.87it/s]Running loglikelihood requests:  31%|███       | 17221/56168 [01:41<02:04, 312.53it/s]Running loglikelihood requests:  31%|███       | 17285/56168 [01:41<02:04, 313.18it/s]Running loglikelihood requests:  31%|███       | 17349/56168 [01:41<02:03, 313.97it/s]Running loglikelihood requests:  31%|███       | 17413/56168 [01:41<02:03, 314.33it/s]Running loglikelihood requests:  31%|███       | 17477/56168 [01:41<02:02, 314.99it/s]Running loglikelihood requests:  31%|███       | 17541/56168 [01:42<02:02, 315.28it/s]Running loglikelihood requests:  31%|███▏      | 17605/56168 [01:42<02:04, 310.65it/s]Running loglikelihood requests:  31%|███▏      | 17669/56168 [01:42<02:03, 311.56it/s]Running loglikelihood requests:  32%|███▏      | 17733/56168 [01:42<02:03, 312.01it/s]Running loglikelihood requests:  32%|███▏      | 17797/56168 [01:43<02:02, 313.56it/s]Running loglikelihood requests:  32%|███▏      | 17861/56168 [01:43<02:01, 314.39it/s]Running loglikelihood requests:  32%|███▏      | 17925/56168 [01:43<02:01, 316.01it/s]Running loglikelihood requests:  32%|███▏      | 17989/56168 [01:43<02:00, 316.15it/s]Running loglikelihood requests:  32%|███▏      | 18053/56168 [01:43<02:01, 314.59it/s]Running loglikelihood requests:  32%|███▏      | 18117/56168 [01:44<02:05, 303.32it/s]Running loglikelihood requests:  32%|███▏      | 18181/56168 [01:44<02:07, 298.37it/s]Running loglikelihood requests:  32%|███▏      | 18245/56168 [01:44<02:04, 303.78it/s]Running loglikelihood requests:  33%|███▎      | 18309/56168 [01:44<02:02, 308.10it/s]Running loglikelihood requests:  33%|███▎      | 18373/56168 [01:44<02:01, 310.94it/s]Running loglikelihood requests:  33%|███▎      | 18437/56168 [01:45<02:00, 313.74it/s]Running loglikelihood requests:  33%|███▎      | 18501/56168 [01:45<01:59, 315.59it/s]Running loglikelihood requests:  33%|███▎      | 18565/56168 [01:45<01:58, 316.68it/s]Running loglikelihood requests:  33%|███▎      | 18629/56168 [01:45<01:58, 317.21it/s]Running loglikelihood requests:  33%|███▎      | 18693/56168 [01:45<01:58, 317.56it/s]Running loglikelihood requests:  33%|███▎      | 18757/56168 [01:46<01:57, 317.37it/s]Running loglikelihood requests:  34%|███▎      | 18821/56168 [01:46<01:57, 317.73it/s]Running loglikelihood requests:  34%|███▎      | 18885/56168 [01:46<01:57, 318.59it/s]Running loglikelihood requests:  34%|███▎      | 18949/56168 [01:46<01:56, 318.93it/s]Running loglikelihood requests:  34%|███▍      | 19017/56168 [01:46<01:54, 325.00it/s]Running loglikelihood requests:  34%|███▍      | 19081/56168 [01:47<01:56, 317.84it/s]Running loglikelihood requests:  34%|███▍      | 19145/56168 [01:47<01:57, 314.73it/s]Running loglikelihood requests:  34%|███▍      | 19213/56168 [01:47<01:54, 321.98it/s]Running loglikelihood requests:  34%|███▍      | 19277/56168 [01:47<01:57, 314.95it/s]Running loglikelihood requests:  34%|███▍      | 19341/56168 [01:47<01:57, 312.31it/s]Running loglikelihood requests:  35%|███▍      | 19405/56168 [01:48<01:56, 314.96it/s]Running loglikelihood requests:  35%|███▍      | 19469/56168 [01:48<01:55, 317.02it/s]Running loglikelihood requests:  35%|███▍      | 19533/56168 [01:48<01:52, 324.88it/s]Running loglikelihood requests:  35%|███▍      | 19597/56168 [01:48<01:50, 330.94it/s]Running loglikelihood requests:  35%|███▌      | 19661/56168 [01:48<01:49, 334.80it/s]Running loglikelihood requests:  35%|███▌      | 19725/56168 [01:49<01:47, 337.61it/s]Running loglikelihood requests:  35%|███▌      | 19789/56168 [01:49<01:47, 339.26it/s]Running loglikelihood requests:  35%|███▌      | 19853/56168 [01:49<01:46, 341.15it/s]Running loglikelihood requests:  35%|███▌      | 19917/56168 [01:49<01:46, 341.35it/s]Running loglikelihood requests:  36%|███▌      | 19981/56168 [01:49<01:45, 341.93it/s]Running loglikelihood requests:  36%|███▌      | 20045/56168 [01:49<01:45, 343.05it/s]Running loglikelihood requests:  36%|███▌      | 20109/56168 [01:50<01:45, 343.35it/s]Running loglikelihood requests:  36%|███▌      | 20173/56168 [01:50<01:44, 344.94it/s]Running loglikelihood requests:  36%|███▌      | 20237/56168 [01:50<01:43, 346.44it/s]Running loglikelihood requests:  36%|███▌      | 20301/56168 [01:50<01:43, 348.08it/s]Running loglikelihood requests:  36%|███▋      | 20365/56168 [01:50<01:42, 349.31it/s]Running loglikelihood requests:  36%|███▋      | 20429/56168 [01:51<01:42, 349.91it/s]Running loglikelihood requests:  36%|███▋      | 20493/56168 [01:51<01:41, 349.90it/s]Running loglikelihood requests:  37%|███▋      | 20557/56168 [01:51<01:42, 348.88it/s]Running loglikelihood requests:  37%|███▋      | 20621/56168 [01:51<01:41, 349.26it/s]Running loglikelihood requests:  37%|███▋      | 20693/56168 [01:51<01:37, 362.41it/s]Running loglikelihood requests:  37%|███▋      | 20757/56168 [01:51<01:38, 359.13it/s]Running loglikelihood requests:  37%|███▋      | 20821/56168 [01:52<01:39, 356.77it/s]Running loglikelihood requests:  37%|███▋      | 20885/56168 [01:52<01:41, 348.32it/s]Running loglikelihood requests:  37%|███▋      | 20949/56168 [01:52<01:40, 348.87it/s]Running loglikelihood requests:  37%|███▋      | 21013/56168 [01:52<01:40, 349.87it/s]Running loglikelihood requests:  38%|███▊      | 21077/56168 [01:52<01:40, 349.24it/s]Running loglikelihood requests:  38%|███▊      | 21141/56168 [01:53<01:41, 345.65it/s]Running loglikelihood requests:  38%|███▊      | 21205/56168 [01:53<01:40, 347.47it/s]Running loglikelihood requests:  38%|███▊      | 21269/56168 [01:53<01:39, 349.24it/s]Running loglikelihood requests:  38%|███▊      | 21333/56168 [01:53<01:39, 350.07it/s]Running loglikelihood requests:  38%|███▊      | 21397/56168 [01:53<01:39, 349.72it/s]Running loglikelihood requests:  38%|███▊      | 21461/56168 [01:54<01:41, 341.64it/s]Running loglikelihood requests:  38%|███▊      | 21525/56168 [01:54<01:40, 344.93it/s]Running loglikelihood requests:  38%|███▊      | 21589/56168 [01:54<01:39, 347.26it/s]Running loglikelihood requests:  39%|███▊      | 21653/56168 [01:54<01:39, 347.87it/s]Running loglikelihood requests:  39%|███▊      | 21717/56168 [01:54<01:39, 347.64it/s]Running loglikelihood requests:  39%|███▉      | 21781/56168 [01:54<01:38, 348.05it/s]Running loglikelihood requests:  39%|███▉      | 21845/56168 [01:55<01:38, 348.37it/s]Running loglikelihood requests:  39%|███▉      | 21909/56168 [01:55<01:38, 348.15it/s]Running loglikelihood requests:  39%|███▉      | 21973/56168 [01:55<01:37, 352.07it/s]Running loglikelihood requests:  39%|███▉      | 22037/56168 [01:55<01:35, 355.55it/s]Running loglikelihood requests:  39%|███▉      | 22101/56168 [01:55<01:34, 358.61it/s]Running loglikelihood requests:  39%|███▉      | 22177/56168 [01:56<01:29, 377.81it/s]Running loglikelihood requests:  40%|███▉      | 22241/56168 [01:56<01:31, 372.68it/s]Running loglikelihood requests:  40%|███▉      | 22305/56168 [01:56<01:31, 369.49it/s]Running loglikelihood requests:  40%|███▉      | 22369/56168 [01:56<01:31, 367.67it/s]Running loglikelihood requests:  40%|███▉      | 22433/56168 [01:56<01:32, 365.63it/s]Running loglikelihood requests:  40%|████      | 22497/56168 [01:56<01:32, 362.44it/s]Running loglikelihood requests:  40%|████      | 22561/56168 [01:57<01:32, 361.95it/s]Running loglikelihood requests:  40%|████      | 22625/56168 [01:57<01:32, 363.19it/s]Running loglikelihood requests:  40%|████      | 22689/56168 [01:57<01:32, 363.36it/s]Running loglikelihood requests:  41%|████      | 22753/56168 [01:57<01:31, 363.67it/s]Running loglikelihood requests:  41%|████      | 22817/56168 [01:57<01:32, 360.88it/s]Running loglikelihood requests:  41%|████      | 22881/56168 [01:57<01:31, 362.26it/s]Running loglikelihood requests:  41%|████      | 22945/56168 [01:58<01:31, 362.56it/s]Running loglikelihood requests:  41%|████      | 23009/56168 [01:58<01:31, 363.05it/s]Running loglikelihood requests:  41%|████      | 23073/56168 [01:58<01:30, 363.73it/s]Running loglikelihood requests:  41%|████      | 23137/56168 [01:58<01:33, 353.99it/s]Running loglikelihood requests:  41%|████▏     | 23201/56168 [01:58<01:32, 355.97it/s]Running loglikelihood requests:  41%|████▏     | 23265/56168 [01:59<01:31, 358.98it/s]Running loglikelihood requests:  42%|████▏     | 23329/56168 [01:59<01:31, 360.34it/s]Running loglikelihood requests:  42%|████▏     | 23393/56168 [01:59<01:30, 360.77it/s]Running loglikelihood requests:  42%|████▏     | 23457/56168 [01:59<01:30, 362.22it/s]Running loglikelihood requests:  42%|████▏     | 23521/56168 [01:59<01:29, 363.84it/s]Running loglikelihood requests:  42%|████▏     | 23585/56168 [01:59<01:31, 357.44it/s]Running loglikelihood requests:  42%|████▏     | 23649/56168 [02:00<01:33, 348.64it/s]Running loglikelihood requests:  42%|████▏     | 23713/56168 [02:00<01:31, 353.24it/s]Running loglikelihood requests:  42%|████▏     | 23777/56168 [02:00<01:30, 357.29it/s]Running loglikelihood requests:  42%|████▏     | 23841/56168 [02:00<01:29, 360.25it/s]Running loglikelihood requests:  43%|████▎     | 23905/56168 [02:00<01:38, 328.15it/s]Running loglikelihood requests:  43%|████▎     | 23969/56168 [02:01<01:34, 339.35it/s]Running loglikelihood requests:  43%|████▎     | 24033/56168 [02:01<01:32, 347.38it/s]Running loglikelihood requests:  43%|████▎     | 24097/56168 [02:01<01:30, 352.50it/s]Running loglikelihood requests:  43%|████▎     | 24161/56168 [02:01<01:29, 359.18it/s]Running loglikelihood requests:  43%|████▎     | 24225/56168 [02:01<01:27, 364.13it/s]Running loglikelihood requests:  43%|████▎     | 24289/56168 [02:01<01:26, 368.40it/s]Running loglikelihood requests:  43%|████▎     | 24353/56168 [02:02<01:25, 372.07it/s]Running loglikelihood requests:  43%|████▎     | 24417/56168 [02:02<01:24, 374.02it/s]Running loglikelihood requests:  44%|████▎     | 24481/56168 [02:02<01:24, 376.11it/s]Running loglikelihood requests:  44%|████▎     | 24545/56168 [02:02<01:23, 377.52it/s]Running loglikelihood requests:  44%|████▍     | 24609/56168 [02:02<01:23, 376.44it/s]Running loglikelihood requests:  44%|████▍     | 24673/56168 [02:02<01:23, 377.70it/s]Running loglikelihood requests:  44%|████▍     | 24737/56168 [02:03<01:23, 378.29it/s]Running loglikelihood requests:  44%|████▍     | 24801/56168 [02:03<01:22, 379.37it/s]Running loglikelihood requests:  44%|████▍     | 24865/56168 [02:03<01:22, 380.34it/s]Running loglikelihood requests:  44%|████▍     | 24929/56168 [02:03<01:21, 381.00it/s]Running loglikelihood requests:  44%|████▍     | 24993/56168 [02:03<01:21, 381.31it/s]Running loglikelihood requests:  45%|████▍     | 25057/56168 [02:03<01:21, 382.29it/s]Running loglikelihood requests:  45%|████▍     | 25121/56168 [02:04<01:20, 383.63it/s]Running loglikelihood requests:  45%|████▍     | 25185/56168 [02:04<01:20, 382.76it/s]Running loglikelihood requests:  45%|████▍     | 25249/56168 [02:04<01:20, 382.51it/s]Running loglikelihood requests:  45%|████▌     | 25313/56168 [02:04<01:20, 383.02it/s]Running loglikelihood requests:  45%|████▌     | 25377/56168 [02:04<01:20, 381.62it/s]Running loglikelihood requests:  45%|████▌     | 25441/56168 [02:04<01:20, 381.91it/s]Running loglikelihood requests:  45%|████▌     | 25505/56168 [02:05<01:20, 381.12it/s]Running loglikelihood requests:  46%|████▌     | 25569/56168 [02:05<01:20, 380.56it/s]Running loglikelihood requests:  46%|████▌     | 25633/56168 [02:05<01:20, 381.17it/s]Running loglikelihood requests:  46%|████▌     | 25697/56168 [02:05<01:19, 381.68it/s]Running loglikelihood requests:  46%|████▌     | 25765/56168 [02:05<01:18, 387.57it/s]Running loglikelihood requests:  46%|████▌     | 25829/56168 [02:05<01:18, 385.73it/s]Running loglikelihood requests:  46%|████▌     | 25893/56168 [02:06<01:18, 386.16it/s]Running loglikelihood requests:  46%|████▌     | 25957/56168 [02:06<01:18, 384.61it/s]Running loglikelihood requests:  46%|████▋     | 26021/56168 [02:06<01:18, 382.12it/s]Running loglikelihood requests:  46%|████▋     | 26085/56168 [02:06<01:18, 382.10it/s]Running loglikelihood requests:  47%|████▋     | 26149/56168 [02:06<01:18, 383.38it/s]Running loglikelihood requests:  47%|████▋     | 26213/56168 [02:06<01:17, 384.75it/s]Running loglikelihood requests:  47%|████▋     | 26277/56168 [02:07<01:17, 384.01it/s]Running loglikelihood requests:  47%|████▋     | 26341/56168 [02:07<01:17, 383.59it/s]Running loglikelihood requests:  47%|████▋     | 26405/56168 [02:07<01:17, 384.67it/s]Running loglikelihood requests:  47%|████▋     | 26469/56168 [02:07<01:17, 385.55it/s]Running loglikelihood requests:  47%|████▋     | 26533/56168 [02:07<01:16, 385.71it/s]Running loglikelihood requests:  47%|████▋     | 26597/56168 [02:07<01:16, 385.99it/s]Running loglikelihood requests:  47%|████▋     | 26661/56168 [02:08<01:16, 386.73it/s]Running loglikelihood requests:  48%|████▊     | 26725/56168 [02:08<01:16, 386.97it/s]Running loglikelihood requests:  48%|████▊     | 26789/56168 [02:08<01:14, 395.80it/s]Running loglikelihood requests:  48%|████▊     | 26853/56168 [02:08<01:13, 401.14it/s]Running loglikelihood requests:  48%|████▊     | 26917/56168 [02:08<01:12, 404.39it/s]Running loglikelihood requests:  48%|████▊     | 26981/56168 [02:08<01:11, 408.37it/s]Running loglikelihood requests:  48%|████▊     | 27045/56168 [02:09<01:10, 410.74it/s]Running loglikelihood requests:  48%|████▊     | 27109/56168 [02:09<01:10, 412.52it/s]Running loglikelihood requests:  48%|████▊     | 27173/56168 [02:09<01:09, 414.74it/s]Running loglikelihood requests:  48%|████▊     | 27237/56168 [02:09<01:09, 413.34it/s]Running loglikelihood requests:  49%|████▊     | 27301/56168 [02:09<01:11, 406.11it/s]Running loglikelihood requests:  49%|████▊     | 27365/56168 [02:09<01:11, 401.21it/s]Running loglikelihood requests:  49%|████▉     | 27429/56168 [02:10<01:14, 385.46it/s]Running loglikelihood requests:  49%|████▉     | 27493/56168 [02:10<01:13, 392.17it/s]Running loglikelihood requests:  49%|████▉     | 27557/56168 [02:10<01:12, 392.01it/s]Running loglikelihood requests:  49%|████▉     | 27621/56168 [02:10<01:11, 399.74it/s]Running loglikelihood requests:  49%|████▉     | 27685/56168 [02:10<01:10, 404.46it/s]Running loglikelihood requests:  49%|████▉     | 27749/56168 [02:10<01:09, 407.82it/s]Running loglikelihood requests:  50%|████▉     | 27813/56168 [02:10<01:08, 412.25it/s]Running loglikelihood requests:  50%|████▉     | 27877/56168 [02:11<01:07, 416.24it/s]Running loglikelihood requests:  50%|████▉     | 27945/56168 [02:11<01:06, 427.29it/s]Running loglikelihood requests:  50%|████▉     | 28009/56168 [02:11<01:06, 426.33it/s]Running loglikelihood requests:  50%|████▉     | 28073/56168 [02:11<01:05, 426.36it/s]Running loglikelihood requests:  50%|█████     | 28137/56168 [02:11<01:05, 425.87it/s]Running loglikelihood requests:  50%|█████     | 28201/56168 [02:11<01:06, 418.61it/s]Running loglikelihood requests:  50%|█████     | 28265/56168 [02:12<01:06, 419.89it/s]Running loglikelihood requests:  50%|█████     | 28329/56168 [02:12<01:09, 400.80it/s]Running loglikelihood requests:  51%|█████     | 28393/56168 [02:12<01:07, 410.06it/s]Running loglikelihood requests:  51%|█████     | 28457/56168 [02:12<01:06, 415.40it/s]Running loglikelihood requests:  51%|█████     | 28521/56168 [02:12<01:06, 417.26it/s]Running loglikelihood requests:  51%|█████     | 28585/56168 [02:12<01:06, 415.57it/s]Running loglikelihood requests:  51%|█████     | 28649/56168 [02:12<01:05, 417.72it/s]Running loglikelihood requests:  51%|█████     | 28713/56168 [02:13<01:05, 420.53it/s]Running loglikelihood requests:  51%|█████     | 28777/56168 [02:13<01:04, 423.28it/s]Running loglikelihood requests:  51%|█████▏    | 28841/56168 [02:13<01:04, 426.65it/s]Running loglikelihood requests:  51%|█████▏    | 28905/56168 [02:13<01:03, 426.76it/s]Running loglikelihood requests:  52%|█████▏    | 28973/56168 [02:13<01:02, 436.11it/s]Running loglikelihood requests:  52%|█████▏    | 29037/56168 [02:13<01:02, 434.27it/s]Running loglikelihood requests:  52%|█████▏    | 29101/56168 [02:13<01:02, 432.89it/s]Running loglikelihood requests:  52%|█████▏    | 29165/56168 [02:14<01:02, 431.33it/s]Running loglikelihood requests:  52%|█████▏    | 29229/56168 [02:14<01:03, 425.20it/s]Running loglikelihood requests:  52%|█████▏    | 29293/56168 [02:14<01:06, 404.15it/s]Running loglikelihood requests:  52%|█████▏    | 29357/56168 [02:14<01:04, 412.84it/s]Running loglikelihood requests:  52%|█████▏    | 29421/56168 [02:14<01:05, 409.08it/s]Running loglikelihood requests:  52%|█████▏    | 29485/56168 [02:14<01:04, 413.92it/s]Running loglikelihood requests:  53%|█████▎    | 29549/56168 [02:15<01:05, 404.82it/s]Running loglikelihood requests:  53%|█████▎    | 29613/56168 [02:15<01:04, 411.79it/s]Running loglikelihood requests:  53%|█████▎    | 29677/56168 [02:15<01:03, 419.09it/s]Running loglikelihood requests:  53%|█████▎    | 29741/56168 [02:15<01:02, 424.02it/s]Running loglikelihood requests:  53%|█████▎    | 29805/56168 [02:15<01:01, 426.40it/s]Running loglikelihood requests:  53%|█████▎    | 29869/56168 [02:15<01:01, 427.27it/s]Running loglikelihood requests:  53%|█████▎    | 29933/56168 [02:15<01:02, 417.65it/s]Running loglikelihood requests:  53%|█████▎    | 29997/56168 [02:16<01:01, 425.34it/s]Running loglikelihood requests:  54%|█████▎    | 30061/56168 [02:16<01:01, 423.60it/s]Running loglikelihood requests:  54%|█████▎    | 30125/56168 [02:16<01:01, 420.58it/s]Running loglikelihood requests:  54%|█████▎    | 30189/56168 [02:16<01:03, 406.05it/s]Running loglikelihood requests:  54%|█████▍    | 30253/56168 [02:16<01:08, 376.65it/s]Running loglikelihood requests:  54%|█████▍    | 30317/56168 [02:16<01:10, 367.07it/s]Running loglikelihood requests:  54%|█████▍    | 30381/56168 [02:17<01:06, 385.25it/s]Running loglikelihood requests:  54%|█████▍    | 30445/56168 [02:17<01:04, 400.49it/s]Running loglikelihood requests:  54%|█████▍    | 30509/56168 [02:17<01:02, 412.45it/s]Running loglikelihood requests:  54%|█████▍    | 30573/56168 [02:17<01:00, 420.56it/s]Running loglikelihood requests:  55%|█████▍    | 30637/56168 [02:17<00:59, 428.05it/s]Running loglikelihood requests:  55%|█████▍    | 30701/56168 [02:17<00:58, 432.86it/s]Running loglikelihood requests:  55%|█████▍    | 30765/56168 [02:18<00:58, 436.77it/s]Running loglikelihood requests:  55%|█████▍    | 30829/56168 [02:18<00:58, 436.43it/s]Running loglikelihood requests:  55%|█████▌    | 30893/56168 [02:18<00:57, 438.89it/s]Running loglikelihood requests:  55%|█████▌    | 30957/56168 [02:18<00:57, 440.73it/s]Running loglikelihood requests:  55%|█████▌    | 31021/56168 [02:18<00:57, 439.93it/s]Running loglikelihood requests:  55%|█████▌    | 31085/56168 [02:18<00:59, 423.77it/s]Running loglikelihood requests:  55%|█████▌    | 31149/56168 [02:18<00:58, 426.22it/s]Running loglikelihood requests:  56%|█████▌    | 31213/56168 [02:19<00:57, 432.62it/s]Running loglikelihood requests:  56%|█████▌    | 31277/56168 [02:19<00:56, 438.42it/s]Running loglikelihood requests:  56%|█████▌    | 31341/56168 [02:19<00:56, 441.76it/s]Running loglikelihood requests:  56%|█████▌    | 31405/56168 [02:19<00:55, 443.15it/s]Running loglikelihood requests:  56%|█████▌    | 31469/56168 [02:19<00:55, 444.78it/s]Running loglikelihood requests:  56%|█████▌    | 31533/56168 [02:19<00:55, 447.01it/s]Running loglikelihood requests:  56%|█████▋    | 31597/56168 [02:19<00:54, 448.44it/s]Running loglikelihood requests:  56%|█████▋    | 31661/56168 [02:20<00:54, 449.59it/s]Running loglikelihood requests:  56%|█████▋    | 31725/56168 [02:20<00:54, 450.14it/s]Running loglikelihood requests:  57%|█████▋    | 31789/56168 [02:20<00:54, 448.77it/s]Running loglikelihood requests:  57%|█████▋    | 31853/56168 [02:20<00:54, 448.91it/s]Running loglikelihood requests:  57%|█████▋    | 31917/56168 [02:20<00:56, 429.06it/s]Running loglikelihood requests:  57%|█████▋    | 31981/56168 [02:20<00:55, 435.00it/s]Running loglikelihood requests:  57%|█████▋    | 32045/56168 [02:20<00:54, 439.50it/s]Running loglikelihood requests:  57%|█████▋    | 32109/56168 [02:21<00:54, 443.34it/s]Running loglikelihood requests:  57%|█████▋    | 32177/56168 [02:21<00:52, 455.60it/s]Running loglikelihood requests:  57%|█████▋    | 32241/56168 [02:21<00:52, 455.82it/s]Running loglikelihood requests:  58%|█████▊    | 32305/56168 [02:21<00:52, 455.73it/s]Running loglikelihood requests:  58%|█████▊    | 32369/56168 [02:21<00:51, 459.10it/s]Running loglikelihood requests:  58%|█████▊    | 32433/56168 [02:21<00:51, 460.76it/s]Running loglikelihood requests:  58%|█████▊    | 32497/56168 [02:21<00:51, 462.09it/s]Running loglikelihood requests:  58%|█████▊    | 32561/56168 [02:22<00:51, 462.86it/s]Running loglikelihood requests:  58%|█████▊    | 32625/56168 [02:22<00:50, 464.14it/s]Running loglikelihood requests:  58%|█████▊    | 32689/56168 [02:22<00:50, 464.84it/s]Running loglikelihood requests:  58%|█████▊    | 32757/56168 [02:22<00:49, 469.97it/s]Running loglikelihood requests:  58%|█████▊    | 32821/56168 [02:22<00:49, 467.70it/s]Running loglikelihood requests:  59%|█████▊    | 32885/56168 [02:22<00:49, 466.64it/s]Running loglikelihood requests:  59%|█████▊    | 32953/56168 [02:22<00:48, 475.43it/s]Running loglikelihood requests:  59%|█████▉    | 33017/56168 [02:22<00:48, 474.33it/s]Running loglikelihood requests:  59%|█████▉    | 33081/56168 [02:23<00:48, 472.12it/s]Running loglikelihood requests:  59%|█████▉    | 33145/56168 [02:23<00:48, 470.23it/s]Running loglikelihood requests:  59%|█████▉    | 33209/56168 [02:23<00:48, 469.77it/s]Running loglikelihood requests:  59%|█████▉    | 33273/56168 [02:23<00:48, 470.95it/s]Running loglikelihood requests:  59%|█████▉    | 33337/56168 [02:23<00:48, 470.46it/s]Running loglikelihood requests:  59%|█████▉    | 33401/56168 [02:23<00:48, 469.32it/s]Running loglikelihood requests:  60%|█████▉    | 33465/56168 [02:23<00:48, 470.20it/s]Running loglikelihood requests:  60%|█████▉    | 33529/56168 [02:24<00:48, 469.99it/s]Running loglikelihood requests:  60%|█████▉    | 33593/56168 [02:24<00:48, 468.35it/s]Running loglikelihood requests:  60%|█████▉    | 33657/56168 [02:24<00:48, 466.84it/s]Running loglikelihood requests:  60%|██████    | 33721/56168 [02:24<00:48, 466.76it/s]Running loglikelihood requests:  60%|██████    | 33785/56168 [02:24<00:47, 469.16it/s]Running loglikelihood requests:  60%|██████    | 33849/56168 [02:24<00:47, 471.36it/s]Running loglikelihood requests:  60%|██████    | 33913/56168 [02:24<00:47, 472.02it/s]Running loglikelihood requests:  60%|██████    | 33977/56168 [02:25<00:46, 474.36it/s]Running loglikelihood requests:  61%|██████    | 34041/56168 [02:25<00:46, 474.71it/s]Running loglikelihood requests:  61%|██████    | 34109/56168 [02:25<00:45, 482.22it/s]Running loglikelihood requests:  61%|██████    | 34173/56168 [02:25<00:45, 479.44it/s]Running loglikelihood requests:  61%|██████    | 34237/56168 [02:25<00:45, 478.03it/s]Running loglikelihood requests:  61%|██████    | 34301/56168 [02:25<00:45, 476.42it/s]Running loglikelihood requests:  61%|██████    | 34365/56168 [02:25<00:46, 471.42it/s]Running loglikelihood requests:  61%|██████▏   | 34429/56168 [02:25<00:46, 472.28it/s]Running loglikelihood requests:  61%|██████▏   | 34493/56168 [02:26<00:45, 471.55it/s]Running loglikelihood requests:  62%|██████▏   | 34557/56168 [02:26<00:45, 470.63it/s]Running loglikelihood requests:  62%|██████▏   | 34621/56168 [02:26<00:45, 473.17it/s]Running loglikelihood requests:  62%|██████▏   | 34685/56168 [02:26<00:45, 474.36it/s]Running loglikelihood requests:  62%|██████▏   | 34749/56168 [02:26<00:45, 474.43it/s]Running loglikelihood requests:  62%|██████▏   | 34813/56168 [02:26<00:44, 476.87it/s]Running loglikelihood requests:  62%|██████▏   | 34877/56168 [02:26<00:44, 477.69it/s]Running loglikelihood requests:  62%|██████▏   | 34941/56168 [02:27<00:44, 478.77it/s]Running loglikelihood requests:  62%|██████▏   | 35005/56168 [02:27<00:44, 479.04it/s]Running loglikelihood requests:  62%|██████▏   | 35069/56168 [02:27<00:44, 476.94it/s]Running loglikelihood requests:  63%|██████▎   | 35133/56168 [02:27<00:43, 478.69it/s]Running loglikelihood requests:  63%|██████▎   | 35197/56168 [02:27<00:43, 479.61it/s]Running loglikelihood requests:  63%|██████▎   | 35261/56168 [02:27<00:44, 473.72it/s]Running loglikelihood requests:  63%|██████▎   | 35325/56168 [02:27<00:46, 446.95it/s]Running loglikelihood requests:  63%|██████▎   | 35389/56168 [02:28<00:45, 455.85it/s]Running loglikelihood requests:  63%|██████▎   | 35453/56168 [02:28<00:44, 463.96it/s]Running loglikelihood requests:  63%|██████▎   | 35517/56168 [02:28<00:44, 468.06it/s]Running loglikelihood requests:  63%|██████▎   | 35581/56168 [02:28<00:43, 472.41it/s]Running loglikelihood requests:  63%|██████▎   | 35645/56168 [02:28<00:43, 475.12it/s]Running loglikelihood requests:  64%|██████▎   | 35709/56168 [02:28<00:42, 475.94it/s]Running loglikelihood requests:  64%|██████▎   | 35773/56168 [02:28<00:42, 477.57it/s]Running loglikelihood requests:  64%|██████▍   | 35837/56168 [02:28<00:42, 476.94it/s]Running loglikelihood requests:  64%|██████▍   | 35901/56168 [02:29<00:42, 477.73it/s]Running loglikelihood requests:  64%|██████▍   | 35965/56168 [02:29<00:42, 478.92it/s]Running loglikelihood requests:  64%|██████▍   | 36029/56168 [02:29<00:41, 480.28it/s]Running loglikelihood requests:  64%|██████▍   | 36093/56168 [02:29<00:41, 480.74it/s]Running loglikelihood requests:  64%|██████▍   | 36157/56168 [02:29<00:41, 479.69it/s]Running loglikelihood requests:  64%|██████▍   | 36221/56168 [02:29<00:41, 478.39it/s]Running loglikelihood requests:  65%|██████▍   | 36285/56168 [02:29<00:41, 477.33it/s]Running loglikelihood requests:  65%|██████▍   | 36349/56168 [02:30<00:41, 478.05it/s]Running loglikelihood requests:  65%|██████▍   | 36413/56168 [02:30<00:41, 480.48it/s]Running loglikelihood requests:  65%|██████▍   | 36477/56168 [02:30<00:40, 480.55it/s]Running loglikelihood requests:  65%|██████▌   | 36541/56168 [02:30<00:40, 482.48it/s]Running loglikelihood requests:  65%|██████▌   | 36605/56168 [02:30<00:40, 483.20it/s]Running loglikelihood requests:  65%|██████▌   | 36669/56168 [02:30<00:40, 484.46it/s]Running loglikelihood requests:  65%|██████▌   | 36733/56168 [02:30<00:40, 484.25it/s]Running loglikelihood requests:  66%|██████▌   | 36797/56168 [02:30<00:39, 485.05it/s]Running loglikelihood requests:  66%|██████▌   | 36861/56168 [02:31<00:40, 477.96it/s]Running loglikelihood requests:  66%|██████▌   | 36925/56168 [02:31<00:39, 482.47it/s]Running loglikelihood requests:  66%|██████▌   | 36989/56168 [02:31<00:40, 477.22it/s]Running loglikelihood requests:  66%|██████▌   | 37053/56168 [02:31<00:40, 473.33it/s]Running loglikelihood requests:  66%|██████▌   | 37117/56168 [02:31<00:39, 476.40it/s]Running loglikelihood requests:  66%|██████▌   | 37189/56168 [02:31<00:38, 496.00it/s]Running loglikelihood requests:  66%|██████▋   | 37253/56168 [02:31<00:38, 492.80it/s]Running loglikelihood requests:  66%|██████▋   | 37317/56168 [02:32<00:38, 490.98it/s]Running loglikelihood requests:  67%|██████▋   | 37381/56168 [02:32<00:38, 488.92it/s]Running loglikelihood requests:  67%|██████▋   | 37445/56168 [02:32<00:38, 488.59it/s]Running loglikelihood requests:  67%|██████▋   | 37509/56168 [02:32<00:38, 486.80it/s]Running loglikelihood requests:  67%|██████▋   | 37573/56168 [02:32<00:38, 487.07it/s]Running loglikelihood requests:  67%|██████▋   | 37637/56168 [02:32<00:37, 487.94it/s]Running loglikelihood requests:  67%|██████▋   | 37701/56168 [02:32<00:38, 481.95it/s]Running loglikelihood requests:  67%|██████▋   | 37765/56168 [02:32<00:37, 486.46it/s]Running loglikelihood requests:  67%|██████▋   | 37829/56168 [02:33<00:38, 475.79it/s]Running loglikelihood requests:  67%|██████▋   | 37893/56168 [02:33<00:38, 477.33it/s]Running loglikelihood requests:  68%|██████▊   | 37957/56168 [02:33<00:37, 480.19it/s]Running loglikelihood requests:  68%|██████▊   | 38021/56168 [02:33<00:37, 479.79it/s]Running loglikelihood requests:  68%|██████▊   | 38085/56168 [02:33<00:37, 483.76it/s]Running loglikelihood requests:  68%|██████▊   | 38149/56168 [02:33<00:37, 482.27it/s]Running loglikelihood requests:  68%|██████▊   | 38213/56168 [02:33<00:35, 500.13it/s]Running loglikelihood requests:  68%|██████▊   | 38277/56168 [02:33<00:35, 510.13it/s]Running loglikelihood requests:  68%|██████▊   | 38341/56168 [02:34<00:34, 517.94it/s]Running loglikelihood requests:  68%|██████▊   | 38405/56168 [02:34<00:33, 523.94it/s]Running loglikelihood requests:  68%|██████▊   | 38469/56168 [02:34<00:33, 528.65it/s]Running loglikelihood requests:  69%|██████▊   | 38533/56168 [02:34<00:33, 532.47it/s]Running loglikelihood requests:  69%|██████▊   | 38597/56168 [02:34<00:32, 538.07it/s]Running loglikelihood requests:  69%|██████▉   | 38661/56168 [02:34<00:32, 542.62it/s]Running loglikelihood requests:  69%|██████▉   | 38725/56168 [02:34<00:31, 545.95it/s]Running loglikelihood requests:  69%|██████▉   | 38789/56168 [02:34<00:32, 528.97it/s]Running loglikelihood requests:  69%|██████▉   | 38853/56168 [02:35<00:33, 514.72it/s]Running loglikelihood requests:  69%|██████▉   | 38917/56168 [02:35<00:32, 525.20it/s]Running loglikelihood requests:  69%|██████▉   | 38981/56168 [02:35<00:35, 484.53it/s]Running loglikelihood requests:  70%|██████▉   | 39045/56168 [02:35<00:35, 485.04it/s]Running loglikelihood requests:  70%|██████▉   | 39109/56168 [02:35<00:33, 502.06it/s]Running loglikelihood requests:  70%|██████▉   | 39173/56168 [02:35<00:33, 513.43it/s]Running loglikelihood requests:  70%|██████▉   | 39237/56168 [02:35<00:33, 500.83it/s]Running loglikelihood requests:  70%|██████▉   | 39301/56168 [02:35<00:33, 496.47it/s]Running loglikelihood requests:  70%|███████   | 39365/56168 [02:36<00:32, 510.27it/s]Running loglikelihood requests:  70%|███████   | 39429/56168 [02:36<00:32, 520.34it/s]Running loglikelihood requests:  70%|███████   | 39493/56168 [02:36<00:31, 529.49it/s]Running loglikelihood requests:  70%|███████   | 39557/56168 [02:36<00:31, 533.93it/s]Running loglikelihood requests:  71%|███████   | 39621/56168 [02:36<00:30, 538.35it/s]Running loglikelihood requests:  71%|███████   | 39685/56168 [02:36<00:30, 542.09it/s]Running loglikelihood requests:  71%|███████   | 39749/56168 [02:36<00:30, 545.22it/s]Running loglikelihood requests:  71%|███████   | 39813/56168 [02:36<00:29, 546.29it/s]Running loglikelihood requests:  71%|███████   | 39877/56168 [02:37<00:29, 547.58it/s]Running loglikelihood requests:  71%|███████   | 39941/56168 [02:37<00:30, 536.10it/s]Running loglikelihood requests:  71%|███████   | 40005/56168 [02:37<00:31, 519.68it/s]Running loglikelihood requests:  71%|███████▏  | 40069/56168 [02:37<00:30, 531.39it/s]Running loglikelihood requests:  71%|███████▏  | 40133/56168 [02:37<00:29, 534.76it/s]Running loglikelihood requests:  72%|███████▏  | 40201/56168 [02:37<00:28, 552.97it/s]Running loglikelihood requests:  72%|███████▏  | 40265/56168 [02:37<00:28, 554.12it/s]Running loglikelihood requests:  72%|███████▏  | 40329/56168 [02:37<00:31, 507.34it/s]Running loglikelihood requests:  72%|███████▏  | 40393/56168 [02:38<00:30, 523.58it/s]Running loglikelihood requests:  72%|███████▏  | 40457/56168 [02:38<00:29, 531.18it/s]Running loglikelihood requests:  72%|███████▏  | 40525/56168 [02:38<00:28, 544.95it/s]Running loglikelihood requests:  72%|███████▏  | 40589/56168 [02:38<00:28, 544.22it/s]Running loglikelihood requests:  72%|███████▏  | 40653/56168 [02:38<00:28, 546.05it/s]Running loglikelihood requests:  72%|███████▏  | 40717/56168 [02:38<00:28, 547.26it/s]Running loglikelihood requests:  73%|███████▎  | 40781/56168 [02:38<00:28, 547.24it/s]Running loglikelihood requests:  73%|███████▎  | 40845/56168 [02:38<00:28, 543.89it/s]Running loglikelihood requests:  73%|███████▎  | 40909/56168 [02:38<00:28, 543.90it/s]Running loglikelihood requests:  73%|███████▎  | 40973/56168 [02:39<00:27, 544.30it/s]Running loglikelihood requests:  73%|███████▎  | 41037/56168 [02:39<00:27, 546.16it/s]Running loglikelihood requests:  73%|███████▎  | 41101/56168 [02:39<00:27, 546.18it/s]Running loglikelihood requests:  73%|███████▎  | 41165/56168 [02:39<00:28, 522.75it/s]Running loglikelihood requests:  73%|███████▎  | 41229/56168 [02:39<00:29, 512.63it/s]Running loglikelihood requests:  74%|███████▎  | 41293/56168 [02:39<00:28, 518.35it/s]Running loglikelihood requests:  74%|███████▎  | 41357/56168 [02:39<00:29, 510.70it/s]Running loglikelihood requests:  74%|███████▎  | 41421/56168 [02:39<00:31, 464.79it/s]Running loglikelihood requests:  74%|███████▍  | 41485/56168 [02:40<00:36, 405.94it/s]Running loglikelihood requests:  74%|███████▍  | 41549/56168 [02:40<00:35, 410.77it/s]Running loglikelihood requests:  74%|███████▍  | 41613/56168 [02:40<00:33, 439.25it/s]Running loglikelihood requests:  74%|███████▍  | 41677/56168 [02:40<00:31, 466.18it/s]Running loglikelihood requests:  74%|███████▍  | 41741/56168 [02:40<00:29, 486.97it/s]Running loglikelihood requests:  74%|███████▍  | 41805/56168 [02:40<00:28, 502.58it/s]Running loglikelihood requests:  75%|███████▍  | 41869/56168 [02:40<00:27, 516.70it/s]Running loglikelihood requests:  75%|███████▍  | 41933/56168 [02:41<00:26, 529.10it/s]Running loglikelihood requests:  75%|███████▍  | 41997/56168 [02:41<00:26, 536.81it/s]Running loglikelihood requests:  75%|███████▍  | 42061/56168 [02:41<00:26, 536.11it/s]Running loglikelihood requests:  75%|███████▍  | 42125/56168 [02:41<00:25, 543.79it/s]Running loglikelihood requests:  75%|███████▌  | 42189/56168 [02:41<00:25, 548.64it/s]Running loglikelihood requests:  75%|███████▌  | 42253/56168 [02:41<00:25, 551.59it/s]Running loglikelihood requests:  75%|███████▌  | 42317/56168 [02:41<00:26, 530.00it/s]Running loglikelihood requests:  75%|███████▌  | 42381/56168 [02:41<00:25, 538.72it/s]Running loglikelihood requests:  76%|███████▌  | 42445/56168 [02:41<00:25, 543.71it/s]Running loglikelihood requests:  76%|███████▌  | 42509/56168 [02:42<00:26, 518.49it/s]Running loglikelihood requests:  76%|███████▌  | 42573/56168 [02:42<00:25, 530.99it/s]Running loglikelihood requests:  76%|███████▌  | 42637/56168 [02:42<00:25, 532.34it/s]Running loglikelihood requests:  76%|███████▌  | 42701/56168 [02:42<00:25, 532.39it/s]Running loglikelihood requests:  76%|███████▌  | 42765/56168 [02:42<00:24, 537.34it/s]Running loglikelihood requests:  76%|███████▋  | 42829/56168 [02:42<00:24, 542.48it/s]Running loglikelihood requests:  76%|███████▋  | 42893/56168 [02:42<00:24, 547.71it/s]Running loglikelihood requests:  76%|███████▋  | 42957/56168 [02:42<00:23, 551.21it/s]Running loglikelihood requests:  77%|███████▋  | 43021/56168 [02:43<00:23, 553.56it/s]Running loglikelihood requests:  77%|███████▋  | 43085/56168 [02:43<00:23, 555.48it/s]Running loglikelihood requests:  77%|███████▋  | 43149/56168 [02:43<00:23, 558.93it/s]Running loglikelihood requests:  77%|███████▋  | 43213/56168 [02:43<00:23, 561.90it/s]Running loglikelihood requests:  77%|███████▋  | 43277/56168 [02:43<00:23, 538.72it/s]Running loglikelihood requests:  77%|███████▋  | 43345/56168 [02:43<00:23, 554.65it/s]Running loglikelihood requests:  77%|███████▋  | 43409/56168 [02:43<00:23, 542.42it/s]Running loglikelihood requests:  77%|███████▋  | 43473/56168 [02:43<00:25, 497.02it/s]Running loglikelihood requests:  78%|███████▊  | 43537/56168 [02:44<00:25, 497.05it/s]Running loglikelihood requests:  78%|███████▊  | 43601/56168 [02:44<00:24, 518.33it/s]Running loglikelihood requests:  78%|███████▊  | 43665/56168 [02:44<00:25, 498.02it/s]Running loglikelihood requests:  78%|███████▊  | 43729/56168 [02:44<00:24, 514.68it/s]Running loglikelihood requests:  78%|███████▊  | 43793/56168 [02:44<00:23, 529.29it/s]Running loglikelihood requests:  78%|███████▊  | 43857/56168 [02:44<00:22, 540.51it/s]Running loglikelihood requests:  78%|███████▊  | 43921/56168 [02:44<00:22, 546.55it/s]Running loglikelihood requests:  78%|███████▊  | 43985/56168 [02:44<00:21, 554.49it/s]Running loglikelihood requests:  78%|███████▊  | 44049/56168 [02:44<00:21, 558.74it/s]Running loglikelihood requests:  79%|███████▊  | 44121/56168 [02:45<00:20, 584.08it/s]Running loglikelihood requests:  79%|███████▊  | 44185/56168 [02:45<00:20, 581.00it/s]Running loglikelihood requests:  79%|███████▉  | 44249/56168 [02:45<00:20, 580.09it/s]Running loglikelihood requests:  79%|███████▉  | 44313/56168 [02:45<00:20, 579.34it/s]Running loglikelihood requests:  79%|███████▉  | 44377/56168 [02:45<00:20, 579.33it/s]Running loglikelihood requests:  79%|███████▉  | 44441/56168 [02:45<00:20, 577.02it/s]Running loglikelihood requests:  79%|███████▉  | 44505/56168 [02:45<00:20, 576.89it/s]Running loglikelihood requests:  79%|███████▉  | 44569/56168 [02:45<00:20, 567.29it/s]Running loglikelihood requests:  79%|███████▉  | 44633/56168 [02:45<00:20, 568.25it/s]Running loglikelihood requests:  80%|███████▉  | 44697/56168 [02:46<00:20, 546.39it/s]Running loglikelihood requests:  80%|███████▉  | 44761/56168 [02:46<00:21, 534.41it/s]Running loglikelihood requests:  80%|███████▉  | 44825/56168 [02:46<00:21, 525.10it/s]Running loglikelihood requests:  80%|███████▉  | 44889/56168 [02:46<00:22, 506.14it/s]Running loglikelihood requests:  80%|████████  | 44953/56168 [02:46<00:21, 511.53it/s]Running loglikelihood requests:  80%|████████  | 45017/56168 [02:46<00:24, 463.65it/s]Running loglikelihood requests:  80%|████████  | 45081/56168 [02:46<00:23, 463.95it/s]Running loglikelihood requests:  80%|████████  | 45145/56168 [02:47<00:22, 489.74it/s]Running loglikelihood requests:  80%|████████  | 45209/56168 [02:47<00:21, 499.27it/s]Running loglikelihood requests:  81%|████████  | 45273/56168 [02:47<00:21, 518.05it/s]Running loglikelihood requests:  81%|████████  | 45337/56168 [02:47<00:20, 536.02it/s]Running loglikelihood requests:  81%|████████  | 45401/56168 [02:47<00:19, 547.60it/s]Running loglikelihood requests:  81%|████████  | 45465/56168 [02:47<00:19, 557.07it/s]Running loglikelihood requests:  81%|████████  | 45529/56168 [02:47<00:18, 563.11it/s]Running loglikelihood requests:  81%|████████  | 45593/56168 [02:47<00:18, 567.75it/s]Running loglikelihood requests:  81%|████████▏ | 45657/56168 [02:47<00:18, 571.52it/s]Running loglikelihood requests:  81%|████████▏ | 45721/56168 [02:48<00:18, 573.77it/s]Running loglikelihood requests:  82%|████████▏ | 45785/56168 [02:48<00:18, 548.44it/s]Running loglikelihood requests:  82%|████████▏ | 45849/56168 [02:48<00:19, 531.66it/s]Running loglikelihood requests:  82%|████████▏ | 45913/56168 [02:48<00:18, 546.27it/s]Running loglikelihood requests:  82%|████████▏ | 45977/56168 [02:48<00:18, 556.04it/s]Running loglikelihood requests:  82%|████████▏ | 46041/56168 [02:48<00:17, 563.51it/s]Running loglikelihood requests:  82%|████████▏ | 46105/56168 [02:48<00:17, 568.03it/s]Running loglikelihood requests:  82%|████████▏ | 46169/56168 [02:48<00:18, 536.44it/s]Running loglikelihood requests:  82%|████████▏ | 46233/56168 [02:48<00:18, 547.68it/s]Running loglikelihood requests:  82%|████████▏ | 46297/56168 [02:49<00:17, 556.12it/s]Running loglikelihood requests:  83%|████████▎ | 46361/56168 [02:49<00:17, 557.79it/s]Running loglikelihood requests:  83%|████████▎ | 46425/56168 [02:49<00:17, 564.79it/s]Running loglikelihood requests:  83%|████████▎ | 46489/56168 [02:49<00:17, 568.75it/s]Running loglikelihood requests:  83%|████████▎ | 46553/56168 [02:49<00:16, 573.79it/s]Running loglikelihood requests:  83%|████████▎ | 46617/56168 [02:49<00:16, 574.98it/s]Running loglikelihood requests:  83%|████████▎ | 46681/56168 [02:49<00:16, 579.89it/s]Running loglikelihood requests:  83%|████████▎ | 46745/56168 [02:49<00:16, 582.19it/s]Running loglikelihood requests:  83%|████████▎ | 46809/56168 [02:49<00:16, 582.82it/s]Running loglikelihood requests:  83%|████████▎ | 46873/56168 [02:50<00:15, 584.21it/s]Running loglikelihood requests:  84%|████████▎ | 46937/56168 [02:50<00:15, 583.51it/s]Running loglikelihood requests:  84%|████████▎ | 47001/56168 [02:50<00:15, 584.26it/s]Running loglikelihood requests:  84%|████████▍ | 47065/56168 [02:50<00:15, 583.68it/s]Running loglikelihood requests:  84%|████████▍ | 47129/56168 [02:50<00:16, 543.75it/s]Running loglikelihood requests:  84%|████████▍ | 47193/56168 [02:50<00:16, 558.07it/s]Running loglikelihood requests:  84%|████████▍ | 47257/56168 [02:50<00:17, 516.04it/s]Running loglikelihood requests:  84%|████████▍ | 47321/56168 [02:50<00:18, 489.41it/s]Running loglikelihood requests:  84%|████████▍ | 47385/56168 [02:51<00:17, 509.39it/s]Running loglikelihood requests:  84%|████████▍ | 47449/56168 [02:51<00:17, 506.20it/s]Running loglikelihood requests:  85%|████████▍ | 47513/56168 [02:51<00:16, 526.25it/s]Running loglikelihood requests:  85%|████████▍ | 47577/56168 [02:51<00:16, 533.06it/s]Running loglikelihood requests:  85%|████████▍ | 47641/56168 [02:51<00:15, 544.29it/s]Running loglikelihood requests:  85%|████████▍ | 47705/56168 [02:51<00:15, 556.05it/s]Running loglikelihood requests:  85%|████████▌ | 47773/56168 [02:51<00:14, 573.41it/s]Running loglikelihood requests:  85%|████████▌ | 47837/56168 [02:51<00:14, 578.10it/s]Running loglikelihood requests:  85%|████████▌ | 47901/56168 [02:51<00:14, 583.12it/s]Running loglikelihood requests:  85%|████████▌ | 47965/56168 [02:52<00:14, 584.03it/s]Running loglikelihood requests:  86%|████████▌ | 48029/56168 [02:52<00:13, 587.71it/s]Running loglikelihood requests:  86%|████████▌ | 48093/56168 [02:52<00:13, 590.48it/s]Running loglikelihood requests:  86%|████████▌ | 48157/56168 [02:52<00:13, 590.23it/s]Running loglikelihood requests:  86%|████████▌ | 48225/56168 [02:52<00:13, 602.80it/s]Running loglikelihood requests:  86%|████████▌ | 48289/56168 [02:52<00:13, 600.64it/s]Running loglikelihood requests:  86%|████████▌ | 48353/56168 [02:52<00:13, 597.02it/s]Running loglikelihood requests:  86%|████████▌ | 48417/56168 [02:52<00:12, 597.08it/s]Running loglikelihood requests:  86%|████████▋ | 48481/56168 [02:52<00:12, 595.80it/s]Running loglikelihood requests:  86%|████████▋ | 48545/56168 [02:53<00:12, 591.60it/s]Running loglikelihood requests:  87%|████████▋ | 48609/56168 [02:53<00:12, 592.68it/s]Running loglikelihood requests:  87%|████████▋ | 48673/56168 [02:53<00:12, 591.78it/s]Running loglikelihood requests:  87%|████████▋ | 48737/56168 [02:53<00:12, 602.60it/s]Running loglikelihood requests:  87%|████████▋ | 48805/56168 [02:53<00:12, 602.29it/s]Running loglikelihood requests:  87%|████████▋ | 48869/56168 [02:53<00:11, 611.24it/s]Running loglikelihood requests:  87%|████████▋ | 48933/56168 [02:53<00:11, 613.39it/s]Running loglikelihood requests:  87%|████████▋ | 48997/56168 [02:53<00:11, 614.42it/s]Running loglikelihood requests:  87%|████████▋ | 49061/56168 [02:53<00:11, 618.32it/s]Running loglikelihood requests:  87%|████████▋ | 49125/56168 [02:53<00:11, 621.66it/s]Running loglikelihood requests:  88%|████████▊ | 49189/56168 [02:54<00:11, 625.20it/s]Running loglikelihood requests:  88%|████████▊ | 49253/56168 [02:54<00:11, 625.68it/s]Running loglikelihood requests:  88%|████████▊ | 49317/56168 [02:54<00:10, 626.83it/s]Running loglikelihood requests:  88%|████████▊ | 49381/56168 [02:54<00:10, 627.51it/s]Running loglikelihood requests:  88%|████████▊ | 49445/56168 [02:54<00:10, 629.62it/s]Running loglikelihood requests:  88%|████████▊ | 49509/56168 [02:54<00:10, 631.99it/s]Running loglikelihood requests:  88%|████████▊ | 49573/56168 [02:54<00:10, 624.01it/s]Running loglikelihood requests:  88%|████████▊ | 49643/56168 [02:54<00:10, 646.26it/s]Running loglikelihood requests:  88%|████████▊ | 49708/56168 [02:54<00:09, 646.83it/s]Running loglikelihood requests:  89%|████████▊ | 49773/56168 [02:55<00:10, 637.52it/s]Running loglikelihood requests:  89%|████████▊ | 49837/56168 [02:55<00:10, 631.86it/s]Running loglikelihood requests:  89%|████████▉ | 49901/56168 [02:55<00:10, 589.24it/s]Running loglikelihood requests:  89%|████████▉ | 49961/56168 [02:55<00:10, 592.16it/s]Running loglikelihood requests:  89%|████████▉ | 50021/56168 [02:55<00:10, 594.39it/s]Running loglikelihood requests:  89%|████████▉ | 50085/56168 [02:55<00:10, 563.88it/s]Running loglikelihood requests:  89%|████████▉ | 50153/56168 [02:55<00:10, 559.62it/s]Running loglikelihood requests:  89%|████████▉ | 50217/56168 [02:55<00:10, 564.68it/s]Running loglikelihood requests:  90%|████████▉ | 50281/56168 [02:55<00:10, 554.36it/s]Running loglikelihood requests:  90%|████████▉ | 50345/56168 [02:56<00:10, 570.45it/s]Running loglikelihood requests:  90%|████████▉ | 50409/56168 [02:56<00:09, 583.76it/s]Running loglikelihood requests:  90%|████████▉ | 50473/56168 [02:56<00:09, 593.05it/s]Running loglikelihood requests:  90%|████████▉ | 50537/56168 [02:56<00:09, 600.58it/s]Running loglikelihood requests:  90%|█████████ | 50601/56168 [02:56<00:09, 607.32it/s]Running loglikelihood requests:  90%|█████████ | 50665/56168 [02:56<00:08, 611.69it/s]Running loglikelihood requests:  90%|█████████ | 50729/56168 [02:56<00:08, 615.71it/s]Running loglikelihood requests:  90%|█████████ | 50793/56168 [02:56<00:08, 618.67it/s]Running loglikelihood requests:  91%|█████████ | 50857/56168 [02:56<00:08, 619.70it/s]Running loglikelihood requests:  91%|█████████ | 50921/56168 [02:56<00:08, 595.45it/s]Running loglikelihood requests:  91%|█████████ | 50985/56168 [02:57<00:08, 604.19it/s]Running loglikelihood requests:  91%|█████████ | 51049/56168 [02:57<00:08, 578.47it/s]Running loglikelihood requests:  91%|█████████ | 51113/56168 [02:57<00:08, 576.19it/s]Running loglikelihood requests:  91%|█████████ | 51177/56168 [02:57<00:08, 568.68it/s]Running loglikelihood requests:  91%|█████████ | 51241/56168 [02:57<00:09, 540.51it/s]Running loglikelihood requests:  91%|█████████▏| 51305/56168 [02:57<00:08, 563.35it/s]Running loglikelihood requests:  91%|█████████▏| 51369/56168 [02:57<00:08, 562.82it/s]Running loglikelihood requests:  92%|█████████▏| 51433/56168 [02:57<00:08, 565.83it/s]Running loglikelihood requests:  92%|█████████▏| 51497/56168 [02:58<00:08, 549.91it/s]Running loglikelihood requests:  92%|█████████▏| 51561/56168 [02:58<00:08, 558.48it/s]Running loglikelihood requests:  92%|█████████▏| 51635/56168 [02:58<00:07, 607.87it/s]Running loglikelihood requests:  92%|█████████▏| 51709/56168 [02:58<00:06, 644.74it/s]Running loglikelihood requests:  92%|█████████▏| 51785/56168 [02:58<00:06, 677.28it/s]Running loglikelihood requests:  92%|█████████▏| 51869/56168 [02:58<00:05, 724.40it/s]Running loglikelihood requests:  92%|█████████▏| 51945/56168 [02:58<00:07, 588.06it/s]Running loglikelihood requests:  93%|█████████▎| 52033/56168 [02:58<00:06, 661.05it/s]Running loglikelihood requests:  93%|█████████▎| 52121/56168 [02:58<00:05, 718.40it/s]Running loglikelihood requests:  93%|█████████▎| 52205/56168 [02:59<00:06, 610.32it/s]Running loglikelihood requests:  93%|█████████▎| 52293/56168 [02:59<00:05, 674.95it/s]Running loglikelihood requests:  93%|█████████▎| 52381/56168 [02:59<00:05, 727.30it/s]Running loglikelihood requests:  93%|█████████▎| 52461/56168 [02:59<00:06, 609.52it/s]Running loglikelihood requests:  94%|█████████▎| 52529/56168 [02:59<00:05, 625.42it/s]Running loglikelihood requests:  94%|█████████▎| 52612/56168 [02:59<00:05, 677.04it/s]Running loglikelihood requests:  94%|█████████▍| 52693/56168 [02:59<00:04, 711.99it/s]Running loglikelihood requests:  94%|█████████▍| 52779/56168 [02:59<00:04, 752.66it/s]Running loglikelihood requests:  94%|█████████▍| 52858/56168 [03:00<00:05, 616.60it/s]Running loglikelihood requests:  94%|█████████▍| 52949/56168 [03:00<00:04, 688.60it/s]Running loglikelihood requests:  94%|█████████▍| 53037/56168 [03:00<00:05, 605.77it/s]Running loglikelihood requests:  95%|█████████▍| 53135/56168 [03:00<00:04, 693.09it/s]Running loglikelihood requests:  95%|█████████▍| 53229/56168 [03:00<00:04, 623.09it/s]Running loglikelihood requests:  95%|█████████▍| 53327/56168 [03:00<00:04, 704.29it/s]Running loglikelihood requests:  95%|█████████▌| 53421/56168 [03:00<00:04, 631.70it/s]Running loglikelihood requests:  95%|█████████▌| 53520/56168 [03:01<00:03, 712.27it/s]Running loglikelihood requests:  95%|█████████▌| 53613/56168 [03:01<00:04, 634.86it/s]Running loglikelihood requests:  96%|█████████▌| 53741/56168 [03:01<00:03, 662.15it/s]Running loglikelihood requests:  96%|█████████▌| 53869/56168 [03:01<00:03, 679.62it/s]Running loglikelihood requests:  96%|█████████▌| 53997/56168 [03:01<00:03, 690.63it/s]Running loglikelihood requests:  96%|█████████▋| 54125/56168 [03:01<00:02, 698.25it/s]Running loglikelihood requests:  97%|█████████▋| 54253/56168 [03:02<00:02, 705.12it/s]Running loglikelihood requests:  97%|█████████▋| 54381/56168 [03:02<00:02, 707.55it/s]Running loglikelihood requests:  97%|█████████▋| 54509/56168 [03:02<00:02, 709.09it/s]Running loglikelihood requests:  97%|█████████▋| 54637/56168 [03:02<00:02, 711.40it/s]Running loglikelihood requests:  98%|█████████▊| 54765/56168 [03:02<00:01, 713.01it/s]Running loglikelihood requests:  98%|█████████▊| 54893/56168 [03:02<00:01, 714.09it/s]Running loglikelihood requests:  98%|█████████▊| 55021/56168 [03:03<00:01, 714.75it/s]Running loglikelihood requests:  98%|█████████▊| 55149/56168 [03:03<00:01, 718.07it/s]Running loglikelihood requests:  98%|█████████▊| 55277/56168 [03:03<00:01, 723.83it/s]Running loglikelihood requests:  99%|█████████▊| 55405/56168 [03:03<00:01, 726.94it/s]Running loglikelihood requests:  99%|█████████▉| 55533/56168 [03:03<00:00, 728.84it/s]Running loglikelihood requests:  99%|█████████▉| 55661/56168 [03:04<00:00, 733.98it/s]Running loglikelihood requests:  99%|█████████▉| 55789/56168 [03:04<00:00, 736.44it/s]Running loglikelihood requests: 100%|█████████▉| 55917/56168 [03:04<00:00, 751.70it/s]Running loglikelihood requests: 100%|█████████▉| 56045/56168 [03:04<00:00, 774.93it/s]Running loglikelihood requests: 100%|██████████| 56168/56168 [03:04<00:00, 304.26it/s]
2025-05-12:22:35:59,038 INFO     [evaluation_tracker.py:269] Output path not provided, skipping saving results aggregated
hf (pretrained=meta-llama/Llama-2-7b-chat-hf,tokenizer=meta-llama/Llama-2-7b-hf), gen_kwargs: (None), limit: None, num_fewshot: None, batch_size: 16
|                 Tasks                 |Version|Filter|n-shot|Metric|   |Value |   |Stderr|
|---------------------------------------|------:|------|-----:|------|---|-----:|---|-----:|
|mmlu                                   |      2|none  |      |acc   |↑  |0.4635|±  |0.0040|
| - humanities                          |      2|none  |      |acc   |↑  |0.4332|±  |0.0069|
|  - formal_logic                       |      1|none  |     0|acc   |↑  |0.2381|±  |0.0381|
|  - high_school_european_history       |      1|none  |     0|acc   |↑  |0.5818|±  |0.0385|
|  - high_school_us_history             |      1|none  |     0|acc   |↑  |0.6618|±  |0.0332|
|  - high_school_world_history          |      1|none  |     0|acc   |↑  |0.6160|±  |0.0317|
|  - international_law                  |      1|none  |     0|acc   |↑  |0.5950|±  |0.0448|
|  - jurisprudence                      |      1|none  |     0|acc   |↑  |0.5741|±  |0.0478|
|  - logical_fallacies                  |      1|none  |     0|acc   |↑  |0.5828|±  |0.0387|
|  - moral_disputes                     |      1|none  |     0|acc   |↑  |0.5029|±  |0.0269|
|  - moral_scenarios                    |      1|none  |     0|acc   |↑  |0.2425|±  |0.0143|
|  - philosophy                         |      1|none  |     0|acc   |↑  |0.5273|±  |0.0284|
|  - prehistory                         |      1|none  |     0|acc   |↑  |0.5463|±  |0.0277|
|  - professional_law                   |      1|none  |     0|acc   |↑  |0.3598|±  |0.0123|
|  - world_religions                    |      1|none  |     0|acc   |↑  |0.6901|±  |0.0355|
| - other                               |      2|none  |      |acc   |↑  |0.5484|±  |0.0086|
|  - business_ethics                    |      1|none  |     0|acc   |↑  |0.4500|±  |0.0500|
|  - clinical_knowledge                 |      1|none  |     0|acc   |↑  |0.5509|±  |0.0306|
|  - college_medicine                   |      1|none  |     0|acc   |↑  |0.3815|±  |0.0370|
|  - global_facts                       |      1|none  |     0|acc   |↑  |0.4000|±  |0.0492|
|  - human_aging                        |      1|none  |     0|acc   |↑  |0.5830|±  |0.0331|
|  - management                         |      1|none  |     0|acc   |↑  |0.6796|±  |0.0462|
|  - marketing                          |      1|none  |     0|acc   |↑  |0.7564|±  |0.0281|
|  - medical_genetics                   |      1|none  |     0|acc   |↑  |0.4800|±  |0.0502|
|  - miscellaneous                      |      1|none  |     0|acc   |↑  |0.6884|±  |0.0166|
|  - nutrition                          |      1|none  |     0|acc   |↑  |0.4902|±  |0.0286|
|  - professional_accounting            |      1|none  |     0|acc   |↑  |0.3652|±  |0.0287|
|  - professional_medicine              |      1|none  |     0|acc   |↑  |0.4154|±  |0.0299|
|  - virology                           |      1|none  |     0|acc   |↑  |0.4639|±  |0.0388|
| - social sciences                     |      2|none  |      |acc   |↑  |0.5297|±  |0.0087|
|  - econometrics                       |      1|none  |     0|acc   |↑  |0.2982|±  |0.0430|
|  - high_school_geography              |      1|none  |     0|acc   |↑  |0.5909|±  |0.0350|
|  - high_school_government_and_politics|      1|none  |     0|acc   |↑  |0.6788|±  |0.0337|
|  - high_school_macroeconomics         |      1|none  |     0|acc   |↑  |0.4000|±  |0.0248|
|  - high_school_microeconomics         |      1|none  |     0|acc   |↑  |0.3571|±  |0.0311|
|  - high_school_psychology             |      1|none  |     0|acc   |↑  |0.6330|±  |0.0207|
|  - human_sexuality                    |      1|none  |     0|acc   |↑  |0.5649|±  |0.0435|
|  - professional_psychology            |      1|none  |     0|acc   |↑  |0.4673|±  |0.0202|
|  - public_relations                   |      1|none  |     0|acc   |↑  |0.5364|±  |0.0478|
|  - security_studies                   |      1|none  |     0|acc   |↑  |0.5020|±  |0.0320|
|  - sociology                          |      1|none  |     0|acc   |↑  |0.7413|±  |0.0310|
|  - us_foreign_policy                  |      1|none  |     0|acc   |↑  |0.7100|±  |0.0456|
| - stem                                |      2|none  |      |acc   |↑  |0.3606|±  |0.0084|
|  - abstract_algebra                   |      1|none  |     0|acc   |↑  |0.3000|±  |0.0461|
|  - anatomy                            |      1|none  |     0|acc   |↑  |0.4444|±  |0.0429|
|  - astronomy                          |      1|none  |     0|acc   |↑  |0.4934|±  |0.0407|
|  - college_biology                    |      1|none  |     0|acc   |↑  |0.4514|±  |0.0416|
|  - college_chemistry                  |      1|none  |     0|acc   |↑  |0.2500|±  |0.0435|
|  - college_computer_science           |      1|none  |     0|acc   |↑  |0.3200|±  |0.0469|
|  - college_mathematics                |      1|none  |     0|acc   |↑  |0.3100|±  |0.0465|
|  - college_physics                    |      1|none  |     0|acc   |↑  |0.1961|±  |0.0395|
|  - computer_security                  |      1|none  |     0|acc   |↑  |0.6000|±  |0.0492|
|  - conceptual_physics                 |      1|none  |     0|acc   |↑  |0.4000|±  |0.0320|
|  - electrical_engineering             |      1|none  |     0|acc   |↑  |0.4483|±  |0.0414|
|  - elementary_mathematics             |      1|none  |     0|acc   |↑  |0.2778|±  |0.0231|
|  - high_school_biology                |      1|none  |     0|acc   |↑  |0.4935|±  |0.0284|
|  - high_school_chemistry              |      1|none  |     0|acc   |↑  |0.3399|±  |0.0333|
|  - high_school_computer_science       |      1|none  |     0|acc   |↑  |0.4000|±  |0.0492|
|  - high_school_mathematics            |      1|none  |     0|acc   |↑  |0.2704|±  |0.0271|
|  - high_school_physics                |      1|none  |     0|acc   |↑  |0.2781|±  |0.0366|
|  - high_school_statistics             |      1|none  |     0|acc   |↑  |0.2685|±  |0.0302|
|  - machine_learning                   |      1|none  |     0|acc   |↑  |0.3571|±  |0.0455|

|      Groups      |Version|Filter|n-shot|Metric|   |Value |   |Stderr|
|------------------|------:|------|------|------|---|-----:|---|-----:|
|mmlu              |      2|none  |      |acc   |↑  |0.4635|±  |0.0040|
| - humanities     |      2|none  |      |acc   |↑  |0.4332|±  |0.0069|
| - other          |      2|none  |      |acc   |↑  |0.5484|±  |0.0086|
| - social sciences|      2|none  |      |acc   |↑  |0.5297|±  |0.0087|
| - stem           |      2|none  |      |acc   |↑  |0.3606|±  |0.0084|

